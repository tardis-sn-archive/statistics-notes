(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    511997,      10624]
NotebookOptionsPosition[    505643,      10422]
NotebookOutlinePosition[    505977,      10437]
CellTagsIndexPosition[    505934,      10434]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test feasibility of posterior model for TARDIS", "Chapter",
 CellChangeTimes->{{3.648531711823205*^9, 3.648531719162675*^9}, {
  3.649069524465166*^9, 3.6490695282489643`*^9}}],

Cell[CellGroupData[{

Cell["Poisson posterior predictive approaches a Gaussian", "Section",
 CellChangeTimes->{{3.648531724543137*^9, 3.6485317404390907`*^9}, {
  3.648912217550661*^9, 3.648912224514195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PoissonPostPred", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ni", "!"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"Ni", "+", "ni"}], ")"}]}], ")"}], "!"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"Ni", "+", "ni", "+", 
           RowBox[{"1", "/", "2"}]}]], 
         SuperscriptBox["4", "Ni"], 
         RowBox[{"Ni", "!"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "ni"}], ")"}], "!"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Ni", "+", "ni"}], ")"}], "!"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Ni", ",", "0", ",", "\[Infinity]", ",", "1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"ni", ">", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PNgivenn", "[", 
   RowBox[{"Ni_", ",", "ni_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"Pochhammer", "[", 
    RowBox[{
     RowBox[{"Ni", "+", "ni", "+", "1"}], ",", 
     RowBox[{"Ni", "+", "ni"}]}], "]"}], 
   RowBox[{
    RowBox[{"Pochhammer", "[", 
     RowBox[{
      RowBox[{"ni", "+", "1"}], ",", "ni"}], "]"}], 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"3", "Ni"}], "+", "ni", "+", 
      RowBox[{"1", "/", "2"}]}]], 
    RowBox[{"Ni", "!"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"CharacteristicFunction", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CharacteristicFunction", "[", 
  RowBox[{"PoissonPostPred", ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Mean", "[", "PoissonPostPred", "]"}], ",", 
    RowBox[{"Variance", "[", "PoissonPostPred", "]"}]}], "}"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ni", ">", "0"}], ",", 
       RowBox[{"Ni", ">", "0"}]}], "}"}], ",", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"PNgivenn", "[", 
           RowBox[{"Ni", ",", "ni"}], "]"}], ",", "Ni"}], "]"}], "\[Equal]", 
        "0"}], ",", "Ni"}], "]"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/Wp53BJW/deO1nP6D4LoR9PCLoDoVwY7LoHouY2l
QmxA2mT2LGEQzX7vjASIvrCyVxJEX+u1kwPR85ydwHS+/NwtO4D09CtbwXTS
3L+7QfQjNqY9ILqFd4bEfiB9RG2eKoju755kAaK91213B9Ec+7RyQbRW3rl2
EP3JlWcFiOaJTdoIouMTNj8D0SvMH74A0aYSPOwHgPQW1r9iIPrKm0d6INov
NNkJRLf6nQoF0StjzoJpwaPfYkD0B5/HSSD66qbubSB62gzVXSA6+pfWgcMg
PvfjsyCa4dS0hyD6ie3pZyA6jk0t4SiQTtEJzQXRU1R1O0H0tEs3+kE0ABQx
pmY=
  "]],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Mu]"}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["t", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"]}], "2"]}]]], "Output",
 CellChangeTimes->{3.6489576138478813`*^9}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"2", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], "-", "ni"}]]], "Output",
 CellChangeTimes->{3.648957614488924*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", "ni"}], ",", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "ni"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.648957616790854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ni", "=", "50"}], ",", "\[Sigma]"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", "=", 
     SqrtBox[
      RowBox[{
       RowBox[{"2", "ni"}], "+", "1"}]]}], ";", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PNgivenn", "[", 
         RowBox[{"Ni", ",", "ni"}], "]"}], ",", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"PoissonPostPred", "[", "ni", "]"}], ",", "Ni"}], "]"}], 
        ",", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"ni", "-", "1"}], ",", "\[Sigma]"}], "]"}], ",", "Ni"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ni", ",", "0", ",", 
        RowBox[{"ni", "+", 
         RowBox[{"3", "\[Sigma]"}]}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6485317469579973`*^9, 3.648531980487821*^9}, {
   3.6485320987059183`*^9, 3.648532117755971*^9}, {3.648532627672072*^9, 
   3.6485326368314457`*^9}, {3.648532678402103*^9, 3.648532684426979*^9}, {
   3.648532721954814*^9, 3.648532722070754*^9}, {3.648898468910087*^9, 
   3.648898469682201*^9}, {3.648898527925462*^9, 3.64889852806334*^9}, {
   3.64891155675165*^9, 3.648911660942232*^9}, {3.648911812579536*^9, 
   3.648911933740026*^9}, {3.648912233335697*^9, 3.6489124464509478`*^9}, {
   3.6489127043835382`*^9, 3.6489127790738583`*^9}, {3.648913205605514*^9, 
   3.648913223038044*^9}, {3.648913464377955*^9, 3.648913591906946*^9}, {
   3.6489137830914097`*^9, 3.648913939104163*^9}, {3.648914094322085*^9, 
   3.648914094417561*^9}, {3.648914151711556*^9, 3.648914199103142*^9}, {
   3.64891486836558*^9, 3.648914897174876*^9}, {3.648921089343061*^9, 
   3.6489211990951643`*^9}, {3.648921356712158*^9, 3.648921398351305*^9}, {
   3.6489244171882772`*^9, 3.648924522661669*^9}, {3.648924745410837*^9, 
   3.648924805972595*^9}, 3.648959358045822*^9, {3.648959445985108*^9, 
   3.648959456728897*^9}, {3.648963041639205*^9, 3.64896304344989*^9}, {
   3.6489632838081837`*^9, 3.6489633629434423`*^9}, {3.6489646369066267`*^9, 
   3.64896471249039*^9}, {3.648997081004272*^9, 3.648997088118867*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
b+JxSBqDDZxP4juzz/cY+h/qexGM
     "]]}, {}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
UycMYOP7WwfS17jigw9jk6vdDeB/MNNwBA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 50 + 3 101^Rational[1, 2]}, {0., 0.04004460518088864}}, {{
     0, 80.14962686336267}, {0., 0.04004460518088864}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.648912447217044*^9, {3.648912713505883*^9, 3.648912780041821*^9}, 
   3.648913224506585*^9, 3.648913802106492*^9, {3.648913868628381*^9, 
   3.6489139090489264`*^9}, 3.6489139400653753`*^9, 3.648914095251773*^9, {
   3.64891417678328*^9, 3.6489141995669823`*^9}, {3.648914884354954*^9, 
   3.6489148980798273`*^9}, 3.648921090623096*^9, 3.648921202776215*^9, {
   3.648921380533987*^9, 3.648921399389903*^9}, 3.648924422010282*^9, {
   3.6489244583942432`*^9, 3.648924523454527*^9}, {3.6489247546278973`*^9, 
   3.648924806561738*^9}, 3.6489593592026587`*^9, 3.6489594616427794`*^9, 
   3.6489594941184807`*^9, 3.64896304453257*^9, {3.6489632861028757`*^9, 
   3.648963363401251*^9}, {3.648964638137257*^9, 3.648964712964837*^9}, {
   3.64899708216429*^9, 
   3.648997088802281*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdfHdYVVfW94n3XtCYNklmknmnJJPMvJmWvEmMJd1EY2JMzKT3qNEoiL3X
WJAiinQEAQEBAUWBS++9996l9y693u/8drmA7y1x5vvje77nSQT2OXuttdde
e/V9PtywT++n7Rv26W/c8OS7ezbs0tPfuPfJVTv3iEOSewThHj1BEMqfFPC7
QvyV/aMQ/1Po4x+MzPy+ifyQ1B86dEixefNm/C/MI//q4MnyioqKxoMHD07o
6enhnZdramreJ1Pmk5cUFLCq194lDxc+NDQ05Ofg4DCwffv2/NOnT/+9paVF
3RSBzXmmra0t5ezZs0Pbtm3DT/ytdo5kzkLeLS4uTjx37txj/f397JHMy9nZ
eVtsbOyC8fHxndHR0f729vaCilWoeo9R5HTlypUtCQkJssnJyXdKS0uTRarU
TeGriDU3N3+tqqoKz1YXFRWlaJrDVvE4XYUwiypGqeRxcUWY+kRXV5cwj66s
+ujRow8PDg7ir0cHBgbAHIpeNrOHql5iJDYdOHDggZGRETJDXNqIgYGBuil8
WdhI6dTUFP5aODo6OqxpzuxlkVWtIQML8KLc1tb2weHhYYwMikDnTU9Pk/dE
4GNbt25lCKVB4nvviduKv7AqtnYNUxZOigIC1oLFb5WXl2cZGRlpQbMw09jY
GNukOzEx8VF+fn6SmZmZ2jkatusDKliQEjdXV1f8hSn3zAIxrq+vzxb3VGdn
Z+GpU6eAddbiVM3ghGKTTgcGBvbv2LGj6OTJk883NDSow8LnvCmeHDwHCoy/
XllZqXaO9sWBr727du3CX7NlCKcOB/M9OvWkXC4/GhISQrUKXZmq1xmVkpIT
J04sqqurY4i1vb+w6tixY4tra2shjpiHv9WRpGlVqym4iuPHj39YUFAwX1yd
nnjYi0Xm4kmAnZ2dQVxc3P0iyCOhoaGB4t8CWyLexXuzl6jyfUYyNs7Y39//
3rGxsc9ycnI4yZrmYDlLxGXihELlkeWom6N9mQCRZ2hoiIObK/58iXF86a1b
t2oPHz4MGYBIQmbYnAVgy2xVqfJdRi5YcsnDw6NHFBAsjzzTMgeavUC0DqAJ
tL1aXV2tdo6GJZJ/1/7fef4Y+bHkD32DvXjnu7yqzN0JBUlHorMTdiYVJtvK
U71/js0PPB6ZFb8poywd43i+N7ko4mJgqod+emny/ri8pIMxuUnrcyozTEMz
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
GlVq6/+55+Tx3cwiv7NwWLjn/wDyv+dh\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"k", " ", "\[Element]", "Integers"}], "&&", " ", 
    RowBox[{"k", ">", "0"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"PNgivenn", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "n"}], "]"}], "/", 
     RowBox[{"PNgivenn", "[", 
      RowBox[{
       RowBox[{"n", "-", "1", "+", "k"}], ",", "n"}], "]"}]}], "//", 
    "FullSimplify"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PNgivenn", "[", 
    RowBox[{
     RowBox[{"n", "-", "1"}], ",", "n"}], "]"}], "/", 
   RowBox[{"PNgivenn", "[", 
    RowBox[{
     RowBox[{"n", "-", "2"}], ",", "n"}], "]"}]}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.648921742003667*^9, 3.648921775452838*^9}, {
  3.648921811745282*^9, 3.648921828257184*^9}, {3.6489219618912077`*^9, 
  3.648921982946907*^9}, {3.648922015494891*^9, 3.648922018571499*^9}, {
  3.648922110498698*^9, 3.648922121367742*^9}, {3.648961184903584*^9, 
  3.648961237320806*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", "k"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"k", "+", "n"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     RowBox[{"2", " ", "n"}]}], "]"}]}], 
  RowBox[{
   RowBox[{"Gamma", "[", "n", "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", "k", "+", 
     RowBox[{"2", " ", "n"}]}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.6489217594947243`*^9, 3.648921775994607*^9}, {
   3.648921818114818*^9, 3.648921831233232*^9}, 3.648921983640767*^9, 
   3.648922019446167*^9, 3.648922123180397*^9, 3.648961188525607*^9, 
   3.6489612393266993`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.6489217594947243`*^9, 3.648921775994607*^9}, {
   3.648921818114818*^9, 3.648921831233232*^9}, 3.648921983640767*^9, 
   3.648922019446167*^9, 3.648922123180397*^9, 3.648961188525607*^9, 
   3.648961239359593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"PNgivenn", "[", 
    RowBox[{"Ni", ",", "ni"}], "]"}], ",", 
   RowBox[{"ni", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.648961505587854*^9, 3.64896154430197*^9}, {
  3.648961596667069*^9, 3.6489616000847673`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6489615464618597`*^9}]
}, Open  ]],

Cell["\<\
Trying to estimate mean and variance of asymptotic Gaussian. No success!\
\>", "Text",
 CellChangeTimes->{{3.649070237331205*^9, 3.649070252232807*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"PNgivenn", "[", 
        RowBox[{"Ni", ",", "ni"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ni", ",", "Infinity", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x_", "!"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", "x"}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6489616100700502`*^9, 3.648961617797763*^9}, {
  3.648961769165142*^9, 3.6489618017795897`*^9}, {3.64896200654004*^9, 
  3.648962010855246*^9}, {3.648962127239936*^9, 3.648962184789353*^9}, {
  3.6489622202815723`*^9, 3.648962234907978*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ni", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "Ni"}]}], ")"}]}], 
   RowBox[{"4", " ", "ni"}]], "-", 
  RowBox[{"ni", " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "-", 
  RowBox[{"Ni", " ", 
   RowBox[{"Log", "[", 
    FractionBox["1", "ni"], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", 
      RowBox[{"2", " ", "Ni"}]}]], 
    RowBox[{"Ni", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Log", "[", "Ni", "]"}]}], ")"}]}]], "]"}]}]], "Output",
 CellChangeTimes->{
  3.648961618291794*^9, 3.648961804583995*^9, 3.648962012413693*^9, 
   3.648962185991845*^9, {3.6489622262665577`*^9, 3.648962236279627*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  InterpretationBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], " ", "ni"}]}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Ni"}], " ", 
       RowBox[{"Log", "[", 
        FractionBox["1", "ni"], "]"}]}], "+", 
      RowBox[{"Log", "[", 
       FractionBox[
        SuperscriptBox["2", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{"2", " ", "Ni"}]}]], 
        RowBox[{
         RowBox[{"-", "Ni"}], "+", 
         RowBox[{"Ni", " ", 
          RowBox[{"Log", "[", "Ni", "]"}]}]}]], "]"}]}], ")"}], "+", 
    FractionBox[
     RowBox[{"Ni", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["Ni", "2"]}]}], 
     RowBox[{"4", " ", "ni"}]], "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", 
       FractionBox["1", "ni"], "]"}], "2"],
     SeriesData[$CellContext`ni, 
      DirectedInfinity[1], {}, -1, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`ni, 
    DirectedInfinity[
    1], {-Log[2], -$CellContext`Ni Log[$CellContext`ni^(-1)] + 
     Log[2^(Rational[-1, 2] - 
         2 $CellContext`Ni)/(-$CellContext`Ni + $CellContext`Ni 
        Log[$CellContext`Ni])], 
     Rational[1, 4] ($CellContext`Ni + 3 $CellContext`Ni^2)}, -1, 2, 1],
   Editable->False], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ni", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["Ni", "2"]}]}], 
   RowBox[{"4", " ", "ni"}]], "-", 
  RowBox[{"ni", " ", 
   RowBox[{"Log", "[", "2", "]"}]}], "-", 
  RowBox[{"Ni", " ", 
   RowBox[{"Log", "[", 
    FractionBox["1", "ni"], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", 
      RowBox[{"2", " ", "Ni"}]}]], 
    RowBox[{
     RowBox[{"-", "Ni"}], "+", 
     RowBox[{"Ni", " ", 
      RowBox[{"Log", "[", "Ni", "]"}]}]}]], "]"}]}]], "Output",
 CellChangeTimes->{3.6489621951473827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], "-", "n"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "\[Infinity]", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.648962502375805*^9, 3.648962509302389*^9}, {
  3.648962768849484*^9, 3.648962818954515*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"2", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "t"}]]}], ")"}], 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], "-", "n"}]]], "Output",
 CellChangeTimes->{
  3.648962509814856*^9, {3.648962785973415*^9, 3.648962821122629*^9}}]
}, Open  ]],

Cell["No packet seen is also information", "Text",
 CellChangeTimes->{{3.649067782529361*^9, 3.649067794452949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PNgivenn", "[", 
    RowBox[{"Ni", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Ni", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"PNgivenn", "[", 
    RowBox[{"Ni", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Ni", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649067797342671*^9, 3.6490678093237333`*^9}, {
  3.6490685346011887`*^9, 3.649068618839189*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
g+EvOz0vgWKGzPzyMpXoG3N/pQ5J4H8nygJ2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0.00012167006753866398`, 0.7071064811076362}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.649067804985879*^9, 3.649067809712986*^9}, 
   3.649068555696351*^9, {3.6490685909426613`*^9, 3.6490686192546988`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.649067804985879*^9, 3.649067809712986*^9}, 
   3.649068555696351*^9, {3.6490685909426613`*^9, 3.6490686192619333`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some luminosity samples from real packets ", "Section",
 CellChangeTimes->{{3.6485330596499863`*^9, 3.648533076806932*^9}, 
   3.6488750966395187`*^9, 3.64891315457729*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<samples.dat\>\""}], 
      "}"}], "]"}], ",", "samples", ",", "\"\<List\>\""}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.64905851657873*^9, 3.649058560074576*^9}, {
  3.649058605644607*^9, 3.6490586424378366`*^9}, {3.649058684296228*^9, 
  3.6490587004079647`*^9}, {3.6490587480330257`*^9, 3.649058755076849*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<samples.dat\>\""}], 
      "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6490587203826714`*^9, 3.649058741279223*^9}}],

Cell["\<\
Triweight kernel falls off quicker so at sharp edge, less probability spills \
over\
\>", "Text",
 CellChangeTimes->{{3.648533596071229*^9, 3.6485336499596043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Histogram", "[", "samples", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"SmoothKernelDistribution", "[", 
    RowBox[{"samples", ",", "\"\<Oversmooth\>\"", ",", "\"\<Triweight\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"PDF", "[", 
    RowBox[{"dist", ",", "l"}], "]"}]}], ";", " ", 
  RowBox[{"F", "=", 
   RowBox[{"CDF", "[", 
    RowBox[{"dist", ",", "l"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.648533109411545*^9, 3.648533119298028*^9}, {
   3.648533275513365*^9, 3.648533284189322*^9}, {3.648533324713434*^9, 
   3.6485333546388597`*^9}, {3.648533430531542*^9, 3.648533458106452*^9}, {
   3.648533498738903*^9, 3.648533504615456*^9}, {3.648533536724485*^9, 
   3.648533571916564*^9}, {3.648533639010141*^9, 3.648533751357099*^9}, {
   3.6485338249774847`*^9, 3.648533902832238*^9}, {3.648535759515518*^9, 
   3.648535773362677*^9}, {3.648544536941558*^9, 3.6485446290724163`*^9}, {
   3.648544669168503*^9, 3.6485447068237047`*^9}, {3.648544756898293*^9, 
   3.648544853720024*^9}, {3.648544985282201*^9, 3.648545069089026*^9}, 
   3.648545099118917*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.23, 0}, {1.24, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{27.17156862745105, 42.266042780748876`}, {
          90.95164867343522, 92.32149580195966}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.24, 0}, {1.25, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{41.766042780748876`, 56.86051693404647}, {
          90.95164867343522, 92.32149580195966}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.25, 0}, {1.26, 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{56.36051693404647, 71.45499108734407}, {
          90.08180154491079, 92.32149580195966}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.27, 0}, {1.28, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{85.5494652406419, 100.64393939393949`}, {
          90.95164867343522, 92.32149580195966}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.28, 0}, {1.29, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{100.14393939393949`, 115.23841354723731`}, {
          87.47226015933748, 92.32149580195966}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.29, 0}, {1.3, 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{114.73841354723731`, 129.8328877005349}, {
          90.08180154491079, 92.32149580195966}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.3, 0}, {1.31, 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{129.3328877005349, 144.42736185383274`}, {
          88.34210728786191, 92.32149580195966}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.31, 0}, {1.32, 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{143.92736185383274`, 159.02183600713033`}, {
          84.86271877376416, 92.32149580195966}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.32, 0}, {1.33, 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{158.52183600713033`, 173.61631016042816`}, {
          83.99287164523973, 92.32149580195966}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.33, 0}, {1.34, 13}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{173.11631016042816`, 188.21078431372575`}, {
          80.51348313114198, 92.32149580195966}}],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.34, 0}, {1.35, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{187.71078431372575`, 202.80525846702358`}, {
          73.55470610294648, 92.32149580195966}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.35, 0}, {1.36, 17}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{202.30525846702358`, 217.39973262032117`}, {
          77.03409461704423, 92.32149580195966}}],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.36, 0}, {1.37, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{216.89973262032117`, 231.99420677361877`}, {
          64.85623481770212, 92.32149580195966}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.37, 0}, {1.38, 37}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{231.49420677361877`, 246.58868092691637`}, {
          59.6371520465555, 92.32149580195966}}],
        StatusArea[#, 37]& ,
        TagBoxNote->"37"],
       StyleBox["37", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[37, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.38, 0}, {1.39, 36}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{246.08868092691637`, 261.18315508021396`}, {
          60.50699917507994, 92.32149580195966}}],
        StatusArea[#, 36]& ,
        TagBoxNote->"36"],
       StyleBox["36", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[36, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.39, 0}, {1.4, 53}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{260.68315508021396`, 275.77762923351156`}, {
          45.71959799016451, 92.32149580195966}}],
        StatusArea[#, 53]& ,
        TagBoxNote->"53"],
       StyleBox["53", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[53, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.4, 0}, {1.41, 90}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{275.27762923351156`, 290.3721033868094}, {
          13.535254234760359`, 92.32149580195966}}],
        StatusArea[#, 90]& ,
        TagBoxNote->"90"],
       StyleBox["90", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[90, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.41, 0}, {1.42, 125}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{289.8721033868094, 
          304.966577540107}, {-16.90939526359493, 92.32149580195966}}],
        StatusArea[#, 125]& ,
        TagBoxNote->"125"],
       StyleBox["125", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[125, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.42, 0}, {1.43, 179}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{304.466577540107, 
          319.5610516934046}, {-63.8811402039145, 92.32149580195966}}],
        StatusArea[#, 179]& ,
        TagBoxNote->"179"],
       StyleBox["179", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[179, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.43, 0}, {1.44, 221}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{319.0610516934046, 
          334.15552584670263`}, {-100.41471960194085`, 92.32149580195966}}],
        StatusArea[#, 221]& ,
        TagBoxNote->"221"],
       StyleBox["221", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[221, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.44, 0}, {1.45, 144}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{333.65552584670263`, 
          348.7500000000002}, {-33.43649070555922, 92.32149580195966}}],
        StatusArea[#, 144]& ,
        TagBoxNote->"144"],
       StyleBox["144", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[144, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.2256, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1.23, 1.45}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.648875379928563*^9, {3.649058775983863*^9, 3.6490587907361717`*^9}, 
   3.655203038455709*^9}]
}, Open  ]],

Cell["Determine central 99% interval", "Text",
 CellChangeTimes->{{3.648545104829775*^9, 3.648545110094788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FindMaximum", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1.4"}], "}"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lmin", "=", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"F", "\[Equal]", 
      RowBox[{"1", "-", "0.995"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1.3"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"lmax", "=", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"F", "==", "0.995"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1.45"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsColumn", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1.20", ",", "1.46"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "lmin", ",", "lmax"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{"F", ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1.20", ",", "1.46"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.648533109411545*^9, 3.648533119298028*^9}, {
   3.648533275513365*^9, 3.648533284189322*^9}, {3.648533324713434*^9, 
   3.6485333546388597`*^9}, {3.648533430531542*^9, 3.648533458106452*^9}, {
   3.648533498738903*^9, 3.648533504615456*^9}, {3.648533536724485*^9, 
   3.648533571916564*^9}, {3.648533639010141*^9, 3.648533751357099*^9}, {
   3.6485338249774847`*^9, 3.648533902832238*^9}, {3.648535759515518*^9, 
   3.648535773362677*^9}, {3.648544536941558*^9, 3.6485446290724163`*^9}, {
   3.648544669168503*^9, 3.6485447068237047`*^9}, {3.648544756898293*^9, 
   3.648544853720024*^9}, {3.648544985282201*^9, 3.648545069089026*^9}, 
   3.648545099118917*^9, {3.648545169553097*^9, 3.648545193224802*^9}, {
   3.648545228628375*^9, 3.648545259018313*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.648545197817675*^9, {3.648545233980217*^9, 3.648545259656171*^9}, 
   3.6488753800609827`*^9, 3.65520303877332*^9}],

Cell[BoxData["1.4388140217087482`"], "Output",
 CellChangeTimes->{
  3.648533121411683*^9, 3.6485332881621428`*^9, {3.648533349228787*^9, 
   3.6485333552462273`*^9}, {3.648533440196171*^9, 3.64853345895212*^9}, {
   3.648533500537578*^9, 3.6485335051574697`*^9}, {3.648533542162031*^9, 
   3.648533572492442*^9}, {3.648533641655792*^9, 3.648533751956628*^9}, {
   3.648533843118744*^9, 3.648533871693923*^9}, 3.648533904963121*^9, 
   3.648535775275146*^9, 3.648544544488936*^9, 3.6485445850641117`*^9, 
   3.648544630263019*^9, 3.648544707291963*^9, 3.6485447896817303`*^9, {
   3.648544821178838*^9, 3.648544855509564*^9}, {3.648545011320528*^9, 
   3.648545069842082*^9}, 3.6485451978195744`*^9, {3.648545234049601*^9, 
   3.648545259657885*^9}, 3.6488753800618973`*^9, 3.6552030387742853`*^9}],

Cell[BoxData["1.2796931238388423`"], "Output",
 CellChangeTimes->{
  3.648533121411683*^9, 3.6485332881621428`*^9, {3.648533349228787*^9, 
   3.6485333552462273`*^9}, {3.648533440196171*^9, 3.64853345895212*^9}, {
   3.648533500537578*^9, 3.6485335051574697`*^9}, {3.648533542162031*^9, 
   3.648533572492442*^9}, {3.648533641655792*^9, 3.648533751956628*^9}, {
   3.648533843118744*^9, 3.648533871693923*^9}, 3.648533904963121*^9, 
   3.648535775275146*^9, 3.648544544488936*^9, 3.6485445850641117`*^9, 
   3.648544630263019*^9, 3.648544707291963*^9, 3.6485447896817303`*^9, {
   3.648544821178838*^9, 3.648544855509564*^9}, {3.648545011320528*^9, 
   3.648545069842082*^9}, 3.6485451978195744`*^9, {3.648545234049601*^9, 
   3.648545259657885*^9}, 3.6488753800618973`*^9, 3.655203038801403*^9}],

Cell[BoxData["1.4490827032300435`"], "Output",
 CellChangeTimes->{
  3.648533121411683*^9, 3.6485332881621428`*^9, {3.648533349228787*^9, 
   3.6485333552462273`*^9}, {3.648533440196171*^9, 3.64853345895212*^9}, {
   3.648533500537578*^9, 3.6485335051574697`*^9}, {3.648533542162031*^9, 
   3.648533572492442*^9}, {3.648533641655792*^9, 3.648533751956628*^9}, {
   3.648533843118744*^9, 3.648533871693923*^9}, 3.648533904963121*^9, 
   3.648535775275146*^9, 3.648544544488936*^9, 3.6485445850641117`*^9, 
   3.648544630263019*^9, 3.648544707291963*^9, 3.6485447896817303`*^9, {
   3.648544821178838*^9, 3.648544855509564*^9}, {3.648545011320528*^9, 
   3.648545069842082*^9}, 3.6485451978195744`*^9, {3.648545234049601*^9, 
   3.648545259657885*^9}, 3.6488753800618973`*^9, 3.655203038802608*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxM13k01P/3OHDZkiRLWZJWKZQooQx3SLaUJbKHSPYkQkmyV6gkIWWpFJE1
6xCy7/sS2ULGFmYGSfzu55zfOd93/3Qe52Ver/vc7r3P/Vdv6F6jp6Oj49lM
R/e//3264qVOnqSAJV12WfXJasK7wBs3vqOlG3VZA3vKCA2nIPWBFAXS9v76
ELSURxjc9kG1C/1gOnhBOTaLsDjOPn7kFAV6L+jcZvb+SGAqve3njSYu5a9/
t3Mh8EUN7m1FJ5TYPdNdSieJOauUHJSmAKO8vuL8WilJQeWzsQc6rmk1zuR+
DUl3D89KPVpm53l+8G0hXVu692KPDAWOJDVpPCvrIHk2j59wRX8ppLEwlPeQ
QpMvtFahiWkjzyJN+0nxPl+c+GUpcFXQg9o40EXKviy41QntF85mwGTWSqoS
D/xYhj63cfbW3aIqUi/z7LkdpynA+u2HS6/7F9LMoN7P62ii18uYsiOWhI08
km8xWm359h3rkDwC1xOhPdvPUMA6hsOz/Gw1Qfh6aPFVtPgptw6V9EbCaaAa
5qFL7jabVXG2EDR5TZe2yFFA2HIHdX9xK+FWjZhkFtr8k7NPwt4OQqzHXwdD
AgWiabUsewO6COlaVlvS0L/oBT/tD+smlB1uSN5Ai4m53C3Z30bo3DihfEme
AtmBQS+zHWsIv3piR5LRnmlGLp1ihYTdRnwFw0oUIEzclFC1KiJof38RvkuN
AhIlDhducycQDnjdl3JHb21jeSD6rpJA5bX73oK2MTLJL05sJ1Tn6fqKqlNg
Mk5lfNGunRCtTxAORJeblD9XJDYS7KmHGofQWfdopq/TvhEIz7e7ntGggDJc
0lyUzCOwn/jD+wL9lG3uzgfRSMJw62jJb/TKzQJB+dMfSQHseVven6dAYJTi
1COvEtIRzYf6xpoU+CtOvPPpQzZpdcr1by7accknwONeKqnxoWni9gsUqBL8
e0TCIJ705oiKqj3a+vX8s1Ebf9KNmuOzleiQoB3ir4aDCUQb/ud7L+J4Tzb9
dG2IJHExMZy+g35UGt8irJxJGns7M9iJVpPQnHDRLyblKXUHHNeiAIOOt4/Z
yW8kY9+U1jF0ecWRFx+Um0nrJd67Y7UxvrtJ/j62raRWU5sKKvrii9HpF0ON
pKS/WrZaOhRIPuHbKj5XS3KLPc2eil5vEfxSs1ZJUjl9MJdRlwL6TsUxFlvL
SXy9bMbmaOOd2WuLJ4tIU7eXNgrRW7Rnq4R0skmkncPvd1zC8W07tjDYl0YK
z607fwO9JqMZLafxnmRxKWehDn20qttHwv0V6cRi3EshPQoUSInGdnwKIXUf
d/nZh1aSc456O/mM8LHZ6KGUPgVcWkQ0yzbHE+44nT3+BO1rW8dbneVI0GQ7
1kVGG7rLVF/sf0na84nnrvJlCgxszT3skJxCmlen2x+PDhIXvv0yI4dUMUmu
/oPeY+Bq+OdxESkyuMNRz4AC/WD++lhuGclGuIQrA62WnxAk8/MbSbYquWCL
Ia5PmtTnUNUqEqv10yvW6LrE2q6RT9Wkz4lWqfxGFNAInRcKdasj+RIvaLuh
Hz0I0BzprSfpDkkvNaMbbvO5Scs3kpZ2syoFGFMgWGDKz+VHE0khOrNvzoQC
Rc7CNcHhLSQOmdj76qb43P9UdNNqC2m0y//QO/QBnWjW0fttpFw3p4Z1NFXq
XKj2w25SELfBTSMzClTzLW77GtFPMswm8uaiNX1aanguDpNEdURL2K9Q4NT8
e5bm9lHS2m9uKzv0nqve6oEG46Sm8H8sleipRt1HhIFfpKvCPOl85hS4Ts91
u+HLJGmpRFzHCf2vsCZgcn2c9FhflVaONrO795xJ7Sdp36x5DI8FBUr5TiYd
eDZMyg3wlHdAf0xos7yf209S3/1s5CvadoNwv1ClmzSYkxK4w5ICIlc+xlF6
W0mu5ytE7NCpsYfdTLqrSZUpQkXFV3G/vPFn3va0icTDEqzBbo35UpPp+qxB
Oyk1Pn7uKlpM/16Au2A7CWQKIvLR86a0xH+jbSRbG/J3i2v43Gl8YJtzG6mo
8rxDjg0F2BleJ3Nfayb9pHjnmF7Hv2+mX7nsVEtiO/j5L5MtBTpjbdVj3StI
CUXV8cbop6wyYx6UUtIp3aGzGWjHprhTxX8LSPXk5V8MdhSYEJ16GX4sk3Tl
AUeoIdqFa2rH5/wo0iKfiEQ6uiCo89SgynNCcKZi5yZ7Cri1qBO/JH0m7FYz
9ryMrkrvzP7XWkjIHHLd/Qm9WbTiqvaRCoKyx+OyDfTRf/wz+21rCH3s76z1
HDCes41hLSN1BOdkEksKes+qwblfPeUEeoWutH/otWc1f/69yiFEdc1q6zpS
oOzeHxUHxVCCmBMzLRmtXc2lrcKbQipj3BvzF822tFBwK55E0ouTkdd2wvx+
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
Xj3pxXaVdtjpKmyfi27T6LcNKW+DMwXZnIJpmO+KqjM/FrfCt7oXch7ohKjy
Cok7raDZ73mtDV3p2nL5ArSC+bpCYWA69j/OGUV7YlpgcvuBn0No1VyZcgvh
FnDdz7TtzGcqGK58rUnKaYa/JyalI9EZ8mrNY8RmCFBusJhDM/u3dgo3N8G2
y58fqWXgeWQ594X1RhPej5/lJqE9/lRF2HE3QcojAxaDTCq4fq+5cNi0EU7E
nTmR9T83qIkF0TUCKV3QdGsWFZyL61jG3zXAua90QdfQTmkaE2fVG6C59WfG
V7Sp2AanPnMDGIxW9/FnYz/wfHlTRHU9DFNSGNzQmX9/LzQH1YM9U9ixZrSQ
1eTIVtV6oPC4GBzJocLFhuE2tc314H3k0gM/tOfJvvLAmjpgPiP9aQA9E9uW
VRFcB0/O83dJ5+L5+nZ8d6hlHfCZra0/RctvZuL2kK+DROehI9No3vPft1zl
rwNR3wrdc1+osBieQXeBVgu5z957x6Nt2gOWZdpqQf5tSPIfNJHHeO5Aei1U
5zq0XsrDfGV8fHzbw1rQrr64mo5+r/y7L/VOLfT1SAqx5FPhdNNnCwmnWrhK
3nHxKrpJ3/nXF/NamF5d9iChrw4ec5bTrQU3tv5EngKsZzaz1DLlWlgXLG1w
QVv/TrurIlMLwccTafXoFQ9H+kaRWuBQDNh7qJAKKd29H2bEayFW97r6fXRX
tEagoFQtpLkfe32yiAqcguLE+wq1sHIfqoLRZZp5kQZna0H5kc5sP/qGtwL5
uFotPI202ilRTIU9adXyLBdqof+Nu3wAulZVyPakRS0IpwRf60VT/Av879yu
BdecmLCjJCpYlmnGl4fWAmttyY9OtMJp926twlq43N7CJFKC/Y/7lsWollpI
Ghg5dg8tkP162+B4LcxNUPTb0JTzSq7N9HVwZoHJ51ApFdiX5Of9xeog6C9v
shdaNOG082m9OmhnEm1uQqtonJqZ864Du10X99z+ivXzzdFJo+Y6yBWyUKlH
J6kesdm+XAd0x12d95Rhvls4OFa5tx40TwdEuaId1LoL7IzrIfpsVGk1Wv+L
9xbml/UwduHjxK5yjP/AQeOkjnqQMCxiv4E+/KQuVYGjAWodB6/wVlBh1ZZH
0+NhA+zwmA9yQP/sIsVxVzeAxQP6jK9or9yr6fRsjZD2eEcP9zc8v9LSPd/M
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
MzwiehfhbnPKaxP00TtKKrwri3AgoiA4A03P1rUjjpcC9fo1Nxk8sR99c/3n
PhkKuPJ3mxigKQkPRvitKMD/Y+zcJ7T1m3T5pxEUsLWm33XJiwZdMUxL3gsU
4DjCyfgB3fNSUpeyjwr503vnVtGqL8w+22lT4UqGeO/FO3gOIx6yDt+nAvMt
+YokNGvkxPaaHCp8ltZMW0J7LkwGcS1SQX/VOErjLg1ELk7/M8M+890DT/tF
tCrL/DQ1jQZKT3O4lO7h+GtMLSwyl+DjLmWm1+jjFzm/eWxaBvb3ncvLaPfO
qkNPdJfheyFtIN0H+4sR8ekS6jLc+inzgd8X83FM+kC7xh94J02SW/DD+nS0
Jvji0TVgLdcU1/SngZ2ii9Oux2vgcv7Hvg/oWX3+SxPkNZC3WGcywzp2pdeU
3+HDP+h+SGytDcR+ZKel84rABmz+UWmdEEID70tai3HzdETn6/oGf9GywZfE
sgU2ETsXxtUvP6SBq0zBIZdzm4gJzJuPsz3CfFIRZm7ydBOR+dnL/dfRtiGe
a61fNhEdBY7sqEBvv2gVo9K/iSgrof7H4zENzPpkOySF6Ylvivqm29E76RWL
j6nTExnP2Q8eC8X9d+7jdsXr9MQ2o8fffqLDm24XXH9LT5QdE8hTCMP6yTnI
drccf++c9jEGraN/zjJ8CH//h/CKimaJSfuS+I+eaO/fFKYVjvVy+rnjZj4G
Yuu2K76p6E1Dn61eHmMgSkfPuTI9wf3RXmd8+CwDkT59u2ExWrRwQ03VmYFo
K5OgwfOUBqFpu4g9/gzE5nIJ+Zvo3/GnZK7HMBClNMuPN6I3NMUi7VMZiK+6
dQ4cfoZ9xNayBxb5+D7L0R1+6EP1ejcuV+L7pl03/0BHhpBNNdvwfe4MqzIR
uJ9VfTSUBvF9dJEzEeibTNyystMMxNhHQkOz6OFvHw6JrzAQ6XZ+aVN7jv2d
Qgf7djpGok38ucq36HbdZx/GGRmJjSLdeevou9e1iKQtjMQ3CyZ0hpFY/xu9
Cd7sjESXwhH1LPRXiVRZAjcjUenB9eesL/A+8aJHao2XkbhDfXbACs24yihJ
2s1InOC4JVyCdnvyyaMKXdC7coMnCvOnweMUiV2MxEcJPoU30LDPof8V/t7M
lpGhDv16UmPb5p2MRAmJR5oHXmI+yhQFVy5GIv3K9qi7aAsv1ps/tjMSO7++
GOpEVylOJaltYyQmBwuIiEfj+gfJc1QyMxI9tRJdg9Ej8zc2Sv8xEDV4D5OG
0cvGSXOFVAbiXPIJrecxNNh/fHNTxigDscy5IHoGLRNzmpTax0CMkFYYPRdL
A00Gx0/vWxmI1uvfxOLRglxzB71wPaSr1d1X0CmndZ8y5DEQWcJbSnVeYb21
zFsL+8BA/K6vz/IJXRGyy44P19tn3OKVWRyOv2dU8Zg3A1E7fWIsD22zofI5
34mBeMDdUZzjNdarsdfRmaYMRCph0cMOfaar5sdjdQZiNaNneQVatXrhwHVp
BmJ04z/W3W+wP8gXsFU6yEC0j/TXc0dbfjyXLsjBQNwu9OTXYewzzz2Kkekk
0xNHp3dIPkD3XPAU9u2kJ+bmxN75juaxiGXeX0JPNDybvC0sgQbPAwarr4b/
v4rrPB7KrwsAuCVLmRlDsi8Z+xrCiMk9SZKUtSi0L0LaEykSEqKdhGRfUpYQ
qSxJSZsKvygSJXvLzITBe94/v5/PPM+d59xzzj1XADJ2PFr6+zabaDkdvKGy
RACMbg+H1Wbj/KSyYNTejR8E9h16sSiHTboHbftemGF9G3ElD6BlysI6HGT5
4USdQK5qLtafLbve8TMf1PfItUbnsYlVCvdkxB4+cFW2l3UpxPlf6tr3I7Oz
5McX3tZs9EHqreb/WmZJ6K3SPC76pHBBPkmaJTmLFZjpRRjvPadEPxrNkn+M
sQ3D2BdPdkQ+UTw7Q+K/ZaZZF7OJ1H274rseM0Q122PgElr7ouhN0J8hlbso
BgNoq4CWmDa+GeKgUX/U4i6brB232ebexSM9A8dq49AfzuzlxdXwyNFc3Xk9
aG+p+OTGGzySpnX1StQ9rJdlH9+aePKIyaB9Vyfaq3UywI/JI8/yZxj6JTj/
bVWenynNI177yvzC0O0Oyr8kONN4Xu4ta0MXrBg1GO+dxvuzwpRGKfZji1q/
1pfTRK7o7YpgdOKSuLyCymlio2/5TqUMz1clHdVd8dOkY2RM9gjaXuqfz4qg
aRJQnLXtGVpBrDlFecc04Qv0zJcrx3tGh7gQz3WaXDOkTgSgQwIrqz0dponu
eD2zDi0t5BNYsWKaPL53PGzhfayXm4JqksumyaBRL60GLfTCOf6l1jQJ/XV1
I7WCTR5u5YK2yjSRKFuTvg3twUljR0pPk9zDswPlaLOkfLVquWliubTcQKSS
TVKNs2mFStPkzZ+9xzajxVtvTaaoTpNd9xUfFaPP7rnZH6cxTf4dfTePv4pN
hviS3oTqTJMLZtGO7ugtNy/X7DeYJgyO5dU89DuzhJwtxtOksnK8awrNsNlZ
qmM5TdYGZautf4D1cag4Vgu/r5e5yf822jWDu1Nj8zQ5+o9a/he97M2K5Wp+
02R+dcPU6mrs97Nx0qoh0yQ9OMjmJnqfQfu4cuw0MbHUjx1DO3svfqGYMk2a
p3rfrajB8yjOL1O+cJp4P7wmdw1t6Vdd9L4R9/Okw/ZBtJdAk8GinmkSxZrL
t3qI96GUt/c2Tk0T+ZnyiQT0qqXdxsmLeOTuI1+LPvSelz/K/zPikZWnlcLN
atmka+cfMwVHHum0bmuOQTvxZqu89/JIwFy0eDd6jXox91cUj/DXWXksecQm
PzqVZgKLeER3Rc73j+iSFXMi+zg88oR/s6HOYzZZzzlA/a4wQ9wbaMdD0SOF
vZI7V8yQwYjGR2/Q0ltdZHv3zJBTK08IqT3BeXFhg5JP/Ax523J3wym020Lu
pdbaGaLuOpDTgWYeH7+qPj5DWra52sXXsUmfZW/KB7dZInta/xy7Hu8F2V/t
jdXnSNmDXtHnTzH+CWP2cRF8IAwymxhNbNLs9l+4QhYfbGpeVxCK7pV9+qCo
kQ/42mvWGD9jk8CsG9qt8/hh3Z+rsSnNOK+8dhlYmMgPgwZrKPtbcD4O3F0D
5QLAqgjzbkannZ5aKfifACSyKu+ovsT7dkLiq6ZZATBfq7auHf2NKSpPXycI
Z31nLpBXeL9jrsitGBME5axSccm32C/vzV87ZCsEbrLyC6s+ssnNn3ESMiAK
vslh28XasT/ONvSsPSAKp2UH7m1FZ0lNFYeni0KhbImjKN6jLMHXYYgnCgJy
dtGbOtkk6cGXrPzq+VAmd3hy+hPG09jBhxiKwfMbHaudu3A/Vtd+O+ElBl/k
ll/PRv/0NvQrixGDBfKiS9d143kSIxmk8U0MtsunB6R/xnzI02axEyhAV2jp
gV7Mf+911a3vqaB5c4nhNbScNU/Sf4oKLIVroT/R21WKAuar0sBXYZvc5a84
r39tyu/ZT4M6BY7rtz58/raN6gcODdpvet1mfsPz9N12IiEnDiMK9eNxaHWB
Mz7rrcRBVjE+3rQf+4fQUwmfUHE4oMh4FjXAJv/12L6XnhCHyNRzUp/QYnFt
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
bSyJ0Q1/tb2x/oY2VTwufcP6H+rYEA8=
          "]]}}, 
       GraphicsComplexBox[CompressedData["
1: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
/6//Pb/7f9//H6eWvDA=
        "], {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2HfAjuUbxvGXN6OMNqGUVRKyIoVImopoEolkVdqlUiQNQlRGkhGhrIom
7V2UNKRJNiUi7X6fo98fp/M8vsd5Pc/9XPd9Xff1qtK9f4crixYUFBQRPxX7
f/6x2P/rBuqt8veFBQXd5a4aL1R/tUdBQQ+NJeii9J30K3oPwV4Ti/EW2CXY
SfRG8QPWE7s/3yPGYCOwvbH69MviYOxV8RLeHO+GtaY3iDXYpdioXJ8Yjd2H
lcXq0d3p4nQR1zMEW4K9om7luhvhR6ufwivpexG7lf4n1x3Nb6a+2JhleHv+
KdgT8on0m7wT833qsth69W3yaj09eCONW0HP59eXK+MV1BN5W3kLsX70j/n9
xvajh+spQx/N/453CdYFWyBfQK/K/OmdrK6CFctNUt+BL1Z+ib1Mt5Qb8uqq
F/AqGnOL+m/1y+rr+S/wj6e7GtcKWye+x7pjI7AtYhQ2DCuN1aVfEhWwJeJ5
/Di8C3af2CxG4vfipfA69IvioNx78RzeFL8Ia0mvFd9hl2DDsU1iBHYPthdW
m35BlM+9F8/ix+KdsRPy7IhvsW7YsDxn6oP8xofpjbkm/t3YnvRRdDd6D/pf
MRh7HiuX+ywWYU2wTti9YoMYjt+Fl8Rr0c+JA7EXxEK8MX4h1iLPofgGuxi7
B1svhmFDsRLYkfSz4oDMm3gGPwa/AGtOrxZfY12xu7F1uQ7sTqw4VpNeJPbP
PIqn8Ub4+dhdYq24Bx+CF8OPyPMl9su8iafwhvh5WLPcZ/EV1gUbis0zb/U8
Ewdj5dUT8B/wvuqtuSb9ffl38PegD+ddpD6f/2XWCP9D/qP0YXIh7x8xiPeM
3iX4Cdk7sKlyHXo+b9/MvbgOW8BrgJ2rfym/HXYy1kr9Bn58nhexCruIvlPf
mvx+bDBWiNXIc2vct8Z0kzvj56lX5jnXN0l9KF4UHyb/Ld/Oe9q4xbwWWH1s
ilybnsfbx7ib1X+pF6rn8+urzzFmtb4PeWfJbfCW6td5x+XZFF9inekh6RVD
sUHZH7Hq9FNi7zwPYh5eD++I3SG+F3fit2f/wqvRC0TZ3H8xN/sX3gEbnP1C
DMkelD0Bryp1oYvQf4nbsPlYmTwPYk72B+xsrGmeX7ES64QNwr7NdWADs2ay
32SN+53fqC+WO+Hnqr/Imtb3iLoyXoDfK/8pD+TNg+qpj+LPpUtnDfEH0H/S
C+gn+XXU7fO7eR/wzpRPwmfLJ9Cv8Y/VO1xdBvs61yZ/kfcP73ZjP6Hn8o+W
K+Hl1ON53/CewfrQW+jBxvbJfp/nNM8s/2u5K3YhNl8+h/48+43eiepDsH/V
f/BvxedmP8Sb40djtdRz8FJ5RsQTWG26nb4mWW/ic+wC7LZ8nxiUfRn7O88l
/ZXcJXs91lH9WfYkPQ+rD8b/Uf/OuwWfo38l9iKvmVwXP1L9JG8vfTep/8j8
q6/lz849oM8y7n1eW6w1NktuQb/Ka6z3DXoYXVpeRX+Wdc4baNxybA6vrlwR
HysfSI/jf8Xvrd6ce5E1k+cuzwR+vrqD+tPsmby/xW/YzfST/D3zPItZmUfs
zDzPPvs9Y87I+zbvfvUrvGP0vY7dS5eSv6RvlT/NWuffauyTvDpYBewh+QB6
LG8Vr5d6U+6BcQP4f+be5v2T36u+SD4PP1u9Inu0vg+wCXQl+a+8o+Tdegbw
n8h7ind89jWspvoJvGTWmJiZ+0K31dcoa0ysyNrBbsk7WwzM/cL+yH2mz1W3
V3+SPZ73vs8eT1fMusp7Tf5Vz0382fqf5x2XPQubLB9Bz+aV0Huj+vfMs/rx
XJ/6jKxvfe/yTpdb4TPlZvTL/Ib5jeq9sr7yjMqf6DmHd7OxT/BqYwdh+6sf
wlfiT2OX0RtzH/Ld/N8zb/mdcuesK2ye3I5enndS1pTYhd9Iz9J7lPpw/iy6
eNaSmIEdQZ/Ob5C1JJZnnWADsC/ELdgN2G+ZK3qmKIbNFtPzmXpPw24Sn4ub
cxbCd+uvQD+erTPPoXgMr6H/VOxG8ZkYkHcV/qv+g3Kf6HEZ6/f8nvOCvJN/
g3Ez+LXyGfyZdGHe/fwb6N/omfQ0fnX1KXq/4b3DO01uiT8uH08vyVk491y9
J/ZZ1pb8cdYU7wZjZ/OOwspj+6kfxD/N+wXrSW+gb8o+wN9Fl+dt5K1Ud5I7
4nPls+iP827L+sz5BfuFdz023Zgjc716HqeL5nkSU7Fq9MnZ5+lPxUdZP9j1
2IrMH3YNttPYcnRHerfYgV2n7zGsZj6HP4Mukvui3p15VE/hVVW3ydkv507e
4pyTea+5xrvokvIKelnWDu86vR9js3i15HL4g/K+9AP8T/iXqtdnDo3rzbta
zy/YgXme5AuxDtiZ6o/yrtX3HjY29z9rkN7Ov5Y3LWOw53hNswbxR+Wq9HR+
/oi6Tv1r5jLzwZuspwp9Us6R6qb8l+i6/Ff5Q+kSWXv0Un473rU5h6r34Y2h
l9PX86/CdmAH0FPFv+Ix/FH8MH2t6TpZMzmrYWdh1+RMqn7Ad+xt7GjsY6yH
el3mUG9//nZ6/5yL9X2uvkA+G2+rXpYzhL6H8lzhu3JulX/mX8ObkrMv71js
cGySXIV+jPdPztX0tfSuzGHOaHoOVZ+YdyTvbd6pcnN8hnws/SK/dr5HXTxr
IXt5zg25V7yrc1ZWj8HK6rkf+wjrrl6bOdSfP3B/pvfD29M7xTbsav5k7O/M
Y841WGWsVfalPNvZj/Pbsauwj3zHTJ9zpLwfXkY9ireMd4n6h8yzMb34V/C3
YftmP5HPx9pjc+Qz6KU5L+h9l34wayXrj/5Jz1W8R7NvYYt4TeQa+CPyYfQ0
/l/8a9Q7M+/GXc2bqOcQumXO/urpWBM9L2C19LxCD6GLycvyfOs5g9df/77q
0ryR9FL6av7l2E/YPvQk8aeYnDMKfrC+E7JP5HnN78BOx67E9lGXMm4E/SHd
Tb0mc6jvMt/dj/8jtjevXcapP8x5hf8O/4GsS3kH/SO/P++RzCO2kNdYro5P
lA+lp/L/yDWrf8ncZY3kPa6nEt2C9xbvlOyzWGP183jNrI98J3YafUXeC7ya
WSPYaHkv+j7eB7yL1aszX8b05W+ly+LrcyZRn5d9FX9SPo3+IOcbvWOyVrHt
6iHyVj1X8ibmrMo7BquGPSxXpqfwfs9aoq+id9CTjB2vp6K6ec6PvDd5J8vH
4Y/Jx9DP8Y/Qe4d6j6yTnDeytvScyrs8f1eo78f21DMcex/rqv4+9y/nZf4W
ugzelh6dPSHrPJ8rb+FfofdhftU8c/zJ9G/0In5/envuWfYUepyeCnQz/hu8
NlhTbJrciH6Wd7jewepC7H31W/xT8H7GLMNm8I6Qy+Al1cN47+XvHvV3uXfG
9OT35m/GSvPOzG9Wv59zEP/+7AF6tqk38y7HJ+jbLSZmn8h+jx+EH4+9rv+k
7ENYQ/UivIa+l7FBdNGcW3P2yb3QczK/r3HTeYdjpbFRcgn6Xt67vIvU3+Y+
ZJ/gb6JL4evyTlOfK7fNb1e/lzOQvrexUdlL5J8yT/ImPf3443MW4zXKXotN
kA+mH+X9yrtS/XPuVfZtfnn1cXj1rNn8DYC1wfpg74h+WaPYxpwJ6XFil5iA
P4iX09s053/xtuibecc35MxClxQlxNq8y7Bzst9lbtTv5kyWNS02Yn3psXp3
ivHYA9iB2LF0E3UDYxbS1XhLfM7tdJGcnfJ3Af8kXq+8+/AaeClspFycvof3
Fq+P3kvx9Xl/0D/wl6s7yqfnt6vfydkvzxw2Mvtd1ig9SN6gpw//oZyxeA2z
B2Pj5Ur0JN4vvCvU29TjjLuCN0bPAXQT3ir6NX5ruTFeX/0Mr6rexdhthTm8
ms+cadOrpzX/Mngar3r2IWyEXIy+m/cmr7P6G3Vv43rw1xX+9zEFa/KeVHfI
PpR5Ur+ds6e+LWI91pt+UO8OMTZrPOd7rDFdJXORcwl2ItYz61b0wrpjawv/
+2+HggfEdvFQ1lbOo+Ax9GH0m3nfYK2wS7GlrmWqcdWy7+D3yXvQd/Ff53dS
f53fnPvFu0TPD4X//ZdnwUf+ORs7NfOifitn0HwHNiLvEXkzfbu8Tk8v/hjj
PqUX8BvkPYGPkyvSj/B/5l+u/inzkHdd1piefelGvFd5J2ZPxeqpn8YP1fcS
NpD+l34jewG/pbqHMVPwqvyS2HC5kB7Ke43XM/cI68ZbU/jff50UtME2ibXE
ZfpGY9syr9jInPuwhnTlPO9ZA9gJWPdcX8602MXYap/3PwS5/gs=
             
             "]]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwl2Af8TvX7x/Fv2VIIKZske2Vv2XtmRDaFjISmrIhsIiMpu+y9syoy087e
JEkpldDvef3/j0dX1/v9el+f27nPuc/nnMc3Z6c+TXvfk5CQcDVJQkL0M4kS
Etrfm5DQhdnBd1KVEyckbMN2YdnUE1gabDw2hf+Vn6S6Yeexn7Aaikw46/M6
EJ19fldsJzbCXCJ8DJZclkv/gO8sqyL7BNtt9j96EL5Fnp1fzRflS8qfxHbQ
JaxJi0/AnsfeMXeNf152XfYenYl+Nz7DTHF9Jf+NPln+rPwCPpi/Ym1qfZz8
U70m/5m8Gl/bTBPsMO2/hHP+1zHOE9bN3HFzT2O7ZCPpxPRYWQozj+of8gf1
LvKq8u34p9blUCWxB7GJ2FT+N36KghLOW9cJfxbfzXdVTwp2YJ9hOVUpLB02
CZvG/86/o57DLmI/Y7XU53x1n1cHa+pYvqTP6v5LuBDnH3/O3AlzbeIc4G/R
SehxhlLKc+tz+W6yarKd2EDs8/jx6G/Ituq5+DXyYnwpM9WwnfRRvbTR9LLJ
eC/+3fgN8b3kN2Sz6cz0dFkOM0/oq/ipsu6yS9gQ7Kp1afTxss/02vweeQ2+
rplm2BH6nJ7U2ot0F7x7XFd+lNmk2Hj5ffhj+jz+WVl12S5sj9l78MH4Nv1R
fq2sOF9aXsZsBn4KPV32Bz9N9cAuY79gddRevqY19bDmPucr+ryezGxylUJd
wrrKe8S1iuunyqqHrH0Hn4H/yb+rUqrLcR3wnvG949yoGmZ3Y3ux3KoclhGb
is3kr9O9rbuJv09noWc4jpzyEvrqOO+ynrKfsKHYNevS6hNkn+t1+S/ktfj6
Zp7CvqYvxHm09qc4h3E/mjtpri2/Fx9NJ6MnmEslz6PP53vIaso+xV7Cvoi9
Qx8i+0R/jF8nf4IvY6Y6tosub93D+DSsNzbL3F/YDPU8fgX/FXtQNjHOPb0P
r003kKUyd4V+ju5qppf8lPwZ7AvZ23Ry+n754/IF9CG9p6yW7DN8nzWJsKGy
PPR6vAQ9Fysrr6Hv5itY84jsXawP9l7c53wf2Tr+b/kcPiufK64V34v/mR4m
v24+nT4pzjl9v/xnunt8d/602Xb8PnwMnYKeaP6BuA5Ybexz+mVsv/nE+jAz
j9MbZCXpeVg5MzX1T/ljekVrM8mn47Njb6H7ytbL/pF9wGfjZ8a9Yaakvoaf
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
            "]]}}}]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.2, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{1.2, 1.46}, {-2.7433761730889414`*^-15, 24.19841340334944}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {189., -118.66252583997979`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
aGNo
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.2, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{1.2, 1.46}, {-8.892199140662771*^-18, 0.9999999999999994}},
      
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {189., -355.98757751993935`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.648533121411683*^9, 3.6485332881621428`*^9, {3.648533349228787*^9, 
   3.6485333552462273`*^9}, {3.648533440196171*^9, 3.64853345895212*^9}, {
   3.648533500537578*^9, 3.6485335051574697`*^9}, {3.648533542162031*^9, 
   3.648533572492442*^9}, {3.648533641655792*^9, 3.648533751956628*^9}, {
   3.648533843118744*^9, 3.648533871693923*^9}, 3.648533904963121*^9, 
   3.648535775275146*^9, 3.648544544488936*^9, 3.6485445850641117`*^9, 
   3.648544630263019*^9, 3.648544707291963*^9, 3.6485447896817303`*^9, {
   3.648544821178838*^9, 3.648544855509564*^9}, {3.648545011320528*^9, 
   3.648545069842082*^9}, 3.6485451978195744`*^9, {3.648545234049601*^9, 
   3.648545259657885*^9}, 3.6488753800618973`*^9, 3.6552030389709044`*^9}]
}, Open  ]],

Cell["\<\
Automatic results not too bad but still significantly off to the right of the \
peak\
\>", "Text",
 CellChangeTimes->{{3.6485443868708467`*^9, 3.648544411422093*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dists", "=", 
  RowBox[{"FindDistribution", "[", 
   RowBox[{"samples", ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"samples", ",", " ", "\"\<Scott\>\"", ",", " ", "\"\<PDF\>\""}], 
    "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{"#", ",", "L"}], "]"}], "&"}], "/@", "dists"}], ",", 
       RowBox[{"PDF", "[", 
        RowBox[{"dist", ",", "L"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "1.2", ",", "1.46"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.648544177289276*^9, 3.6485442277618217`*^9}, {
  3.648544266485656*^9, 3.6485443362568493`*^9}, {3.6490702916475067`*^9, 
  3.6490702920852423`*^9}, {3.655203093766943*^9, 3.6552031319478416`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"WeibullDistribution", "[", 
    RowBox[{"68.13802284199336`", ",", "1.42540270986035`"}], "]"}], ",", 
   RowBox[{"MixtureDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1982028802869449`", ",", "0.801797119713055`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LogisticDistribution", "[", 
        RowBox[{"1.4034408437028019`", ",", "0.037871559531989674`"}], "]"}], 
       ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1.4245805813326036`", ",", "0.014176940438171132`"}], 
        "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"StudentTDistribution", "[", 
    RowBox[{
    "1.4219576156433147`", ",", "0.017178000872858635`", ",", 
     "2.0741858525771733`"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6485442295639467`*^9, 3.6485443372897787`*^9, 3.648875382103767*^9, 
   3.655203040152836*^9, {3.655203105757669*^9, 3.6552031331238823`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5459999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.23, 0}, 
            NCache[{1.24, 
              Rational[1, 10]}, {1.24, 0.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{21.289215686274474`, 36.65106951871644}, {
           92.68373102119298, 93.99270182850701}}],
         StatusArea[#, 0.1]& ,
         TagBoxNote->"0.1"],
        StyleBox["0.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.24, 0}, 
            NCache[{1.25, 
              Rational[1, 10]}, {1.25, 0.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{36.15106951871644, 51.51292335115863}, {
           92.68373102119298, 93.99270182850701}}],
         StatusArea[#, 0.1]& ,
         TagBoxNote->"0.1"],
        StyleBox["0.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.25, 0}, 
            NCache[{1.26, 
              Rational[1, 5]}, {1.26, 0.2}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{51.01292335115863, 66.37477718360083}, {
           91.87476021387896, 93.99270182850701}}],
         StatusArea[#, 0.2]& ,
         TagBoxNote->"0.2"],
        StyleBox["0.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.27, 0}, 
            NCache[{1.28, 
              Rational[1, 10]}, {1.28, 0.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.7366310160428, 96.09848484848499}, {
           92.68373102119298, 93.99270182850701}}],
         StatusArea[#, 0.1]& ,
         TagBoxNote->"0.1"],
        StyleBox["0.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.28, 0}, 
            NCache[{1.29, 
              Rational[1, 2]}, {1.29, 0.5}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.59848484848499, 110.96033868092695`}, {
           89.44784779193687, 93.99270182850701}}],
         StatusArea[#, 0.5]& ,
         TagBoxNote->"0.5"],
        StyleBox["0.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.29, 0}, 
            NCache[{1.3, 
              Rational[1, 5]}, {1.3, 0.2}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.46033868092695`, 125.82219251336915`}, {
           91.87476021387896, 93.99270182850701}}],
         StatusArea[#, 0.2]& ,
         TagBoxNote->"0.2"],
        StyleBox["0.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.3, 0}, 
            NCache[{1.31, 
              Rational[2, 5]}, {1.31, 0.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.32219251336915`, 140.6840463458111}, {
           90.25681859925089, 93.99270182850701}}],
         StatusArea[#, 0.4]& ,
         TagBoxNote->"0.4"],
        StyleBox["0.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.31, 0}, 
            NCache[{1.32, 
              Rational[4, 5]}, {1.32, 0.8}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.1840463458111, 155.5459001782533}, {
           87.02093536999479, 93.99270182850701}}],
         StatusArea[#, 0.8]& ,
         TagBoxNote->"0.8"],
        StyleBox["0.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.32, 0}, 
            NCache[{1.33, 
              Rational[9, 10]}, {1.33, 0.9}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.0459001782533, 170.40775401069527`}, {
           86.21196456268075, 93.99270182850701}}],
         StatusArea[#, 0.9]& ,
         TagBoxNote->"0.9"],
        StyleBox["0.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.33, 0}, 
            NCache[{1.34, 
              Rational[13, 10]}, {1.34, 1.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{169.90775401069527`, 185.26960784313746`}, {
           82.97608133342464, 93.99270182850701}}],
         StatusArea[#, 1.3]& ,
         TagBoxNote->"1.3"],
        StyleBox["1.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.34, 0}, 
            NCache[{1.35, 
              Rational[21, 10]}, {1.35, 2.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{184.76960784313746`, 200.13146167557943`}, {
           76.50431487491241, 93.99270182850701}}],
         StatusArea[#, 2.1]& ,
         TagBoxNote->"2.1"],
        StyleBox["2.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.35, 0}, 
            NCache[{1.36, 
              Rational[17, 10]}, {1.36, 1.7}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{199.63146167557943`, 214.99331550802162`}, {
           79.74019810416853, 93.99270182850701}}],
         StatusArea[#, 1.7]& ,
         TagBoxNote->"1.7"],
        StyleBox["1.7`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.7, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.36, 0}, 
            NCache[{1.37, 
              Rational[31, 10]}, {1.37, 3.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{214.49331550802162`, 229.8551693404636}, {
           68.41460680177214, 93.99270182850701}}],
         StatusArea[#, 3.1]& ,
         TagBoxNote->"3.1"],
        StyleBox["3.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.37, 0}, 
            NCache[{1.38, 
              Rational[37, 10]}, {1.38, 3.7}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{229.3551693404636, 244.71702317290556`}, {
           63.56078195788797, 93.99270182850701}}],
         StatusArea[#, 3.7]& ,
         TagBoxNote->"3.7"],
        StyleBox["3.7`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.7, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.38, 0}, 
            NCache[{1.39, 
              Rational[18, 5]}, {1.39, 3.6}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{244.21702317290556`, 259.57887700534775`}, {
           64.369752765202, 93.99270182850701}}],
         StatusArea[#, 3.6]& ,
         TagBoxNote->"3.6"],
        StyleBox["3.6`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.6, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.39, 0}, 
            NCache[{1.4, 
              Rational[53, 10]}, {1.4, 5.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{259.07887700534775`, 274.4407308377895}, {
           50.61724904086352, 93.99270182850701}}],
         StatusArea[#, 5.3]& ,
         TagBoxNote->"5.3"],
        StyleBox["5.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.41, 9}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{273.9407308377895, 289.3025846702317}, {
           20.685329170244472`, 93.99270182850701}}],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.41, 0}, 
            NCache[{1.42, 
              Rational[25, 2]}, {1.42, 12.5}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{288.8025846702317, 
           304.1644385026739}, {-7.628649085746503, 93.99270182850701}}],
         StatusArea[#, 12.5]& ,
         TagBoxNote->"12.5"],
        StyleBox["12.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12.5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.42, 0}, 
            NCache[{1.43, 
              Rational[179, 10]}, {1.43, 17.9}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{303.6644385026739, 
           319.02629233511607`}, {-51.313072680704025`, 93.99270182850701}}],
         StatusArea[#, 17.9]& ,
         TagBoxNote->"17.9"],
        StyleBox["17.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17.9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.43, 0}, 
            NCache[{1.44, 
              Rational[221, 10]}, {1.44, 22.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{318.52629233511607`, 
           333.8881461675578}, {-85.28984658789322, 93.99270182850701}}],
         StatusArea[#, 22.1]& ,
         TagBoxNote->"22.1"],
        StyleBox["22.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[22.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.44, 0}, 
            NCache[{1.45, 
              Rational[72, 5]}, {1.45, 14.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{333.3881461675578, 348.75}, {-22.99909442471305, 
           93.99270182850701}}],
         StatusArea[#, 14.4]& ,
         TagBoxNote->"14.4"],
        StyleBox["14.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14.4, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
NNgxZ44fvEBD76dFY57oPeR/JBDd1g==
      "]], LineBox[CompressedData["
1:eJwV13c4le0fAHB7kz1PIrKy5Ty9Rt9byZZRkVlGUkQvSkkJDVFSZmQlKlKS
kEIklURmXkrJqIyMc85zrPS7f3+d63Od63rOfX/X8z2KvqHOB9lYWFhcWFlY
/v95ti9/i4EBDZb6BXIulGbB9XLu7ovYI1XvHJ7WZMGdC6Ghg9gt/eos0y1Z
8N4QSmO30GAKufqGfM0C6YzhDR8NaeAb7XfjjfhNqHRZz390Kw02P1H41HHu
Jvz4lD1SYkqD8MQGNlvvbHAcTE+WtaJBb1R84kedW/Ah+Q9PizcNVqJqb52z
KoDZcKV1M+E0+KhDcFELb4NgVVZ3WQINTlvuc6hDxfCpKKZaM58GATHPmcfj
7sHOFmUVrSoa5OxOvr2wWgb704yrZ9towFnM6dylUgHHGwvZrUZoIMVRKRiR
Xgm6cq2fN5A0sHabyC3f/BQyVTz7nwnQgXYv87iNdy3c9q3w6FGkQ0mETVx7
y3MoXdqdF0elQ0KZhsfS5UbwQodZ6XZ0OKUvKJ0m2QxPa0zmxnzocGOgTyLl
cgvUDsf+zTxJB9R33/bt5TdQe0Cy/VsyHc4pzPUxh9vAU+yw8v0iOkQIHD6Z
7dEBD45r5RrU0WHUzLDvoG0XFPJUFJp20mHJMtuVNaYHzGzvtPJO0CEsI9R/
y6Z+GP75417QKv7+xc+hDq7/YEPNL0l7EQY86tl6fcPSEAgYehXPqTJgE9uB
pNnwr5A7mtwoZsqAjvL9aVdOj8DmmXWZ7U4MENwa7eLhPAr+JWzXLAMZoDMV
M5UROg7bU56Ibj/DgF9JqqKt535Au3p/9VoqA2JPfvEr6voFzvJW0k6lDFD9
le4Tu3Eazuw4yanUyICKipbOePvfsFtaVqymD3+/0qn+3545CMyK8eHvZ0Ac
zazK0W0OzkqPP9qPLdf5XvOd1xyUSlfY8XxigGbMXe76gDlgk7G46DbAgLnT
/9o+PjkHlTJhSyuDDGCS53723JoDYbm2r+gbA67u9vxlOzEHKjk62unYJZT7
wfTJOTCRS4/+hd1rbLozfxb/vtwBmRsjDDBXrd6yujgHL+VI59HvDNi9i6e3
l38eQikbWy+MM+BTtcdBYf156Fgf9aBtkgGh06ql22LnwXGo12n9FAMOFx7n
ML04D91ZOsxQ7E+bZtRQ0jz0i42bSUwz4NjYOeO96fPwhdfx0/4ZBmw803yt
/v48TDM2sTFmcX5qKz8V9MwDX0eX6wYGA7q22xnmai7AlSTNP/9iF/9xPRem
vwBC1pdut2BnHuyhO25dANEWk5nDJANm4g+s0zBfAJm6u3FVTJyP++Oqzp4L
oFZyptx6mQF9n5tRcfIC7Dyrzh7xlwHOJ6RWhlYX4CIb1+MP2CLGmgHDHDRo
vfjdW5WFhC0qz2ToAjSwupZTN4j9YN6zw309DWwKBMPM2EiQ6i2Z3AA02NU8
/02IkwQh/tCKkYs0SLboSA7EnuNysrJMoUFnW6lJM7bWCFncepMGjj1+Wce5
SMh3E7ssXk4D57E+h8/cJHx5911juZcGLlx1Dff5SAiQ3XnKU4MOGYkZwez8
JKQM/VG5aUiHT0Lhsl7Ys5xGL5mIDvukNE8IC5DwNd7hL2UfHdzV8rQiBUn4
lnNQWTqBDvtt4m6ZC5OQve6dnccsHQo6vG3ysD1f+Fz6i/vkm7PxIhPbcqdg
UycfA3w96LvLREiIFi1kYaowwD84gF9UjIRLzOb+CB8GBCbbRH2VIGGwqTmp
/ysDgvhdVAwkSfgUVjEahvMYkuDTfRGbW/iNBsJxjYg7qaEthZ9fMmlxbAMJ
sSdKBqOlSXiTs9PPyBefy5vNWFaOBC6/gnaZBRJyhwR/HMV2PaV3Q46TCQX7
ZFKbsG+9o6q4SzOhxFl3KpBCgv3BCUYKMOGJhXdOzXoSOK+fsllNYUK7dt3K
HgUSij3r1C+jRegse333HnZb5axMvesidKt17V7Fzs1irzYOXYSBjT/LihRJ
MNC+9JiSvwjjkpKeCxtJUNeZOJzAtgRra/++uLaJhM4aavDowBKwRp8JHMVu
/7JujspYAo6lBHFChQS7lPti4yLLwEfLDx7GptEtY/faLYPkjw8ULTUS+tmF
9xe/XgadTvUzbRokOA5Pu6+0rcCcaI3eps34fCKLEofnVvD7wXwiBrs0vqfU
RXIVqMPeDoaaJOyoex9b47cK22ZSFQu0SMhxqPB5zvEH7PjXXh/XJcF99/t5
XZ81EHJIivqIXaUy+N7t2hp8vCGts1kPn3/MGlEa1mC3rEHWN+yTvTqtEev/
grt64BFbAxKM1GyP3xn9C4GW3UKKVBLivG0WXr1hQRpJ+1+dxlYakO4SHGNB
0x3Tkf3Y3/e8LK5kYUWhLtwjSQSuZ2P/78LGrOjEQZMn5FYSvAQ0Gv6pYkUX
4ktc241JWHYMbxZ+xoYs3hgIqJqQYBO1oytqiA3x8De9jMXeG9jH47DGhq7c
GFInTHF9sW4c+mcnO0orFF4t3EaCLXf71S0D7Oh2Y1RBpBkJPJZGizlinEhl
lbq7HTv76pcTHkacqGwrjVNxOwnmbG32F3w4UdXjoKA27FsZ1tZyjznR6yJP
6npzEkQtDnkd2suFfl7a1t5sgeMReUiXeMKNgluWz0pZknBb+oTD2jduNM9S
oxeM/bmPMmCyjgctn9LJlLAiYXJXgb/SUR7EH6zgG2hNQqRCDF+5Ni/SdmRb
FLTD+RgSZR58x4cqrzSU+mKf6Ihdx/GXDxHvorxqsCsbpZxUDPkR2k5rPmBP
gn7/w0PLt/mR05axq092kaD7xNWFPC+AIqRbldycSGhOuX5o3FcI1X277HDH
hQSVO4mrHTtFUKm7sRsTO8gzj3MkUARl90772riSkH5ex8r0igg6/dbhxBx2
y4f81L4eEWRSIZFr4kbC7/SIhisBoqgxpnCy14OEY4/zcuyzxVCL/LMLnD4k
aBx4lZdtIomqso5c24dtIWBiHnBYEt0Rpdwsw958vyMnLkMSXeCKeeCE+/hk
ckRn+bwksvht3pPrR8LEDaWZj2VS6F39RwVqAK7/mWtebjoyqMPz5/OAIBI6
LGV4k8Ip6EyuXMdLbAe/Q5qbH1GQ5vCub7LBuH8CAyQ0pigocf9Tjk7smPOx
MTv81yML3zh7IgTH7+5R2rC7PGo4RPnK/S+OT0RhT6OmAnoY5sh2/wQJe1JN
oxftNqLkhFqrqVgStnpLknwcqmhhzMJnNoOEzLUfYVRvXbRxXCPKJhPP6+9f
truH6yLncaHUYmye62lGJxJ00ZPx/haPLBJUQ9h60yp1UcREgNrbmySMP55c
3c+lh8gfF2cLbpFgqsZ//k2ZHlqebD3jfBvXe3xNRPakPtKYKs0oxz7++2Tx
8B995D6V/IinCN+3oFNZQMQAPZ9yGWnAPiaspqdIGKDo6QnzzcUkzCt8iFSJ
M0BrM1wCHPdISLOyNaWKbUFs8xbZT8vxfKRU6pnJG6I8bQW+dQ9J0Oz25L2g
ZYiMgpdOBWL/zrmDik0MUfiPMje5RySY3QhFp9wN0dgXYZnYCjx/er598E8z
RK/bBjPtnpAwxLU6Q7JQkS9PFXcJdhDTv7ZHkIrWdl6N/It93tiL65IsFVGb
wLWyigRBae3eUAMqKqm5IyldTcIj596/yI+KEu6EpI/WkjDF91Qrp46KlL9b
cpo+w/dVKh561kJFLzcoHs/AHmZ3UijtoKKl7J491nUkhG3/uW9thIqOXN8q
/ug5CREL0dQQLgJxdYqc53mB56tGhZnoOgLdFpii+WBv9W8YuCBFoMFLuT3i
9ST8qTB5MahKINuzbKlRDXg+Tp2nGFoQ6OfzIbZebN3398wc7Al0fqkqTKuR
hNM3UwliD4FeRBxy/oYddIarK9SHQPsqUfM/L0kQ6E6SeHmIQPRZGf1U7ISZ
/uAvRwmkGdQuYtFEgof87TtnTxHo7b3i2HxsgwVWPbYYAvlPnJ1fxC79Manq
fJ5AuT56XWXNJPjkub5wSSaQUT6fGecrEi5EDAnzpxKo//NohTd2CG3KNCmT
QEL7MlJEWkjQebct/3c+gY4m5635Y+dz9x1KKSJQe0tJcC22BmeqP8ddAmms
PBzkf03CgV2mMTalBLqsV2O1HzvbseK2bzm+/6HG6krsboOROrsKAlnkvVHm
asX9d3+4iucJgTj4B1jKsUWd1rjJGgL5mX0LYXmD5x+0INU6AjVH/vy8Gzsy
MV9W4wWBFB7O2dzFzldXT1irJ1DM2GLtMrZ1ktSZO40EGpZlVd31lgRFMfgt
10QgEyfe9EJs3+QbXf7NBMq5JMLOwN5zS0k+5hWBlutl/rV6h/cjfqX2Iy0E
cqMrfs3Bjlcf6VV9TaBaDQ37WWwJgQ79amxJH/3n29twft6eGpFoJdDxTCP1
DOyMwrQvFti9H7Zn/sKe0p5VtsbW57DlNH2P50VoVDUF+7rR7vAU7NcDljea
8PPmjnmMjGK77Ln8jMB2uOvnQLTjeUa9rh2Dz/PwS1B9IvbSpm56Jj6vgHjE
5mHsx0vDwnH4PkE20Tf1PpAgn3gkwRTft+3cee4L2DGRlr5tOB5qNVeOD2Dv
GjtUotZAoEszaaObO/B8Uf7itQ/Hc0Ip1ykGu8z70w03HO+d7sWN3dgBasWO
mrUEupNSrqXSSQIp+KTo41MCsb15mnMKO0Ai6aYFzp/Pn3reD9ieBr0oGef3
pUFrpMJHEjY+dbp/F+df/kjHeDj2+vzvozdwfXzuH26S7cL71lYz6a+4nowF
f+iEYK9Qnf5BBQTK3jGb2/R/lzGjwm8RyLXi76nAbtz/u27WOaYRqPuygn51
D95/HFdGfsYSSO+lWgFvLwn7zg5Vf4kmUAqpK+SFLe+TeqY4kkD2fmaT7H0k
8Pqf83oYjPvFxPe2Uz8J/EXfBe7j/lMNPyJcjE3PuCX0zy4CXbwfdnYRW1fE
XCrXkkDmkvHu+Z9IEOc6OTTyD4EaZ4tEZwbw/sB1sc6Xgu8zrXXZ8j8Sak8o
Os6I4Xr6VfO3EPvFtsJ3O/kJtGXs/bTLIN6vW/9z91miotIBWuvLIRL8LweM
WPdQ0du+M6Zyn/G8sF+ItHlHRePd3FXHsZdTtyzJNlKRwge5Qo0vJMi5On7S
LKWijKYdp9OGSRDZx8FFOUtFVQ0f5n9jt7rkzRSFUVHXc9dA66/4/bhhTWIt
gIoEqoP2rmEfeqtxRMOBiuJKU3UCR/C802nbFLyeio6mjo4aj+F+LGNP/vrY
ECWmHHXPwPY+z+L2pMgQ3bvK/DiH/XTm2nfvdEP0/RJ/Q/E4fp+LX6/cdtIQ
7Ys2yFr3A89DM961zXjemx+Mtxv9RcJqK6NAon4LkiOUnibO4n2KpcpCoMQA
rWp+Vv+KfdH2dPhgmgH6vDE9z2COhKLxZdXr8QbolhB3wmdsrgqL/GcHDBBl
YtJdG+/la5/1JFhlsdMrWbrpeB6qCyrVJ+gjCs3MTmYZ90sLhfWSmx6iPDow
epeDCUJo4qpRnRYK/C70aBm78sV8evUNLVQlUR9lj/d6V245Nf0gLWQXLSNK
w1b1jTqoQdFC0dbdaBs3E97vLgrWPauJhkZ35PXyMuHp8+iP0js2o2xpVTfW
dUw49UGez6VXDU3Y9invwW7ZlSo2Vq6G9GPi50qw7cWlEuMvqaG28a+X7ISZ
YCjt+HDRSA0tV2ZVZ4owgWuuev2726rI3Z5PXFucCab+/Y2BJ1SQTNxMh7sM
EzwvKLOm6Coj5ej1RVXYFwq4GjfyKSPtE/aRQrJMsEqe8v5vVAmZHynf0Iz9
73ndiSeZSijE+egxdQoTPm5iiKmzKqGWjTMii/JM8Dsw2XdwSBGFvJrek67M
BPVKmz0PvTegk/UU9VnsQjidJUvZgOJr7P5YbWLCgzznRyP/yaOssgfFq9jS
P8daY13k0avUYNJPFT+/qm9VdM96JO0/namvwYTm6Kirzw7IoWaO6cFOHSZQ
r/x+Gdokha4xbcqVdP8fD/5zzslSyHPyfkwkNv34fqnLHlKI2XlIeYMeE9Ki
NRvmSUmkmTN6NESfCW7+o7wVepIoQ2+IRdCQCR2yj7f1VIsjP2WjngPYXF5e
qTMJ4khX6mZxFXb2+zeF7h7i6P2qi40nlQn9dSUHNVnFEcvb7tQyggleQdZx
pY5i6LB3m4qNERM27zV4MLUmgqhO6ku52PxCU1ny/SKIwzzh/Tz2mF/nv4Xl
IihP3eLYTWMmhPw2ZsvwEkHd9KZnP01w/EZX+Lc0CSOTpGd2l/D/wPqQLT6S
2uuQcO29sBZzJigUciQ6kHxoLPgRx8adTBCZEbp6sIIP1SpWZ8RgZ8/+vrA5
iA8dSHpVZ2TBhPLJkVOvvvOiCu9htseWTGDM83/nHuRBjpziqbk2TNi7pFDF
8pMLKdfJblrBHghZr5f3gAsthijW7LNlwvC6iweG/uVCBQPaQ2J2TFhWyUrX
XeNEc2XWSon2OB5tnh5q8pwoxTnmyQlHJmxsSOxyj2JH/twXd/ZiXwwKpoRZ
saOtL6580nNiQkJ7cr2UFDv6til7ZRpbp747m7eaDekuVe3w243zxbJzNHCZ
FX3Mn+xxcGGCbAmlSf4WC7qzZ/5gOXbyS+6tmWEs6CTvIpPPFd9vy+jhK9Ys
SCGck9KKnfjWwqxr/i8cs1DwN3FjQqljekdq3RqYr6iQN7GNfNJjxELXQLpC
K4GJrafYY3daeQ1eyhg/qHRnQq2e5b3l638grcNsm7AHE3Iex8wJ2vyBwHir
j0exSwVl37Gw/wGTrQ6+77G73yKxrherOA976WqeuJ/4xx5HR67C/wAnP2wc

      "]], LineBox[CompressedData["
1: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
hTgSUkrVeUbNNJDsN5XrB+JJuKprx5RyTAPZfOONycaWPpvLdshLA5V96288
mkDCoUAH/8wIDXR56rRSayIJgpSI8or3Goj8HrqQ9pSE/y55LZvu1USK0x7s
a9gKUvp/tG00kf20hczhZJy/MTdr+U5ooqppYVueFBI+G3BmRgdqoqs/ciqv
peLzmfE45Fm1Jlr52Rxgk0HCTZZog2klLaQyUxD3HLtblyMxdIcWOjITWcye
SYKFguQSl5EWejVj/+U19oOwxJr3x7WQ/+yU0bZsEjJ0vOeYYrTQvzlWbuY8
Ejjt+8xZSS2kPv9T3hl7id0ycmgDBR2f79xdgz1yqUYikoeC6ufjzvvk4/dC
kfBQnoJuLij2jhSQ8Hu3SsOKFQUxLho/qXhOgoamqiqZQUEp6tKcG4tw/hce
Tzz2jIJ0vf5cc8fOC+MofVpBQZe+FzpKFON6GNh/LK+Fgr6O8ondKiHhhFi8
1OQPPL7Ez7tD2Den+85w/6YgScd3y5QXJOxLVvTkXqEguz7fwSns9d0b90Vx
UFFT21C8WRkJxenWHPGKVOTKXs6Wg/2U/fGklxoV/dv34Mo69rn5y9+EqVS0
4y0cLi0nQcQ3WHsKUVHPP9EWrgoSmB43/eY0oSJv/d87TmHPNE5UMJpTUU5V
lrBoJQmHOZ6DhwMVGRIBoRewLcUZ7nxyoqIxrcNkG3bfvdD34iepSKSIoz+g
Co/34oq7wDkqKp+Z2DeAXdQ1a9F6gYqslGsrNKpJ+MZQaWXpR0V3s7xjJ7Ff
nHDt7wqkIvkJE5bdL/H/4i7SW4Op6I2UjG8ctiLoeT8KpaI/T3rtTGtIcP9l
UBT7gIriBp81ZmC3zV5W6IqmIi3hUOoatuOCjcVgDBV5PNQRKn6F+9m5EiXH
RCpi7eK/w16L+6f5lcTuJCrK4J5ZOoHtMBaoK5JCRXsONJ58he0tvvhLNY2K
hsKSe4XqcH0QpmTxZ1CRX5PfXm/syfTvu5syqUiAyaqsBdu9aDHfJJuKipCy
nMxrEsjLfv0JOVR0MJAx5jq244nPZdW5VDT9apixD9vw9TA1N4+K7vwpv6hW
T8IZOVcLt3wqkt4ZORGKbZD9gr6AXXv5jM049o8mG5UDBVTkUIoadr0hwWir
6MRFbNqCmFYMNtu/LZs9sKPVltJnsfP2dQ1vx1b1bOc3fov7T8WwdCMerzUv
+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
xD93iKZ0jA4Cn1xqdZ9yoP8BfqVTVw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxM13k01P/3OHDZkiRLWZJWKZQooQx3SLaUJbKHSPYkQkmyV6gkIWWpFJE1
6xCy7/sS2ULGFmYGSfzu55zfOd93/3Qe52Ver/vc7r3P/Vdv6F6jp6Oj49lM
R/e//3264qVOnqSAJV12WfXJasK7wBs3vqOlG3VZA3vKCA2nIPWBFAXS9v76
ELSURxjc9kG1C/1gOnhBOTaLsDjOPn7kFAV6L+jcZvb+SGAqve3njSYu5a9/
t3Mh8EUN7m1FJ5TYPdNdSieJOauUHJSmAKO8vuL8WilJQeWzsQc6rmk1zuR+
DUl3D89KPVpm53l+8G0hXVu692KPDAWOJDVpPCvrIHk2j59wRX8ppLEwlPeQ
QpMvtFahiWkjzyJN+0nxPl+c+GUpcFXQg9o40EXKviy41QntF85mwGTWSqoS
D/xYhj63cfbW3aIqUi/z7LkdpynA+u2HS6/7F9LMoN7P62ii18uYsiOWhI08
km8xWm359h3rkDwC1xOhPdvPUMA6hsOz/Gw1Qfh6aPFVtPgptw6V9EbCaaAa
5qFL7jabVXG2EDR5TZe2yFFA2HIHdX9xK+FWjZhkFtr8k7NPwt4OQqzHXwdD
AgWiabUsewO6COlaVlvS0L/oBT/tD+smlB1uSN5Ai4m53C3Z30bo3DihfEme
AtmBQS+zHWsIv3piR5LRnmlGLp1ihYTdRnwFw0oUIEzclFC1KiJof38RvkuN
AhIlDhducycQDnjdl3JHb21jeSD6rpJA5bX73oK2MTLJL05sJ1Tn6fqKqlNg
Mk5lfNGunRCtTxAORJeblD9XJDYS7KmHGofQWfdopq/TvhEIz7e7ntGggDJc
0lyUzCOwn/jD+wL9lG3uzgfRSMJw62jJb/TKzQJB+dMfSQHseVven6dAYJTi
1COvEtIRzYf6xpoU+CtOvPPpQzZpdcr1by7accknwONeKqnxoWni9gsUqBL8
e0TCIJ705oiKqj3a+vX8s1Ebf9KNmuOzleiQoB3ir4aDCUQb/ud7L+J4Tzb9
dG2IJHExMZy+g35UGt8irJxJGns7M9iJVpPQnHDRLyblKXUHHNeiAIOOt4/Z
yW8kY9+U1jF0ecWRFx+Um0nrJd67Y7UxvrtJ/j62raRWU5sKKvrii9HpF0ON
pKS/WrZaOhRIPuHbKj5XS3KLPc2eil5vEfxSs1ZJUjl9MJdRlwL6TsUxFlvL
SXy9bMbmaOOd2WuLJ4tIU7eXNgrRW7Rnq4R0skmkncPvd1zC8W07tjDYl0YK
z607fwO9JqMZLafxnmRxKWehDn20qttHwv0V6cRi3EshPQoUSInGdnwKIXUf
d/nZh1aSc456O/mM8LHZ6KGUPgVcWkQ0yzbHE+44nT3+BO1rW8dbneVI0GQ7
1kVGG7rLVF/sf0na84nnrvJlCgxszT3skJxCmlen2x+PDhIXvv0yI4dUMUmu
/oPeY+Bq+OdxESkyuMNRz4AC/WD++lhuGclGuIQrA62WnxAk8/MbSbYquWCL
Ia5PmtTnUNUqEqv10yvW6LrE2q6RT9Wkz4lWqfxGFNAInRcKdasj+RIvaLuh
Hz0I0BzprSfpDkkvNaMbbvO5Scs3kpZ2syoFGFMgWGDKz+VHE0khOrNvzoQC
Rc7CNcHhLSQOmdj76qb43P9UdNNqC2m0y//QO/QBnWjW0fttpFw3p4Z1NFXq
XKj2w25SELfBTSMzClTzLW77GtFPMswm8uaiNX1aanguDpNEdURL2K9Q4NT8
e5bm9lHS2m9uKzv0nqve6oEG46Sm8H8sleipRt1HhIFfpKvCPOl85hS4Ts91
u+HLJGmpRFzHCf2vsCZgcn2c9FhflVaONrO795xJ7Sdp36x5DI8FBUr5TiYd
eDZMyg3wlHdAf0xos7yf209S3/1s5CvadoNwv1ClmzSYkxK4w5ICIlc+xlF6
W0mu5ytE7NCpsYfdTLqrSZUpQkXFV3G/vPFn3va0icTDEqzBbo35UpPp+qxB
Oyk1Pn7uKlpM/16Au2A7CWQKIvLR86a0xH+jbSRbG/J3i2v43Gl8YJtzG6mo
8rxDjg0F2BleJ3Nfayb9pHjnmF7Hv2+mX7nsVEtiO/j5L5MtBTpjbdVj3StI
CUXV8cbop6wyYx6UUtIp3aGzGWjHprhTxX8LSPXk5V8MdhSYEJ16GX4sk3Tl
AUeoIdqFa2rH5/wo0iKfiEQ6uiCo89SgynNCcKZi5yZ7Cri1qBO/JH0m7FYz
9ryMrkrvzP7XWkjIHHLd/Qm9WbTiqvaRCoKyx+OyDfTRf/wz+21rCH3s76z1
HDCes41hLSN1BOdkEksKes+qwblfPeUEeoWutH/otWc1f/69yiFEdc1q6zpS
oOzeHxUHxVCCmBMzLRmtXc2lrcKbQipj3BvzF822tFBwK55E0ouTkdd2wvx+
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
Xj3pxXaVdtjpKmyfi27T6LcNKW+DMwXZnIJpmO+KqjM/FrfCt7oXch7ohKjy
Cok7raDZ73mtDV3p2nL5ArSC+bpCYWA69j/OGUV7YlpgcvuBn0No1VyZcgvh
FnDdz7TtzGcqGK58rUnKaYa/JyalI9EZ8mrNY8RmCFBusJhDM/u3dgo3N8G2
y58fqWXgeWQ594X1RhPej5/lJqE9/lRF2HE3QcojAxaDTCq4fq+5cNi0EU7E
nTmR9T83qIkF0TUCKV3QdGsWFZyL61jG3zXAua90QdfQTmkaE2fVG6C59WfG
V7Sp2AanPnMDGIxW9/FnYz/wfHlTRHU9DFNSGNzQmX9/LzQH1YM9U9ixZrSQ
1eTIVtV6oPC4GBzJocLFhuE2tc314H3k0gM/tOfJvvLAmjpgPiP9aQA9E9uW
VRFcB0/O83dJ5+L5+nZ8d6hlHfCZra0/RctvZuL2kK+DROehI9No3vPft1zl
rwNR3wrdc1+osBieQXeBVgu5z957x6Nt2gOWZdpqQf5tSPIfNJHHeO5Aei1U
5zq0XsrDfGV8fHzbw1rQrr64mo5+r/y7L/VOLfT1SAqx5FPhdNNnCwmnWrhK
3nHxKrpJ3/nXF/NamF5d9iChrw4ec5bTrQU3tv5EngKsZzaz1DLlWlgXLG1w
QVv/TrurIlMLwccTafXoFQ9H+kaRWuBQDNh7qJAKKd29H2bEayFW97r6fXRX
tEagoFQtpLkfe32yiAqcguLE+wq1sHIfqoLRZZp5kQZna0H5kc5sP/qGtwL5
uFotPI202ilRTIU9adXyLBdqof+Nu3wAulZVyPakRS0IpwRf60VT/Av879yu
BdecmLCjJCpYlmnGl4fWAmttyY9OtMJp926twlq43N7CJFKC/Y/7lsWollpI
Ghg5dg8tkP162+B4LcxNUPTb0JTzSq7N9HVwZoHJ51ApFdiX5Of9xeog6C9v
shdaNOG082m9OmhnEm1uQqtonJqZ864Du10X99z+ivXzzdFJo+Y6yBWyUKlH
J6kesdm+XAd0x12d95Rhvls4OFa5tx40TwdEuaId1LoL7IzrIfpsVGk1Wv+L
9xbml/UwduHjxK5yjP/AQeOkjnqQMCxiv4E+/KQuVYGjAWodB6/wVlBh1ZZH
0+NhA+zwmA9yQP/sIsVxVzeAxQP6jK9or9yr6fRsjZD2eEcP9zc8v9LSPd/M
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
MzwiehfhbnPKaxP00TtKKrwri3AgoiA4A03P1rUjjpcC9fo1Nxk8sR99c/3n
PhkKuPJ3mxigKQkPRvitKMD/Y+zcJ7T1m3T5pxEUsLWm33XJiwZdMUxL3gsU
4DjCyfgB3fNSUpeyjwr503vnVtGqL8w+22lT4UqGeO/FO3gOIx6yDt+nAvMt
+YokNGvkxPaaHCp8ltZMW0J7LkwGcS1SQX/VOErjLg1ELk7/M8M+890DT/tF
tCrL/DQ1jQZKT3O4lO7h+GtMLSwyl+DjLmWm1+jjFzm/eWxaBvb3ncvLaPfO
qkNPdJfheyFtIN0H+4sR8ekS6jLc+inzgd8X83FM+kC7xh94J02SW/DD+nS0
Jvji0TVgLdcU1/SngZ2ii9Oux2vgcv7Hvg/oWX3+SxPkNZC3WGcywzp2pdeU
3+HDP+h+SGytDcR+ZKel84rABmz+UWmdEEID70tai3HzdETn6/oGf9GywZfE
sgU2ETsXxtUvP6SBq0zBIZdzm4gJzJuPsz3CfFIRZm7ydBOR+dnL/dfRtiGe
a61fNhEdBY7sqEBvv2gVo9K/iSgrof7H4zENzPpkOySF6Ylvivqm29E76RWL
j6nTExnP2Q8eC8X9d+7jdsXr9MQ2o8fffqLDm24XXH9LT5QdE8hTCMP6yTnI
drccf++c9jEGraN/zjJ8CH//h/CKimaJSfuS+I+eaO/fFKYVjvVy+rnjZj4G
Yuu2K76p6E1Dn61eHmMgSkfPuTI9wf3RXmd8+CwDkT59u2ExWrRwQ03VmYFo
K5OgwfOUBqFpu4g9/gzE5nIJ+Zvo3/GnZK7HMBClNMuPN6I3NMUi7VMZiK+6
dQ4cfoZ9xNayBxb5+D7L0R1+6EP1ejcuV+L7pl03/0BHhpBNNdvwfe4MqzIR
uJ9VfTSUBvF9dJEzEeibTNyystMMxNhHQkOz6OFvHw6JrzAQ6XZ+aVN7jv2d
Qgf7djpGok38ucq36HbdZx/GGRmJjSLdeevou9e1iKQtjMQ3CyZ0hpFY/xu9
Cd7sjESXwhH1LPRXiVRZAjcjUenB9eesL/A+8aJHao2XkbhDfXbACs24yihJ
2s1InOC4JVyCdnvyyaMKXdC7coMnCvOnweMUiV2MxEcJPoU30LDPof8V/t7M
lpGhDv16UmPb5p2MRAmJR5oHXmI+yhQFVy5GIv3K9qi7aAsv1ps/tjMSO7++
GOpEVylOJaltYyQmBwuIiEfj+gfJc1QyMxI9tRJdg9Ej8zc2Sv8xEDV4D5OG
0cvGSXOFVAbiXPIJrecxNNh/fHNTxigDscy5IHoGLRNzmpTax0CMkFYYPRdL
A00Gx0/vWxmI1uvfxOLRglxzB71wPaSr1d1X0CmndZ8y5DEQWcJbSnVeYb21
zFsL+8BA/K6vz/IJXRGyy44P19tn3OKVWRyOv2dU8Zg3A1E7fWIsD22zofI5
34mBeMDdUZzjNdarsdfRmaYMRCph0cMOfaar5sdjdQZiNaNneQVatXrhwHVp
BmJ04z/W3W+wP8gXsFU6yEC0j/TXc0dbfjyXLsjBQNwu9OTXYewzzz2Kkekk
0xNHp3dIPkD3XPAU9u2kJ+bmxN75juaxiGXeX0JPNDybvC0sgQbPAwarr4b/
v4rrPB7KrwsAuCVLmRlDsi8Z+xrCiMk9SZKUtSi0L0LaEykSEqKdhGRfUpYQ
qSxJSZsKvygSJXvLzITBe94/v5/PPM+d59xzzj1XADJ2PFr6+zabaDkdvKGy
RACMbg+H1Wbj/KSyYNTejR8E9h16sSiHTboHbftemGF9G3ElD6BlysI6HGT5
4USdQK5qLtafLbve8TMf1PfItUbnsYlVCvdkxB4+cFW2l3UpxPlf6tr3I7Oz
5McX3tZs9EHqreb/WmZJ6K3SPC76pHBBPkmaJTmLFZjpRRjvPadEPxrNkn+M
sQ3D2BdPdkQ+UTw7Q+K/ZaZZF7OJ1H274rseM0Q122PgElr7ouhN0J8hlbso
BgNoq4CWmDa+GeKgUX/U4i6brB232ebexSM9A8dq49AfzuzlxdXwyNFc3Xk9
aG+p+OTGGzySpnX1StQ9rJdlH9+aePKIyaB9Vyfaq3UywI/JI8/yZxj6JTj/
bVWenynNI177yvzC0O0Oyr8kONN4Xu4ta0MXrBg1GO+dxvuzwpRGKfZji1q/
1pfTRK7o7YpgdOKSuLyCymlio2/5TqUMz1clHdVd8dOkY2RM9gjaXuqfz4qg
aRJQnLXtGVpBrDlFecc04Qv0zJcrx3tGh7gQz3WaXDOkTgSgQwIrqz0dponu
eD2zDi0t5BNYsWKaPL53PGzhfayXm4JqksumyaBRL60GLfTCOf6l1jQJ/XV1
I7WCTR5u5YK2yjSRKFuTvg3twUljR0pPk9zDswPlaLOkfLVquWliubTcQKSS
TVKNs2mFStPkzZ+9xzajxVtvTaaoTpNd9xUfFaPP7rnZH6cxTf4dfTePv4pN
hviS3oTqTJMLZtGO7ugtNy/X7DeYJgyO5dU89DuzhJwtxtOksnK8awrNsNlZ
qmM5TdYGZautf4D1cag4Vgu/r5e5yf822jWDu1Nj8zQ5+o9a/he97M2K5Wp+
02R+dcPU6mrs97Nx0qoh0yQ9OMjmJnqfQfu4cuw0MbHUjx1DO3svfqGYMk2a
p3rfrajB8yjOL1O+cJp4P7wmdw1t6Vdd9L4R9/Okw/ZBtJdAk8GinmkSxZrL
t3qI96GUt/c2Tk0T+ZnyiQT0qqXdxsmLeOTuI1+LPvSelz/K/zPikZWnlcLN
atmka+cfMwVHHum0bmuOQTvxZqu89/JIwFy0eDd6jXox91cUj/DXWXksecQm
PzqVZgKLeER3Rc73j+iSFXMi+zg88oR/s6HOYzZZzzlA/a4wQ9wbaMdD0SOF
vZI7V8yQwYjGR2/Q0ltdZHv3zJBTK08IqT3BeXFhg5JP/Ax523J3wym020Lu
pdbaGaLuOpDTgWYeH7+qPj5DWra52sXXsUmfZW/KB7dZInta/xy7Hu8F2V/t
jdXnSNmDXtHnTzH+CWP2cRF8IAwymxhNbNLs9l+4QhYfbGpeVxCK7pV9+qCo
kQ/42mvWGD9jk8CsG9qt8/hh3Z+rsSnNOK+8dhlYmMgPgwZrKPtbcD4O3F0D
5QLAqgjzbkannZ5aKfifACSyKu+ovsT7dkLiq6ZZATBfq7auHf2NKSpPXycI
Z31nLpBXeL9jrsitGBME5axSccm32C/vzV87ZCsEbrLyC6s+ssnNn3ESMiAK
vslh28XasT/ONvSsPSAKp2UH7m1FZ0lNFYeni0KhbImjKN6jLMHXYYgnCgJy
dtGbOtkk6cGXrPzq+VAmd3hy+hPG09jBhxiKwfMbHaudu3A/Vtd+O+ElBl/k
ll/PRv/0NvQrixGDBfKiS9d143kSIxmk8U0MtsunB6R/xnzI02axEyhAV2jp
gV7Mf+911a3vqaB5c4nhNbScNU/Sf4oKLIVroT/R21WKAuar0sBXYZvc5a84
r39tyu/ZT4M6BY7rtz58/raN6gcODdpvet1mfsPz9N12IiEnDiMK9eNxaHWB
Mz7rrcRBVjE+3rQf+4fQUwmfUHE4oMh4FjXAJv/12L6XnhCHyNRzUp/QYnFt
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
bSyJ0Q1/tb2x/oY2VTwufcP6H+rYEA8=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.2256, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1.23, 1.45}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6485442295639467`*^9, 3.6485443372897787`*^9, 3.648875382103767*^9, 
   3.655203040152836*^9, {3.655203105757669*^9, 3.655203133681801*^9}}]
}, Open  ]],

Cell["Upper limit has to be enlarged beyond 2*99% limit", "Text",
 CellChangeTimes->{{3.6485455825986433`*^9, 3.6485456144630117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PLgivenN2", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{"dist", ",", 
           RowBox[{"L", "-", "l"}]}], "]"}], 
         RowBox[{"PDF", "[", 
          RowBox[{"dist", ",", "l"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1.19", ",", "1.49"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"2", "lmin"}], ",", 
      RowBox[{
       RowBox[{"2", "lmax"}], "+", "0.1"}], ",", "0.02"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PLgivenN2", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"PLgivenN2", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", "\[GreaterEqual]", " ", "0"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6485350223161793`*^9, 3.6485351057219353`*^9}, {
   3.6485351585051394`*^9, 3.6485351620590982`*^9}, {3.648535809074345*^9, 
   3.648535838522942*^9}, {3.648536073661848*^9, 3.648536123752098*^9}, {
   3.648536172994342*^9, 3.648536219180079*^9}, {3.64853628104965*^9, 
   3.648536313294902*^9}, {3.648541707391575*^9, 3.6485417360478363`*^9}, {
   3.648541776531886*^9, 3.648541779929633*^9}, {3.64854201200804*^9, 
   3.6485420355671997`*^9}, {3.648542486832326*^9, 3.648542554063244*^9}, 
   3.648545339119896*^9, {3.648545395592304*^9, 3.648545405320075*^9}, {
   3.648545617911721*^9, 3.648545640566984*^9}, {3.6485466960110493`*^9, 
   3.648546704584093*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(9\\) recursive bisections in \\!\\(l\\) near \\!\\({l}\\) = \
\\!\\({1.4378469000078404`}\\). NIntegrate obtained \\!\\(0.3767194815065356`\
\\) and \\!\\(0.000012114987843777418`\\) for the integral and error \
estimates.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6552030442277317`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.5593862476776845`", ",", "0.005869147956367759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5793862476776845`", ",", "0.012737330010510558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5993862476776846`", ",", "0.029635746438794547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6193862476776846`", ",", "0.05336180667880027`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"2.6393862476776846`", ",", "0.10003487007038477`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"2.6593862476776846`", ",", "0.2219100114797579`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6793862476776846`", ",", "0.3767194815065356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6993862476776846`", ",", "0.59119884777859`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7193862476776847`", ",", "1.0451567822013137`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7393862476776847`", ",", "1.5461277519343921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7593862476776847`", ",", "2.423489399707113`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7793862476776847`", ",", "3.688491082059699`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7993862476776847`", ",", "5.066301526589944`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8193862476776848`", ",", "6.728857613440966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8393862476776848`", ",", "9.955580022247727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.859386247677685`", ",", "11.497743234539012`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8793862476776844`", ",", "6.818037163364674`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8993862476776844`", ",", "0.02833256744784678`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"2.9193862476776844`", ",", 
     RowBox[{"-", "9.53260785985625`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9393862476776844`", ",", 
     RowBox[{"-", "1.3582112188566477`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9593862476776844`", ",", 
     RowBox[{"-", "1.7865839489669543`*^-33"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9793862476776845`", ",", 
     RowBox[{"-", "3.65114039353175`*^-34"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.648535096710186*^9, 3.6485351065382547`*^9}, 
   3.648535164225442*^9, 3.648535840899056*^9, {3.648536099622764*^9, 
   3.648536131105259*^9}, 3.648536235685615*^9, 3.648541747583869*^9, 
   3.648541790958921*^9, {3.64854203314116*^9, 3.6485420486735373`*^9}, {
   3.6485425478346663`*^9, 3.648542562630582*^9}, 3.6485453486637993`*^9, 
   3.6485454570975733`*^9, 3.648545652629684*^9, 3.648546717099275*^9, 
   3.6488753913951178`*^9, 3.655203050601263*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.648536224758671*^9, 3.64853624874883*^9}, {
   3.6485417642636766`*^9, 3.648541809083041*^9}, {3.648542581514505*^9, 
   3.648542585138693*^9}, 3.6485426268352413`*^9}],

Cell["\<\
Build sequence of 1D integrals. Can\[CloseCurlyQuote]t go beyond linear \
interpolation to guarantee nonnegative values. Compare to sum of consecutive \
samples where I take only every 2nd element to have uncorrelated samples.\
\>", "Text",
 CellChangeTimes->{{3.6485424127903013`*^9, 3.6485424191815643`*^9}, {
  3.648543137558717*^9, 3.6485431665584106`*^9}, {3.648876128830182*^9, 
  3.648876141590053*^9}, {3.648877927512603*^9, 3.648877940263317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PLgivenNinter2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PLgivenN2", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PLgivenNinter2", "[", "L", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"PLgivenN2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Last", "[", "PLgivenN2", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "PLgivenN2", "]"}], ",", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"ListConvolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "samples"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", "\"\<Scott\>\"",
      ",", "\"\<PDF\>\""}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6485426116830072`*^9, 3.648542727346287*^9}, {
   3.6485427722640123`*^9, 3.6485427812327642`*^9}, {3.648542824466793*^9, 
   3.6485428433273973`*^9}, {3.648543015012929*^9, 3.648543022133079*^9}, {
   3.648543101180266*^9, 3.648543129059828*^9}, 3.648543178480153*^9, {
   3.648545436988768*^9, 3.648545445329233*^9}, {3.648545697192643*^9, 
   3.6485457018304777`*^9}, {3.648876004780848*^9, 3.6488760069707193`*^9}, {
   3.6488760518240757`*^9, 3.64887606420089*^9}, {3.6488778027603273`*^9, 
   3.6488778357936*^9}, {3.6488779519890833`*^9, 3.64887795217616*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{2.5593862476776845`, 0.005869147956367759}, {
       2.5793862476776845`, 0.012737330010510558`}, {2.5993862476776846`, 
       0.029635746438794547`}, {2.6193862476776846`, 0.05336180667880027}, {
       2.6393862476776846`, 0.10003487007038477`}, {2.6593862476776846`, 
       0.2219100114797579}, {2.6793862476776846`, 0.3767194815065356}, {
       2.6993862476776846`, 0.59119884777859}, {2.7193862476776847`, 
       1.0451567822013137`}, {2.7393862476776847`, 1.5461277519343921`}, {
       2.7593862476776847`, 2.423489399707113}, {2.7793862476776847`, 
       3.688491082059699}, {2.7993862476776847`, 5.066301526589944}, {
       2.8193862476776848`, 6.728857613440966}, {2.8393862476776848`, 
       9.955580022247727}, {2.859386247677685, 11.497743234539012`}, {
       2.8793862476776844`, 6.818037163364674}, {2.8993862476776844`, 
       0.02833256744784678}}]}, {}}, {}}, {
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.609], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.64, 0}, 
            NCache[{2.66, 
              Rational[2, 5]}, {2.66, 0.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{88.03305695689232, 108.54974488328526`}, {
           88.52527670075172, 95.89683796629488}}],
         StatusArea[#, 0.4]& ,
         TagBoxNote->"0.4"],
        StyleBox["0.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.66, 0}, 
            NCache[{2.68, 
              Rational[1, 5]}, {2.68, 0.2}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{108.04974488328526`, 128.5664328096782}, {
           91.9610573335233, 95.89683796629488}}],
         StatusArea[#, 0.2]& ,
         TagBoxNote->"0.2"],
        StyleBox["0.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.68, 0}, 
            NCache[{2.7, 
              Rational[3, 5]}, {2.7, 0.6}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{128.0664328096782, 148.58312073607112`}, {
           85.08949606798014, 95.89683796629488}}],
         StatusArea[#, 0.6]& ,
         TagBoxNote->"0.6"],
        StyleBox["0.6`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.7, 0}, 
            NCache[{2.72, 
              Rational[11, 10]}, {2.72, 1.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{148.08312073607112`, 168.59980866246406`}, {
           76.50004448605118, 95.89683796629488}}],
         StatusArea[#, 1.1]& ,
         TagBoxNote->"1.1"],
        StyleBox["1.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.72, 0}, 
            NCache[{2.74, 
              Rational[7, 5]}, {2.74, 1.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{168.09980866246406`, 188.616496588857}, {
           71.34637353689382, 95.89683796629488}}],
         StatusArea[#, 1.4]& ,
         TagBoxNote->"1.4"],
        StyleBox["1.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.74, 0}, 
            NCache[{2.76, 
              Rational[9, 5]}, {2.76, 1.8}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{188.116496588857, 208.63318451524947`}, {
           64.47481227135066, 95.89683796629488}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.76, 0}, 
            NCache[{2.78, 
              Rational[29, 10]}, {2.78, 2.9}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{208.13318451524947`, 228.6498724416424}, {
           45.578018791106956`, 95.89683796629488}}],
         StatusArea[#, 2.9]& ,
         TagBoxNote->"2.9"],
        StyleBox["2.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.78, 0}, 
            NCache[{2.8, 
              Rational[43, 10]}, {2.8, 4.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{228.1498724416424, 248.66656036803533`}, {
           21.52755436170588, 95.89683796629488}}],
         StatusArea[#, 4.3]& ,
         TagBoxNote->"4.3"],
        StyleBox["4.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.8, 0}, 
            NCache[{2.82, 
              Rational[59, 10]}, {2.82, 5.9}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{248.16656036803533`, 
           268.68324829442827`}, {-5.958690700466775, 95.89683796629488}}],
         StatusArea[#, 5.9]& ,
         TagBoxNote->"5.9"],
        StyleBox["5.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.82, 0}, 
            NCache[{2.84, 
              Rational[73, 10]}, {2.84, 7.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{268.18324829442827`, 
           288.6999362208212}, {-30.009155129867835`, 95.89683796629488}}],
         StatusArea[#, 7.3]& ,
         TagBoxNote->"7.3"],
        StyleBox["7.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.84, 0}, 
            NCache[{2.86, 
              Rational[113, 10]}, {2.86, 11.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{288.1999362208212, 
           308.71662414721413`}, {-98.72476778529948, 95.89683796629488}}],
         StatusArea[#, 11.3]& ,
         TagBoxNote->"11.3"],
        StyleBox["11.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.86, 0}, 
            NCache[{2.88, 
              Rational[57, 5]}, {2.88, 11.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{308.21662414721413`, 
           328.73331207360707`}, {-100.44265810168527`, 95.89683796629488}}],
         StatusArea[#, 11.4]& ,
         TagBoxNote->"11.4"],
        StyleBox["11.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.88, 0}, 
            NCache[{2.9, 
              Rational[7, 5]}, {2.9, 1.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{328.23331207360707`, 348.75}, {71.34637353689382, 
           95.89683796629488}}],
         StatusArea[#, 1.4]& ,
         TagBoxNote->"1.4"],
        StyleBox["1.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.6, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.648542825436645*^9, 3.648542844043688*^9}, 
   3.648543023584338*^9, 3.648543130661593*^9, 3.6485431789237547`*^9, 
   3.64854545745428*^9, 3.648545653014838*^9, 3.6485457027562103`*^9, 
   3.648546717478128*^9, 3.6488753917671957`*^9, 3.648876010263489*^9, 
   3.6488760652718287`*^9, 3.648876161414575*^9, 3.648877837229865*^9, 
   3.64887795567656*^9, 3.6552030510988483`*^9}]
}, Open  ]],

Cell["Strange: some values are negative!", "Text",
 CellChangeTimes->{{3.6485438520856457`*^9, 3.648543866182618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PLgivenN3", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PLgivenNinter2", "[", 
          RowBox[{"L", "-", "l"}], "]"}], 
         RowBox[{"PDF", "[", 
          RowBox[{"dist", ",", "l"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1.19", ",", "1.49"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"3", " ", "lmin"}], ",", 
      RowBox[{
       RowBox[{"3", "lmax"}], "+", "0.1"}], ",", "0.02"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PLgivenN3", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"PLgivenN3", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", "\[GreaterEqual]", " ", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PLgivenNinter3", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PLgivenN3", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6485432594833097`*^9, 3.6485433215697737`*^9}, {
  3.648543362361936*^9, 3.64854336954386*^9}, {3.648545691152505*^9, 
  3.6485457228323193`*^9}, {3.648545756015477*^9, 3.6485457560977592`*^9}, {
  3.648546062108059*^9, 3.64854606375173*^9}, {3.6485467255351677`*^9, 
  3.6485467290476627`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.839079371516527`", ",", 
     RowBox[{"-", "0.03953069687687287`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.859079371516527`", ",", 
     RowBox[{"-", "0.0325999968145182`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.879079371516527`", ",", 
     RowBox[{"-", "0.025540085390176562`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.899079371516527`", ",", 
     RowBox[{"-", "0.018178968343595003`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.919079371516527`", ",", 
     RowBox[{"-", "0.01024096005148561`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.939079371516527`", ",", 
     RowBox[{"-", "0.001058979719183639`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.959079371516527`", ",", "0.010559160141684183`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"3.979079371516527`", ",", "0.026531075938914638`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"3.999079371516527`", ",", "0.05104416081999123`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.0190793715165265`", ",", "0.09089910832804038`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"4.039079371516527`", ",", "0.15610949079244732`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.0590793715165265`", ",", "0.2616884452819018`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.079079371516526`", ",", "0.43338412697491124`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.099079371516527`", ",", "0.6887012939429776`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.119079371516526`", ",", "1.0425802704398313`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.139079371516527`", ",", "1.5404158997016544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.159079371516527`", ",", "2.2080141857200037`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.179079371516527`", ",", "3.0461893642680877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.199079371516527`", ",", "4.075550839664287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.219079371516527`", ",", "5.130764778142445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.239079371516527`", ",", "6.034832884899805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.259079371516527`", ",", "6.6781195980700065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.279079371516526`", ",", "6.281737398507655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.299079371516527`", ",", "3.1957449135206444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.319079371516526`", ",", 
     RowBox[{"-", "2.6527487704963786`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.339079371516527`", ",", 
     RowBox[{"-", "9.383045717223606`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.359079371516527`", ",", 
     RowBox[{"-", "16.17275031314059`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.379079371516527`", ",", 
     RowBox[{"-", "22.96245490905727`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.399079371516527`", ",", 
     RowBox[{"-", "29.75215950497426`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.419079371516527`", ",", 
     RowBox[{"-", "36.54186410089094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.439079371516527`", ",", 
     RowBox[{"-", "43.33156869680792`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6485433218537703`*^9, 3.64854337678974*^9}, {
   3.648545740861161*^9, 3.648545766724619*^9}, 3.648546136659437*^9, 
   3.6485467448850822`*^9, 3.648875401251954*^9, 3.6552030611861353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "PLgivenN3", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PLgivenNinter3", "[", "L", "]"}], ",", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Mean", "[", "samples", "]"}]}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"3", 
             RowBox[{"Variance", "[", "samples", "]"}]}], "]"}]}], "]"}], ",",
          "L"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "3.9", ",", "4.4"}], "}"}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.648543338958733*^9, 3.648543341210371*^9}, {
  3.648545726944162*^9, 3.6485457270392857`*^9}, {3.64854584455029*^9, 
  3.648545912453603*^9}, {3.648545974112673*^9, 3.648545975047895*^9}, {
  3.648546077271329*^9, 3.648546105606048*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({3.900010214285714`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.648546745296631*^9, 3.648875401480173*^9, 
  3.655203061463648*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{3.959079371516527, 0.010559160141684183`}, {
       3.979079371516527, 0.026531075938914638`}, {3.999079371516527, 
       0.05104416081999123}, {4.0190793715165265`, 0.09089910832804038}, {
       4.039079371516527, 0.15610949079244732`}, {4.0590793715165265`, 
       0.2616884452819018}, {4.079079371516526, 0.43338412697491124`}, {
       4.099079371516527, 0.6887012939429776}, {4.119079371516526, 
       1.0425802704398313`}, {4.139079371516527, 1.5404158997016544`}, {
       4.159079371516527, 2.2080141857200037`}, {4.179079371516527, 
       3.0461893642680877`}, {4.199079371516527, 4.075550839664287}, {
       4.219079371516527, 5.130764778142445}, {4.239079371516527, 
       6.034832884899805}, {4.259079371516527, 6.6781195980700065`}, {
       4.279079371516526, 6.281737398507655}, {4.299079371516527, 
       3.1957449135206444`}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
mGNErznaoAr9D6SIwGc=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.9537668715165277`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{3.959079371516527, 4.299079371516527}, {
    0, 6.6781195980700065`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64854334178829*^9, 3.648543377112648*^9}, {
   3.648545741226617*^9, 3.648545767099297*^9}, 3.6485459129922323`*^9, 
   3.6485459754924*^9, {3.6485461121791573`*^9, 3.6485461370765553`*^9}, 
   3.648546745373807*^9, 3.648875401538518*^9, 3.655203061519102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PLgivenN4", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PLgivenNinter3", "[", 
          RowBox[{"L", "-", "l"}], "]"}], 
         RowBox[{"PDF", "[", 
          RowBox[{"dist", ",", "l"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1.19", ",", "1.49"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
           RowBox[{"Method", "->", "\"\<TrapezoidalRule\>\""}]}], "}"}]}]}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"L", ",", 
      RowBox[{"4", " ", "lmin"}], ",", 
      RowBox[{
       RowBox[{"4", "lmax"}], "+", "0.1"}], ",", "0.02"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PLgivenN4", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"PLgivenN4", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
      RowBox[{"y", "\[GreaterEqual]", " ", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PLgivenNinter4", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PLgivenN4", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6485426116830072`*^9, 3.648542727346287*^9}, {
   3.6485427722640123`*^9, 3.6485427812327642`*^9}, {3.648542824466793*^9, 
   3.6485428433273973`*^9}, {3.648543015012929*^9, 3.648543022133079*^9}, {
   3.648543101180266*^9, 3.648543129059828*^9}, 3.648543178480153*^9, {
   3.648545436988768*^9, 3.648545445329233*^9}, {3.648545697192643*^9, 
   3.6485457018304777`*^9}, {3.6485460429760923`*^9, 3.648546046027055*^9}, {
   3.6485461455916853`*^9, 3.648546181936636*^9}, {3.6485466043098507`*^9, 
   3.64854662491381*^9}, {3.6488755835643053`*^9, 3.6488755887395563`*^9}, {
   3.648875623191681*^9, 3.648875649068719*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.118772495355369`", ",", 
     RowBox[{"-", "0.19090859158358273`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.138772495355369`", ",", 
     RowBox[{"-", "0.1749366757863526`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.158772495355369`", ",", 
     RowBox[{"-", "0.15896475998912182`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.178772495355369`", ",", 
     RowBox[{"-", "0.14299284419189243`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.198772495355369`", ",", 
     RowBox[{"-", "0.12702092839466092`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.218772495355369`", ",", 
     RowBox[{"-", "0.11104602576242854`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.238772495355369`", ",", 
     RowBox[{"-", "0.09505208997559048`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.258772495355369`", ",", 
     RowBox[{"-", "0.07900632499609565`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.278772495355368`", ",", 
     RowBox[{"-", "0.062828964208766`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.298772495355369`", ",", 
     RowBox[{"-", "0.04635824629143094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.318772495355368`", ",", 
     RowBox[{"-", "0.02926446931335746`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.338772495355369`", ",", 
     RowBox[{"-", "0.010928550565148333`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.358772495355368`", ",", "0.00979740574794415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.378772495355369`", ",", "0.03488393701790202`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.398772495355369`", ",", "0.06785084389428203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.418772495355369`", ",", "0.11526793813872266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.438772495355369`", ",", "0.18722825214914024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.458772495355369`", ",", "0.2954351368791594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.478772495355369`", ",", "0.45500562687135915`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.498772495355369`", ",", "0.6842738019542899`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.518772495355369`", ",", "1.0004832999855042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.538772495355369`", ",", "1.4157614555589408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5587724953553685`", ",", "1.9420177156036267`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.578772495355369`", ",", "2.579350526675968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.598772495355369`", ",", "3.3029039649709864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.618772495355369`", ",", "4.048748094069041`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.638772495355369`", ",", "4.694841672204621`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.658772495355369`", ",", "5.05362549542875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.678772495355369`", ",", "4.928585100491461`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.698772495355369`", ",", "4.008700407002701`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.718772495355369`", ",", "1.928439724695302`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.738772495355369`", ",", 
     RowBox[{"-", "1.0818259659740885`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.758772495355369`", ",", 
     RowBox[{"-", "4.167818450960962`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.778772495355369`", ",", 
     RowBox[{"-", "7.253810935947971`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.798772495355369`", ",", 
     RowBox[{"-", "10.339803420934844`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.818772495355369`", ",", 
     RowBox[{"-", "13.425795905921854`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.838772495355369`", ",", 
     RowBox[{"-", "16.511788390908727`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.858772495355369`", ",", 
     RowBox[{"-", "19.597780875895737`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.878772495355369`", ",", 
     RowBox[{"-", "22.683773360882473`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.648546200936067*^9, 3.6485466278603497`*^9, 
  3.648546758009542*^9, 3.6488754152331553`*^9, 3.648875655576436*^9, 
  3.65520306410391*^9}]
}, Open  ]],

Cell["\<\
The integration goes awry and takes much longer than KDE of 125 samples. \
Additionally, the samples approach automatically tells us where probability \
is negligible. The integrals go far into the negative, \
that\[CloseCurlyQuote]s not what I want.\
\>", "Text",
 CellChangeTimes->{{3.648878842976686*^9, 3.6488788939922457`*^9}, 
   3.648879037199182*^9, {3.648881085133376*^9, 3.648881098153755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"ListConvolve", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", "samples"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "4"}], "}"}]}], "]"}], ",", "\"\<Scott\>\"",
      ",", "\"\<PDF\>\""}], "]"}], ",", 
   RowBox[{"SmoothHistogram", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"ListConvolve", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", "samples"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Oversmooth\>\"", ",", "\"\<Triweight\>\""}], "}"}], ",", 
     "\"\<PDF\>\"", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PLgivenNinter4", "[", "L", "]"}], ",", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"Mean", "[", "samples", "]"}]}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"4", 
             RowBox[{"Variance", "[", "samples", "]"}]}], "]"}]}], "]"}], ",",
          "L"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "5.34", ",", "5.87"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "PLgivenN4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.648543338958733*^9, 3.648543341210371*^9}, {
  3.648545726944162*^9, 3.6485457270392857`*^9}, {3.64854584455029*^9, 
  3.648545912453603*^9}, {3.648545974112673*^9, 3.648545975047895*^9}, {
  3.648546077271329*^9, 3.648546105606048*^9}, {3.648546193161442*^9, 
  3.6485462351748753`*^9}, {3.648546642243177*^9, 3.6485466460316887`*^9}, {
  3.648875444596229*^9, 3.64887548027859*^9}, {3.6488780079291573`*^9, 
  3.648878040719378*^9}, {3.648878073716797*^9, 3.648878103826251*^9}, {
  3.648878182824586*^9, 3.648878183659068*^9}, {3.648878255350985*^9, 
  3.648878298326771*^9}, {3.648878337712345*^9, 3.648878362558104*^9}, {
  3.64887841008952*^9, 3.648878446605722*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({5.340010827142857`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.648546758109273*^9, 3.648875415444078*^9, {3.6488754495278378`*^9, 
   3.648875480664021*^9}, {3.6488780768695993`*^9, 3.6488781046530313`*^9}, 
   3.648878266031497*^9, 3.648878363890283*^9, {3.648878419781176*^9, 
   3.648878448988186*^9}, 3.655203064395274*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.637], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.35, 0}, 
            NCache[{5.4, 
              Rational[2, 25]}, {5.4, 0.08}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{27.230392156862308`, 
           63.732570806100284`}, {-36.379735729485155`, -35.11290325418674}}],
         
         StatusArea[#, 0.08]& ,
         TagBoxNote->"0.08"],
        StyleBox["0.08`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.08, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.4, 0}, 
            NCache[{5.45, 
              Rational[4, 25]}, {5.45, 0.16}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{63.232570806100284`, 
           99.73474945533735}, {-37.14656820478357, -35.11290325418674}}],
         StatusArea[#, 0.16]& ,
         TagBoxNote->"0.16"],
        StyleBox["0.16`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.16, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.45, 0}, 
            NCache[{5.5, 
              Rational[26, 25]}, {5.5, 1.04}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{99.23474945533735, 
           135.73692810457487`}, {-45.581725433066126`, -35.11290325418674}}],
         
         StatusArea[#, 1.04]& ,
         TagBoxNote->"1.04"],
        StyleBox["1.04`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.04, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, 
            NCache[{5.55, 
              Rational[4, 5]}, {5.55, 0.8}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{135.23692810457487`, 
           171.7391067538124}, {-43.28122800717088, -35.11290325418674}}],
         StatusArea[#, 0.8]& ,
         TagBoxNote->"0.8"],
        StyleBox["0.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.55, 0}, 
            NCache[{5.6, 
              Rational[52, 25]}, {5.6, 2.08}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.2391067538124, 
           207.74128540304946`}, {-55.550547611945504`, -35.11290325418674}}],
         
         StatusArea[#, 2.08]& ,
         TagBoxNote->"2.08"],
        StyleBox["2.08`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.08, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.6, 0}, 
            NCache[{5.65, 
              Rational[24, 5]}, {5.65, 4.8}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{207.24128540304946`, 
           243.74346405228744`}, {-81.6228517720916, -35.11290325418674}}],
         StatusArea[#, 4.8]& ,
         TagBoxNote->"4.8"],
        StyleBox["4.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.65, 0}, 
            NCache[{5.7, 
              Rational[138, 25]}, {5.7, 5.52}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{243.24346405228744`, 
           279.74564270152496`}, {-88.52434404977731, -35.11290325418674}}],
         StatusArea[#, 5.52]& ,
         TagBoxNote->"5.52"],
        StyleBox["5.52`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.52, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.7, 0}, 
            NCache[{5.75, 
              Rational[26, 5]}, {5.75, 5.2}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{279.24564270152496`, 
           315.747821350762}, {-85.45701414858365, -35.11290325418674}}],
         StatusArea[#, 5.2]& ,
         TagBoxNote->"5.2"],
        StyleBox["5.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.75, 0}, 
            NCache[{5.8, 
              Rational[8, 25]}, {5.8, 0.32}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{315.247821350762, 
           351.7499999999991}, {-38.6802331553804, -35.11290325418674}}],
         StatusArea[#, 0.32]& ,
         TagBoxNote->"0.32"],
        StyleBox["0.32`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.32, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxd2nc0l+HfOHB7RPZ9fz4oSiE0aJCS610oWZkNUpEQEpKVFaIohGSUFEJW
dla2koxIohAis+xNv+t7zu95+p6nP/qc17nueV3Xe9zn2Gp6XfcKHQ0NzV38
339+Wf0OnbyvRgDN///3f333OIeAujoBCcO3z7K36CEW1v5RVg0CZCjeFZdP
XkIBDfkl77GfFPFPO+RbIqbge/cDNAkocWEJ2ZJqj/y1jY2PaxEwo551ynSz
C2LkldnNeIqA1I5NY5/KvZBfO8PfamwaqfzKtZN+iCHqa7OPNgHKvQNKtzXu
IV/D9PijOgSwhiSXrf8MRnSbve1pdAnwDf9ZHx4Qhnx69Y6VY+tWv9Hy6n+E
aF+I83rqEfDT+BHfba9odNtsZUBBnwApmV4jScOniEa8OW8F+7iOgmBRQTzy
Gnlxp9iAAGvmAM2fnS/Q3zSn066nCRC8nHI1gjcJedqqiR88Q8A9jdAXjy4l
o3VpocV57FMMuupBZanIY2bqff5ZAno8k8lFsXS0ml8b7XiOAGHecfrj0ZnI
3SXaap8hAdwH362a332NVg5dOzyNPTDp7v+nJhu5rQF7thEBoddWSkxpctFy
OV/39fMEkDaVT4cP5iFXn+GM3cYEHCvjPJhpk48WlUs9J7DFb398PhxdgFyY
Q0+lXyDAnV6kteNtIVqov7zF+iIBldCpUd/5Bjnfl5uSuITnn8suSWCkCM1r
sVUNY9vPj349PFaMbnL3hiWbEGAQYeqZ3VOC5tpyLpubEjD7QaOJrCpFjpH+
+0UvE+DmfNtbOKIMzZ41ZPyJLdO97B2t9xbdENz95YUZAVtydG7Z/n2Lprtp
k02u4PFPswpJkeXIIb7deYs5AZknOZxl2CvQlGmqai+22a9SrvmjFchO1IM/
zoKAC0e0u3VtKtDkL+3R85b4/dci2zcEVaDrr7aXCF4loPqOQfXU0wr022Yx
qAvbKivCaTyxAtnu+Xg+2oqAl5ZaQ5PPKtDE1LNdZ60JSBF3UWAKqUDX8m6s
kzZ4v+yyblR2qEDjTiea27F5nr5abj9ZgazlBeMjrhFwyYyZdpaoQGMrv+30
bAlwmVYya8soR1Zvq47yXMf7uSV873aBcjTiHcnzCfvodSfKa/u36KqS1UCI
HQGE3A1V6/wyNMyomKdlT0DOGo++xVApsnzPfWejAwERJQ/qPjGWol+BgwYf
sfmG9yVN85Ugc80isaAbBFx0C6+QJIrREOeDhZOOBCSGne2eYi5CV1ovvWe5
SYBlzUju59+F6GfE/uh32G/ZK+ocGgqQ2RkWK38nArIt3Tjdn+WjAf7vh1Sc
CXhBZPhk2uShy9+z2Bhc8P1v2li17c9F/XG+36uwD0eFPy5dykYmJmcybrsS
YH6t7urRsteob5uUJ7gRcE3m4nlnuix0aWhd6y+2Qs9MKktIOupNaRV+e4uA
XdJsK73bXqGL1i8n3d1xfKVl50TWJKOeXW6Vhz0I2NQb1ZDpmIQuTGqGLWPL
hv9aDJRLQN05Wy8XeRLwft9tR3Ou5+j8zbl9Ll54/kTvzUUxxKHvcvUMct54
/3b7/hLaEoOMlp+0z2Fvj2gJ93KJRF2ldi/zbhOQy6P/XZknHBl6KTvf8CGg
/vZlsSf9IajzKFV1ry8BklI/7Z1lAtE5hnHqFLa57B6pfOIO+lpXPpLlh4/f
qnJuU5g3OnMvvNj2DgGGt9ilR7VcUYe6RdAuf7yffYY78lMc0GmOw+fHsdsc
lPfI6Vuh9haOXWkBBCwlWnszPzBBBuH9a1fv4vzluKP6epYB+mxQ0LTjHo73
hyOWQdyqSJ8a+OwXtvLHwuUHebKorcvY7mUg3n+NW6ftjm9Buk9ljl4JwvPr
ZS7a2res2HqRkWf7fQK4Jrv4GWVLFHVEOvv7sflWwjpsNykptvxMz33+gACT
dC+DrKJGBe1kb79LwQRwljrf7BF7r9B8Vd9AOISAsobrjzZG5JSe2rlDrOe/
3PR7Zf5JKI6HuneBKddrSjWzm98ZPfx3vcYbCVECYf/yv4as89XOsP8Zf6rQ
sKh2KCqcgNhs8Ut8PQ2l6iVCbGci/h3/wWP6G/Hon9WgLv3zo/85v6y0ni7G
Izzy37hq7TUt3cf/xt8HHBXmjvrnE2rEZHPUv+Pr2EcqgqP/Pe/x5tKHmjH/
e7xC7cNQU/bYf+er6Jvta/gv15AHGQKf/LueUidbu+rTf+dXx/YmMcf9Gz92
Idep7r9cuSXgxJ1n/3x0wJCqHP/PFUm7R+ie/zNY0hVX/pfLJb8Eer/49/yK
E6lGKOHf+Nssj53r/+UjDjprpYn/XLpftOlW0r/zFRYW4w69/Pf8JUUfry/9
rzMUDrvHw5vkf+PFio7czikEMOgItHAVWyvK06r2H0gl4OTtiPqIV/2KRdWC
ubPY+3nU85TYuNBB/z++ua8IyG9bcja23okKVav1HdLwfot2/Pj5yDEkx/ZY
VCYd56e70p1npPVQQaPV/B/sc78c9jv5myDZUMV3mRkEtNA6VFJ+2qB8XZ6o
a5kEnD+/LeE0lxPaTwxZ7swioLGQqyG13gvldRTJj2GH+7IJcffeQftiHmx4
9RrbzlMthvYByjlv8s0yG8e/GlV3U2oY2it8IF08h4DXXw8McF19jLL7WDyG
sNOlheoly58gmcTvmkm5OL+Ah/C63nP02vy1kFkeAQVlAp8lQxLRHgm/PyL5
BNBGrHC/2ZiCssbOVPRhb5xUtA5qSEO7M6Uexhfg+qIo6firOgtl2P01uVhI
wLhtZ3D5Yjbata9tr9AbPL97bh1QFs9D6XMv6buxRXJawMKqAO184/Y5tgjX
j6AXgX1v36A0N60kw2Icj9GNkSe2liDJIyJO/CX4fN3vCdzBZejV37njX7Gl
coLyPtFUIImqesrjUtwvNTFVSihUohS/p8MGZQSwhdYryTtXoR0n7Iv43hKQ
Nyk4tuN1NUpmVQlsw2YsFaAVHaxB4h+pRmHlBDBRrdwv8dWhl8HjUjoVuL95
k/CLovAOiepUrHJW4v4gF5d3w/coiTeisQm7mL78107berT9i0XcgyoCFJOq
Tqvf/IASog5f16gmYIfpNMXGtgFtM+IEthpsaPHbevYjerF5gOsD9nxEYwQh
04hEfhT03a0lQK+iK4FtsRE9fxGYc6KOANf7OZz9aU1oy5ULvkzvcH+wry8t
XL0ZxYvv1a/FzmILYJf/0oyERxlF/d4TIGoz1uYn2oLi0jvnjtUT0PRD3CJT
vwUJXc+oo/1AQIhLp4KBSwt6KnP7cQU2p7XhkkpoC9o0q2/p1YDXc9XK7cKT
FvSkYIe84kcCtqrodNRgC7qusq5hj7BUZFuEtaDYwy1dJY0E0NFMvBjybEEC
6wlpbk0EaE/m3N1r1oKiK5zd5ZsJOPhisPiJcgvi91XXXMS+8ntN01CkBUWp
CAsVtuD+rnkwVvBvM6KyzPy++YkAsQuv720pa0aPP9SV72/F+1NB5J2ZbzMi
H8SEzmB/6N3/ZNKgGUWesjXJaSPgQf/tiV0HmxHBc2yv/Wc8Pr1BdHZnM4r4
TNBLtxMQTDjEssg1I77HI22/sZUEXTJUDJtR+LmyxIwvBNha1o4bxjYjnk0P
b9p04Hr3/oaa1nozCusxOy71lYA9InQMakotiPv5Qcoodnbu/NxMbAt6eJl9
OKUTv79kRrke2yfEJfbjjUUXAQ/RXE1A+CcUMpx7T+wbAaoCTTu9ZFsRZ1qA
4SD2p+STRhLzrSj4mpFU4nfc/4Tea7P/3IY4pPesmnbjet+XIiX2+TN6ME3X
uLWHACFXQYNHi+2IPf/L0x/YgiqVH7KUO9B951e2z3rx8zb0ZQQVf0VshzzR
hR8E+GTo85gbdaHAVR2uzX0EDMrXWeeIf0cbykX7vmEXJ+jWSwj3oHu3l7Jj
+gmQ1tKpDd7yA7EoN/qcG8D9O2dyys3jfegu03M96k/cH9q0sQ169yPmesft
HdjLdbQ0Ns0DKCBIde7RIAFBzd4Uf5lBxKS1qU5/iAD21tSDV14OoTtck5G8
vwiocjhk3rdzGDG2VVu0YmuVdot6Vo8gv0ePDz4cJiBtXivD3nIMMZy1ZtUe
wf1H7oucNP4J5CuAujhGCdjGWdD77fNvRNfNk9aIXcprOluiPol8ng3duj9G
gOcAV8KlPVOI1rRYQ32cgOYXIaqDvNPIe3vw5g0TOL+cYjn2dmEa0fwy+f0e
e0ZtcPpU5wzySj1QHvAb98cpS1lMhbNo3Zo19PgfnI+V9DQsQuaQ5+7uS4yT
uN+UCthDmMyjtcnXMjXYuhM8V7skF5BHrh+d7xQB3hYaZq/GFtDqzbNtR6dx
/bnrLfj8xSK6dXBnIs0MAfuGhKZ/ai2hleW/juXY48Xqw+l/lpBbWZuK5yzO
lw0b2vT9ltGyVzJ5ZA7vD8EpmrPsK8j12K1fK9gfos0UDwesoEWGU2+K5/F6
Zpz9GTS7glzeidxzXSAg43RUdZ/eKlq4N3/u4CLuzy4m9P1IXEVOGh8kF7Bn
XwsxH/61iuY54lbylwhYKesQzhZYQzc/2X90XMbzyWJkw4fW0Gy4ytN9KwSs
VW++c0J/DTme5redxjYPPrQHGa6hGeqEYvYqAfqqlXT0OmvoxrcKTrs1PF8M
Mf0ZB9fQ9NOIH7vXcT7mWVGx5V5D9pcssyewFbY76Pl/W0VTIgo+6X8JqA3x
blR/vIrsBjn1rGlIcEj+0CKusoomkwe2SdKSQHKCdeTgCrpuVTg7jE0jjFYl
XVfQ751Btcl0JBwZKX2WS7OCbP9ciDSnJyFamEpe9FhGE9l7LUQZSHjOnRUa
OLmEbByZDv7EfkU2VoYYLaFx2S6WBEYSpJ/x/H1bvoislzI6TZhISLnD33FB
aBGNltx+tYWZBFcT5ltpLgvIytPgVi82k0TM3e/N82gEJDTiWEj4KR29XVZ0
Hl2lX9tkzEpCU8CANqPbHBqubZkQ3EBC8v2OVN/mWWRxN/FtF/bNjbRvW8Vm
0S81l5BoNhIePPQ1Yr89g8w3alw6y07C3z09Orq902ioWViGspGEnFfPtVOO
TaMrYTO0X7BFVRO0xtKm0E/9d60RHPj93XabNQtOITNKbIIeJwlJdq0vu8Mm
0UCnrSMPFwlKV7vr7bknkemTYyqfsJX97Wic9/xB/RdIMpSbhIWy2NES9d/I
ZOvokBYPCWnxa5cJlwn0Y6CscCMvCY0TFaf+5o2jSy8f3v2I/Vq+TQfox1Gv
5ZVzQXwkbEti2h50eQxdlJKXVCNIyJP+zRj9ZRT1TLCvsJAkZNaEu94yHkXG
r380vMO2cFi9ab00grod8p74U0jQmaME5KSNoPMH7l5ToZJgwx3ALXhzBH1b
MFJk4CdhaUrtV7vBCDIq3sNZje1AWsd7aY6gLnf6H7cFSDij+O6qpdEIMkQd
r0GQBDv51b4FzxHUSZt2+y92S9b1i4GFI+hsjafu200kqMVsUlumH0Vf/XW3
eWwmYXOPcWW56Sg6c1Js9rAQCdZihsO7WkfRF7blmmXsOi1xczvtMXS6qfFR
kTAJu7mN+v2/jaH20OfmLlvwfCto0EfYjyMDvZtycltJOOpcsN2XawJ9Jk6y
zGN3NUvXBBRMIL2vmzrzREjYFT2VF2r6G7XFTKbe2EaClFr1bkG+P0jXuMZt
73YSQpSFBtkb/qBPwlHqU9iam88NFChNIp1+602vRUmQ1ZI+7JY4iVoS0YSt
GAmfxrpPujBPIW0L3re7xEkoWo+vlbWZQs0Sv4LHsf2O1PLdaJ1CWuPFF9N2
kDAY6aigfGgaNWUGS1tJkBBgPsrXlzCNNO1NaSUkSRB6vtobwzmDPu6Tbf2F
TfGInHntMYM05lkTXkqR4KHkoK74ewY1vOm+cWUnHn/I7S5vMovUb2Urb9+F
488uZJvLl1n04cgdYgD7gH26XI7mHDpJc27o+W4SvFZrCkLq5lB91c7CS3tI
6O2iP1cG80j1Ds1dYWkSynv63X+UzKN3Jz6f7cHutAkODZJbQCc2pEg8lSGh
T6AkVjt3AdV9vLVstJeEhGOvOpt3L6LjIacaBPaREMd/CMpTF1GtzrYnndiR
cY+jVrYtIWW+BZuo/SS0dr2SsX26hGq+fDhy5gAJvkNKhXPEMlKKjuMgZUmY
sUmnuf5gGVUZOfR+xjaQGLXLp19Bx4SOvw6Xw/Gsf2At3GUFVf7gv617kISL
Gl2TjWMr6GjChA63PAmXShSPHTFeRRVXKkVasK8NTLdXfVxFaMejmeBDOH/o
F4kdOrSGykctazQPk1DPsdzum7SGFDMUHrErkDB1OGHUj2MdlV3nMm/AFm96
9p3j5jo6svenbOARvL9v3n7W83Udlc4WMp9UxO+zeKs9Tv4vUigM+sqMcDxN
7ygeifyLSlwvptZhd4zz1qpN/kWHFPa53QESzjkw08WL0EDxOpO68lESjHvu
JD5VowH5yi5B+mMk3C0Uu9N1nQbe+GaOV2J/P3Tq+/YwGjh43KfMW4mEL0NN
OeezaaCQ5XQwUiZhq+oFXftGGpBrkLi4/h+ze944NUQDBQ/W9pSp4Hiytcv6
s0IDB7Q/0bgfJ6Fy+Fa6Kgct5PMkfTp0ggR/TyVnlc20sL/d5cUStkWj0a3B
HbSQ+1jjxhtVEoK4FLcel6GFfYZblJ1PksB1fldBvCwt5Gya5ZNVw+u98ZqY
njwt7O19NziLfTBsf8l37OznsQW56ji+3F0ONx2kBWmz6wEOGng+dH1d0/H5
r8WUzspo4vmbcXZj2k8Le0ZIiUlsCyX7HEd8v8y00aVMLRKGGm3rHuyhhd22
bz9cO0XCXIEpfcduWsiQDovdqY3n51zpt/d4fNfMFZsx7Mtn2g782ksL6fny
R17p4HpzpMeyEt9fymUjx1VdEiaG9Sq+HaWFtEN9PeJ6uF4YXDnzWIsWJNfy
soawD7Mlbtt/kRZSy+96J+mTcCpVye7bDVqQ8DmvY2aA4z/ye1nifVpIUZYW
2XaahMVb4ieTUmlhBzPDTB/2XqkfPxc/0EJyfUd1/BkSwpsn8x5N0oLY/bSI
i2dJcDKqojEUoIOXWl5XhM6RUEqbbcWhSgei3Hqy3dg2HhcP3HKlg8Q2MeYn
hiS0Tf3Y5pFJB9sjlzsMjXA+1H4gMj5EBwlnm1L4z+P66tCRVyBCD9sEX7h+
xVZgCPn6y4QeXnTfVHtsjOu1nnvMvUR62Bp/UvD0BRK2f2ShDRilh+emm8f5
LpLAUvSxKXUfA2wRnSptw47zlw6P82KAZ79qHoRdwvspcyScs4kBhF9FXdAx
wfN1ebgjX4gR4mxs9nCZkvCVT5PlrD0jCO0BmmZs6wtr7Um1jPB0ivfTg8sk
sJts8pURZIJNeb+ea5jh8dpY5GnPBE+cShzYrpBQ1bTDc+t7JhCUD1H6gB0X
xbGrWogZYlZM+e6Zk/Deq61g1ZEZBN7KDp6wwPfzGMrQ+sAM0d4bCpgsSQiz
3HZWTogFqEo9/rXYMLiQetGOBaIYc874XSUh/mJ9fmwFC1De39mhZEVC8G23
sCoOVngceG6J1pqE6cGu+kxDViA1d32owG5Dexu1E1nhESdtrJcNzseGtHWF
Y6xAtH62VryG+4HZwXPKMhsgIiJFYQ17ol9l3vfmBuA7476x1JaEiH6f9dU3
GyCcX7vH7ToJy4P+jhKrG4Dn+7YseTsS9jOa1rkhNgiLW/BaxNZZ8Jk+6MsG
3CYN2oX2JPCvZ8p7v2OD0G3Ptjo54PqioSlkzc4OXEMO0/tvkPDny07ew7rs
EJJyvHoGO4vpxB7paHbgsBaIyHEkYdVQXiygjx2Cd/02s79JwokvWyTOSm2E
jZOVB6Sd8HqqXZ5PctoID3IeMf3BlpKha7eo3gjsN692ZDiTcON9cGkcNwcE
yR1JsXHB9X+Zt9XDhAPYlrlcpVxJ+PWYLUArlwMCS3+eHMWuWY0RUWHmhA1e
bwRS3UjYGHs8/JYxJ9w7en/M4ha+3ta8FZoCTmBhuFQq5k7CsYsJG9xYuOBu
3b4Hg9h731iUH5LjAuZ7zBcSPXB+38Glf96CC/zVv+2+7EnChYRm9j9RXMDE
kfV3qxcJz8K0D083cMGdFp+WH9iHPr2qMafhBobw08+feZNwpenMOQNZbvAz
kHS4cBvPh9bKj/xr3EBPXT+22YcEZkKWz/olN/h2feL9jr2aQ8lQ+sENdE+T
fsb4khAqd8RpRYAHbl90zT/nRwLtycBdx07zAK2Ipj/1DglX03PFPzzkAe+f
W850YH+WjevQaOQBmuRZ8Uh/XF/aRd38WXjB6+r7Rf0APH90ayJ7lXhhXepJ
Pe9dvN7b/Ls2ePCC5+/rMa3YT/YH3+jM54W110rWD+/hflRWzs98ghfcb1AU
tANJWGnj7PLfxgerB8bYOYNwPDeD3+azfHBr8W13I/bXWMorxiA+WC4Oy7x/
n4R9EZsZWEv5wM3D3Ev9Aa4v/YF3ekf5YAkd0t4QTEKFz8sAFQoBrnQcW+ux
5e9mKDIcJWCxpm8qIATv/1cFBjMWBDgH5FcdD8X96MJVpfUgAhZO3gtnfIjr
6dAAO5FBgBO7sVkN9p6IuX7ZBgLmm6QP+Ibh/uLNYKEV/u68+ZCB6Vg4CbYP
9+u/wd8ds3pfv9BE4H6vjkSiuG91JNOTy7F5Nr3TrsB91MxXLxfPR/+Jx06J
JFz3HWL1Th6JxP22oezkIq5708biAqvY3OGuKWO4LthvWRktfozrKcv12Tyc
Zyf7m0pco0jozo+oDcB5zi7pxf2D0Xj9yn7ExeA89MfCyXgBu8CY/foenEeu
S6rtLojB9cZPQycK54nf45v/Osbi/W1NNw84D1zLmmre9wT3q+/HBu/hPDBh
Xxs/jR2b5JZTgOPeZn+0ffZTnN/yPDOncNyPz9scs4sjgU9g0PkSjmvrIuDd
8wzPt9H60b04jkdv8f2cwGbnPyX8CMepleJwXno83k+b0wwKcdyN0JTesX5O
gnNhqulHHDeW1SGnJV/g9fVzWOfE+3j4zmXxEWyFvBc73+J9ZaEqt5icQAJj
9P01VrxOQxvY6s0TSdgQ9piLB7+XeWNPtGgSCaZjh678xL+DITlW//l9XvPn
S3AujhNd/8MJL0molghdk6zG31F8huymyfj59TKIps+4jnbs6t6SguufRccx
p2ESBqJpM3uxveT8R9nW8XXPt3vGpeJ1cjtLe5WgQL9Q6injVySuu1N853dT
wKTPfcumNLz++bUdyaoU+JGgPdWF7fPO4zydGQUumW+vik7H8V5pPyToTYHe
HYthZzNI0C/UM0l6QoELYw2XKZkkPJWRGVMvokBPxrP9X7A/5IScSW2ngLHd
DcZHWSQIzrfTqkxR4PveE1/0XuN+gNlqJJWNCufnBJJ5snH+paF+td9OhW+F
v50/YQvnHTtlepgKRm5VqqE5eD2V2DeZalOhSyGS/xSel3sZ0bPnLlPh3N+r
oxvzcP1I+qiyx5EKnZVHSj5iX5b5Y9rqQ4Wzftz3g/Lx+9aY5kqFUKHj+OB5
tQJcz+tjfTZHU+EMa9Eu1kK8/8ar1x7FU+FLw/31d9jg6NCbkESF08GXmv3f
kPCmMV7WIoUK7dr741WKSOhPiZRkTqWCPi+LPUMxjl9vK0pWMhU+t387Wo39
h/4NzZ1EKuhFZfH4lOB6nDPu9foZFVoNfQegFOcjH9XD1/D9dTefyfuLXdsS
cIEvjAqfeiXvvC0jwcze6D1DIBV0XqwbeLzF8RvG4Rp8mwotZq1iCuW4HjBm
JP12ocIp8ZcLy9hyhhfFT9tRoXnE9X1RBV73WutaBksqaKVrRrtU4u+LF8/W
jl6iQpPtViu5Khxf9Q17z5yjgqbM3KF57G3JAel39ajwceY9Wz7eZ7U3p8x5
T1FBo+DJ9xs1JGjPFfnv06BCg4tdxt5a/P4FMZb71KmgdljZcwr7FoPUgC4e
/7BGOfW6Ds/nTwpXAT7/ZMWY8PV3OP6nuc7ZGFDhvU/55K73OI4nr8s4G1NB
VSW8chw7SuPd50oLKrxjtghLq8f5s/Cx6k68nic+HLps9YEEo+JU3XC8nnX3
OfZLNJCQQlOr3IHnS+VUP8Mwtpo0mdKJ57uWu6D95UcSSi5vDLj8hgrKn++9
vNKI+8EW+ny5RirURBo7b2/C86W7K5F/gApK52RUB7DPlqlUVCxRoUqQkf9F
MwnSdKp8fVz8cKzn68ilFrz/ueuLt+/gh8r49GLhTzhu2fU5diB+gMveQT3Y
YzTH3NwM+KFCVP/801YSVF9aGBZY8QMaFt91vg3vp8gCdzdPfnj7amVNAMet
vV/9mnEoPyhea27qxKZ7zIMWnvFD2Z6EZ1HtuL+4v7Lek84PCtNOdme+4Pi+
djSjpIAfSvPUjpIduP9dOeh+tIwfDjsL8bRjj+vKfN1cwQ8l8tP94V9x/E3q
qk++5YdDq7W5up04/gT0P+gX8UPR22g/7i7cz7krhU1n8oP87WsGLdgdP4ZC
PfH93ygdFQv5hvMMBLzMCeSHg0zEguZ3vF4Z5y+fs+OHwvfD79i7Sbh/uuKO
ijY/yAaVRjVgP6sTYNSR5IcCzdCrgT04H7yuar+6ToUDXGaHTvbi9+EQ2B7x
kQp5rXJsLD9wvTzFsnMsggr7H7F9r8Ou2KFUGXKGCrlnetPv9OHvjckOx2g+
KuwVyPVQ7idhkxLPN+IjBXK++2vRD+B63UAt5/akgMwzQ+Eq7O7cb3wJkhTI
Ntk96f0T9/vSx22H8bpIb6erRIM4/zpYOPDgfJ411P5wHbtL/TeHMTeOq9RU
07IhnNdpnbYwvSIg09pjn/svEgjrqN/aigTs3q3DcBjn1Yi997WCm/ggY3J7
+xJ2ZuYVWX4jPtiZu5j0ZoQECa8FeZ2fvJB+86OT8yiuS3LRKNGKF6QOxp+Q
HSNBiYv5dcRvHni1fIM6h53ala+eYccDkmUnRnLHcR3k327hOsUNqV6CxQ4T
JCgTN2S87Llhx7E/gTK/STht/Yvz6BQXpDBUG01iZ9sTTLL2XCD+LnJn1h+8
H6TDB/wHOCH5ntXatUm8fnbmxX5DHCCmodi0c4oEd20bbeHxjZDEwfNsDLvp
eMwjgTl2EP00eP3VNM6fPpLle+jYITG8CK7OkNA+WJ6/yMsG208/4N4xi+df
NYFzQHIDJFBN+oewfU5tZpU9wQoi3/bnJs3h+bg4Ksh3lQVePGXxM5vH++ns
NvqUUGbYeum7/rYF/D3svd9a8i0TxIu8Fu3HDvTZQVRNMcKWQd/5+EV8famQ
PjcpRniWfObdxSUSHuXtGtC1ZgAhK6kooWVc7xdnt+zMpoe4nX8tu7ENtxnM
NqzSweY/rfJPVkjwDBtpZdWig6fZLzcYreLvycepujWJtLDJ0e0b/xoJZZvk
Tb/Q0EKsrFb6V+z0Iy1OzKY0ILi01eMxrpPNXLFFB0L/opiSOc3Tf0nom6aS
UVfWkYBnvRBBQ4ET/Pra95TWUDQ8/dOG3UM38chfYhVR6e0rwmgp8IWu8JMp
ZQVF1So/1KGjwOUqYn2FfRlR7lJNuegp4P1qRwnDhiUUqTa+txlb8MLddxwc
i4jcWEEfzEABmh8M9AnUBfSoOfyzBiOuwxLpvKYS84gvzCKJjYkCwWMas/Qw
hyL0Dzt9wP6gUTR45Pws4qVwnrjHTAGdOTX9RI8ZFN7ZT1FloUB8Wo9TU8I0
4nlSMMzESoGYzxR6y6Yp9PBCYFEt9jhLkh6sTSLurRcC/TZQ4Aiz16C89CQK
HZAxUmKjAFOXZsrxpt+I6yXjTjp2Cixe29p4Q2kChVh2rlZgd/c+Nq4pH0Mc
UhmNXhvx9fVZRY4rjaLgCe84RQ4K+Bh5m+1tGkYbX+tfX8P+Pthv//3SL3Tf
YQeUclIgienm0fCVQcR+YJXrFhfuMx4/4ViP+4mCFpr75LnxfJW/F6pXH0Ab
ihNyFrFZn3SedqXrR4Huzr6FPBTYIXmuaqz6B2JF6vpOvBRg93SIp4j0onu0
wqIH+Cgg+pAxm7P9O2KpmZ6bwW4Nv6YX+rwLBfjX1eXgPqiUuHi3KeArYj4Z
89iepECxzC2zGwFfkD+braU0hQKP1TUNbsV/RkxNR+X/YB+zM/SjtLWiO6HE
hkwqfp5D6a08wp8Qg95Ilw0/BY5bMK3FMjcjP6IsTUqAAloCbLnatB8R/ddQ
91Hse4+Eq1Ul65FPjJlmqiDeH/mJJjk+dYjO+KCQ5SYKaMQLEXkbatBtYfY/
YpspUP8iOcqnshLR9PeWD2KrEH9rY9TKkXdibmiiEAXOn9dc/Gxegv6aB5hc
FqbARLN7d0trIfKSMNorsoUCD+2bi20D89D62G76PuyOyDoVyaBs5JFJ9/nZ
Vgo0jg1d4kvOQGt2XxIviOD7HetxYq1OQe77Xt3cvI0Cpm4fUj6ZJ6LVOY/j
37GTmBX2ioXGo1tvdCix2ylQbvo787NTDFp2Ex0+J4qfT9dTRKg2ArkdWXpD
FaNAe078Fr+ZELT09+O9Duwgkbz2qtUA5FIVbxgpTgGr4JmFYdfbaNHPUcpg
BwUM5orjCgJckPMJ1VVeCQos5QSJXzWxQ/OsmxpbseUyPmXa3jBDTh//PH2I
83yxza4vKqfPoLngalttKcr//v3C//X/A+e9lwQ=
       "]]}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
db5y0cFHo0TQN6BzfwrzJdXz76B+QfGAY0HgOiEuOOS8Yro6TBU/GajblCjO
BaF1fMfjovP4atrH5h6muSB3rUfySIEE/6S79rqZlVzI/Ti5+AjF5h8dl9U8
vJYLCeznrFsvuHxF/WvGQhu4IOzLdVcQXcaP8taqvrKVCwHrdarcD6zgN4Uf
tfxzNxeKt2vMl7y6iv+m/1lpswUXDrZfE0pIk+NfWKl0c4cdF0yTbFtahBX5
H3XWuk6d5oKaTJD1RlVlPsfcf4W8MxfOKFb9OaqjzN/k0vHGHH1pvajOPQNl
fsizYNVsdMP2IOaMuTJfUXpo7IwLF/ROB73K81Tm287E2H9x5cLO4iA13Wpl
flsBw3rsHBfuHgmet8FOhS/Udlx86XkuPHWsnhg+pcJXmirK34keOb+wJ9Jd
he+29pR0Enp+SHDejxAVPiemuuWEG+4/M/h0ToYKf8/ffqZD7lwYnhvSqv1b
hX/hfpsQfYELyotrKoZEefyHOWrp29E6UmJZESwef/xz9+In6MA1Ide+y/P4
V2021R69yIVv5iFbXhjz+Jletz3voIUP16yz38/jt0eNqJSht50Uk6FteHyl
hsjgVR5csPEO+XH+LI+/59P4BjP048CaAXlvHt99oeGHS+j0W2KNzVd4/Bj5
6MgMdPH9ncUBN3n8VwbfDN+j5ySEJGvd4/H/ByadWOk=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAwQWZDmJvFUBqOy+KqRCEP9az4O/c
gxVA7JNLsU7coT/rYSjRV5gVQGQtiEOsXrE//w9wstKsFUBMSpUYM4K9PxS+
t5NNwRVAChTvaRj3xz8obP90yNUVQLcOv8Zo6NI/PRpHVkPqFUBQJLrrzx7d
P1HIjje+/hVAeeccLJLl5T9mdtYYORMWQEEc2sb6AfA/eiQe+rMnFkAVAul7
9ab2P47SZdsuPBZAw1IMK4ES/z+jgK28qVAWQAPzZ4eCogRAty71nSRlFkBu
CPvpWGwKQMzcPH+feRZAURM3BesxEEDgioRgGo4WQDQRSJOExxJA9TjMQZWi
FkCjZBSa6TYUQAnnEyMQtxZAoac4A9+2E0AelVsEi8sWQGonbsLoCBBAMkOj
5QXgFkAg+t2c49r+P9tShjo=
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.340999999999999, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{5.35, 5.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.648546216147439*^9, 3.648546236017456*^9}, {
   3.648546628342675*^9, 3.648546646772232*^9}, 3.648546758172657*^9, 
   3.6488754154953947`*^9, {3.6488754495883617`*^9, 3.648875480733316*^9}, {
   3.6488780769525003`*^9, 3.648878104717155*^9}, 3.648878266089877*^9, 
   3.6488783639842157`*^9, {3.648878419842252*^9, 3.648878449054174*^9}, 
   3.6552030644536047`*^9}]
}, Open  ]],

Cell[TextData[{
 "General solution with sum of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " terms but not integration. Seems that even for 15, it is not symmetric but \
the Gaussian seems to be a good approximation even for 5 terms."
}], "Text",
 CellChangeTimes->{{3.648879045559696*^9, 3.64887905085756*^9}, {
  3.648880939553239*^9, 3.64888094617555*^9}, {3.648880993098936*^9, 
  3.648881050799398*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empiricalDist", "[", "Ni_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sums", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sums", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"ListConvolve", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "Ni"}], "}"}]}], "]"}], ",", "samples"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "Ni"}], "}"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", "uncorrelated", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"SmoothKernelDistribution", "[", 
       RowBox[{"sums", ",", "\"\<Oversmooth\>\"", ",", "\"\<Triweight\>\""}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6488790834493237`*^9, 3.64887908432922*^9}, {
  3.649060334162202*^9, 3.649060380047338*^9}, {3.649060458034567*^9, 
  3.6490604739903517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Ni", "=", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sums", "=", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"ListConvolve", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "Ni"}], "}"}]}], "]"}], ",", "samples"}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "Ni"}], "}"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", "uncorrelated", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"sums", "=", 
       RowBox[{"ListConvolve", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "Ni"}], "}"}]}], "]"}], ",", "samples"}], 
        "]"}]}], ";"}], " ", "*)"}], 
    RowBox[{"(*", "correlated", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"sums", ",", "\"\<Scott\>\"", ",", "\"\<PDF\>\""}], "]"}], ",", 
      RowBox[{"SmoothHistogram", "[", 
       RowBox[{"sums", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<LeastSquaresCrossValidation\>\"", ",", "\"\<Gaussian\>\""}], 
         "}"}], ",", "\"\<PDF\>\"", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"Ni", " ", 
             RowBox[{"Mean", "[", "samples", "]"}]}], ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Ni", " ", 
              RowBox[{"Variance", "[", "samples", "]"}]}], "]"}]}], "]"}], 
          ",", "L"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", 
          RowBox[{"Min", "[", "sums", "]"}], ",", 
          RowBox[{"Max", "[", "sums", "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.648543338958733*^9, 3.648543341210371*^9}, {
   3.648545726944162*^9, 3.6485457270392857`*^9}, {3.64854584455029*^9, 
   3.648545912453603*^9}, {3.648545974112673*^9, 3.648545975047895*^9}, {
   3.648546077271329*^9, 3.648546105606048*^9}, {3.648546193161442*^9, 
   3.6485462351748753`*^9}, {3.648546642243177*^9, 3.6485466460316887`*^9}, {
   3.648875444596229*^9, 3.64887548027859*^9}, {3.6488780079291573`*^9, 
   3.648878040719378*^9}, {3.648878073716797*^9, 3.648878103826251*^9}, {
   3.648878182824586*^9, 3.648878183659068*^9}, {3.648878255350985*^9, 
   3.648878298326771*^9}, {3.648878337712345*^9, 3.648878362558104*^9}, {
   3.64887841008952*^9, 3.648878446605722*^9}, {3.648879094633994*^9, 
   3.648879155664765*^9}, {3.648879305679476*^9, 3.648879471714542*^9}, {
   3.648879510687841*^9, 3.6488796731921997`*^9}, {3.648879736544519*^9, 
   3.648879800789775*^9}, {3.648879846424317*^9, 3.648879944234955*^9}, {
   3.648880554592813*^9, 3.648880567396318*^9}, {3.648880604264071*^9, 
   3.648880616505474*^9}, {3.648880955587654*^9, 3.648880982244471*^9}, 
   3.64888105399345*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.8, 0}, 
            NCache[{6.85, 
              Rational[1, 10]}, {6.85, 0.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{15.465686274510517`, 57.9387254901967}, {
           92.37659943915249, 96.59957957914887}}],
         StatusArea[#, 0.1]& ,
         TagBoxNote->"0.1"],
        StyleBox["0.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.85, 0}, 
            NCache[{6.9, 
              Rational[2, 5]}, {6.9, 0.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.4387254901967, 99.9117647058838}, {
           81.20765901916334, 96.59957957914887}}],
         StatusArea[#, 0.4]& ,
         TagBoxNote->"0.4"],
        StyleBox["0.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.9, 0}, 
            NCache[{6.95, 
              Rational[13, 10]}, {6.95, 1.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{99.4117647058838, 141.88480392156998`}, {
           47.700837759195906`, 96.59957957914887}}],
         StatusArea[#, 1.3]& ,
         TagBoxNote->"1.3"],
        StyleBox["1.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.95, 0}, 
            NCache[{7., 
              Rational[23, 10]}, {7., 2.3}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{141.38480392156998`, 183.85784313725617`}, {
           10.471036359232102`, 96.59957957914887}}],
         StatusArea[#, 2.3]& ,
         TagBoxNote->"2.3"],
        StyleBox["2.3`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, 
            NCache[{7.05, 
              Rational[41, 10]}, {7.05, 4.1}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{183.35784313725617`, 
           225.83088235294235`}, {-56.542606160702746`, 96.59957957914887}}],
         StatusArea[#, 4.1]& ,
         TagBoxNote->"4.1"],
        StyleBox["4.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.05, 0}, 
            NCache[{7.1, 
              Rational[9, 2]}, {7.1, 4.5}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{225.33088235294235`, 
           267.80392156862854`}, {-71.4345267206883, 96.59957957914887}}],
         StatusArea[#, 4.5]& ,
         TagBoxNote->"4.5"],
        StyleBox["4.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.1, 0}, 
            NCache[{7.15, 
              Rational[27, 5]}, {7.15, 5.4}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{267.30392156862854`, 
           309.7769607843147}, {-104.94134798065573`, 96.59957957914887}}],
         StatusArea[#, 5.4]& ,
         TagBoxNote->"5.4"],
        StyleBox["5.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.15, 0}, 
            NCache[{7.2, 
              Rational[19, 10]}, {7.2, 1.9}], "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{309.2769607843147, 351.7500000000009}, {
           25.362956919217623`, 96.59957957914887}}],
         StatusArea[#, 1.9]& ,
         TagBoxNote->"1.9"],
        StyleBox["1.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9, {}], 
        "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, \
{}, 
     {RGBColor[0, 1, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
       
       "]]}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k4VuvXB3BThp8onr0bPDuzI5lChkT3SqbIECKUlJmIQjmhSZKxUKiT
IVTIVDoyp2QoVBRSKRnSoaJMFfWu96/n+lzXs/d1T+t7ry21/6CNBxcHB4c6
JwfH//8qi3no2lqzQd0woGW50XVSqLZ2RSBaU3RKRWfvdbJ22/hUPDphid+q
Y2HXifTRoIJmtL194AvbkutkRU/EKt0dbBh6VF1ou/oG4Ui+NCtpwwaezJ99
16ZvkBcCrbe/2LJBOypjhUZjAdkhFZcoaMeG0iTuZQsDBaRTx9J3Lfrxa6Gm
oYUC0ub1Qmo/ulH059NlGwtJ/aP351+iN58Z8Hx7u5DcPPkjoHYnG/ZHe5zz
vFVEwn+sU4x1YEPeeifx6cpi4rTRMbgAnWAxfDTvTTHZGHa2rhV9uplZEcFZ
Qmbnh6z4drFBSqWn+IZ5CQmc/yc4Cj2uUHFgdLCEeMwJ10c6suGqmtsNWrCM
WM58sz7szIb3LudTAq3KiZKm1OVk9OrXijyH3MuJYIjVUDn6l2kld2xYOWmd
LgqZRFc/rub4nVtODKbdL/vvZkOshoTy/I9yovW9Z8hrDxsqF39YmRTeJhJT
1aG797Jhy6e2sCGmgjDT8sVh6H0/mrxNNCrIqrnUoUtooVIpi8ZtFUR0McD6
ObqM8tWfC60gvAIy64xd8f/q9rf9uyrIZ8m4t6r72JCv+7MhNeEuqbF2NuR2
Y8NHjt3UdrqSOJT9Ein0ZEPVDWP/6IBqMmDw791m9On2L4l+sdXE/WWg4xD6
KCfXft/r1eTQz5FsxosNR+wtfe4OVJNEw2eqSegVJu2rTlvXkKa+PItgbzbo
y0csCG2sJeqcluc2+7KBPmbf5ideT4Rtsjm6/dkw6fC2wkmikcwubRb5hh5n
qzRYqDeSgZZxaZEANkh/fTRqY9RISvW1jazQXa01TSl+jcRaofPcE3S5UKn+
1L1GcoFjQbTpIBvakzRM5B0eEKrUQe5uEBt6f/KIfsh5SFYvXWaWFsKGNSSj
7N7hZiIZe9i0As17vqZKILaZ/MXfZ/wcfZ97pMQ/u5lo8ORsFQxlwzK4nhjQ
0UwsFtT1j6Mjk9Uid65tIScn7Nd7HUE3zC08GGwhn9ozV2iH4fk77GMQ7NZG
qhJUhnrC2XBgx9agn3ntRHLDb8tZ9CFLSVblg3YS099RTUew4eCESHnC+3ay
S94/2Q69UJIie47pIPP3i7Z0oT32ZD+ovthBtKbXZndEskF1adutlQmd5I6T
zJ6mEzh/d40nK02fkWL5Vb3lUWxI0UiVehrSRTL3aJY9Q/dUVJzuP9tFzqfY
nPuKnshOODGd0UWC/8RvUj6D+5/xzM+uvovo9XJm30RTq25+a+LrJo+jx72z
otmw5OgiFXi1m4yO1P+Mj2ED0ewOVHjxgkjmeYh7x7Nh7S+pcI6gXrL+auNw
FNqqU/P432d6CVxaU5SD5s8YE+S+3EtcY15qv0avy0x9Sx72kpwDRjssE9jw
cO9rKZ8VfURaUy5qQyIb0l2eK55o6COyzcOfOM5jvZd2rZlk+on8mNvdjBTM
H6vz+na8b8kpQ6UbnlfYMDNeXvab+UAOeeePlVxjg6xFuOAZkVEyGHAqoqsA
6609o08n/j+Sl6Dgf6GcDQ7Hl/TWLJskC4dP3npyjw2J/tZnnnN9JzcP5Rrn
3GcDh+CBiE9ps6TbVmGDTSvm35M4Ic/InyRlYW9Q5FM2OJaFsNqDf5Mbda4C
xr1s6LvzIjr3HCdYGYtOxQywwZDJeuLbxQ3mHxM0vEbZ4L9v1jvOixeaff3b
JL+w4RyvVfoUpwD03F0s2TnDhrj0/Gn5YEHQXb3rq9wi7sePla+KRYVBw9Dt
eBAPA1l5d+ObtZdD0Y6u/emCDPRLGF3+ZCUCR44I5jixGNiwOHXV0lMUet1n
VNLFGLix/P1ckTkLvmxIT65Ep40vXDe0YgHPkk2zPWiX3N31/TYsUM8/UUez
GSh5JyHxx5EFiSOC21PQz8Ljw9Z6s8DQU9onkWHg90dRZuE0C8q9rHKjxBko
bvuedaWKBa3a33jz0Mb8LTIDtSwY4Lvo+xDd11X1es19Fiy92a/GJcHAocmH
g6nNLPAe87h/HN3DQbP3dbNA3Cf87d+SDBgID40HTrAgzrdgZZA0A3wJJUlu
DAVKjzPGktCs/9Jl9SQoaFeIrSpBU+ubX4lIUyD8ydd5Ai345XJWhTwFyV5K
WV4yDChOmwf3qlOQ7l76l4ssA/dbn4lfMKUgz+WupvlfDGgaVF97EkSBUX0+
ry/aWjnpkVEwBaNrLvXGoLfsyXhfG0qB/NvQsGY0x9y1nznHKCh01qnbIs+A
vJNSpskZCsp31RjqrGWAq+1i3p80CuptGm3l1jHw5YsQN7uGgoiQSREDtC9/
mbhwHQV66RLPXNDaLkZhv+spqH4bsT0drdC7fKznAQWV3rpGgooM1Cj2X/R8
TEFZ5B2tKfQrdevTHK8ouFaYv7pOmYGrCdt9Vk9TsK/jRe8rtO7mlrHbMxRI
TnJfmkVHbE1K2jZHQabmftH1KgyQNy7WAT8puHJfXDAXLWF2Lf4iBw2pPWkL
MaoMHJ6vd3VaSkM0V+w7OzXcH/Md+lVSNFy3kBUMRr8q7xMTkaGhJb1eKwXt
JPQrxkOWBn7V7wnP0UWhBykeeRpinXfrWaoz0NixtGelEg0JFSoZJhoMmFZb
hmVo0lDyp7XJE92oJ05Xa9HQaeY2eQYtmtKi3atNg/BgmkkT+nP3oWV8ujSc
F+KchQ0M5Aus/qG3Gcfr2W2jq8mAQGmpAacxDRXl/pGO6Ih9IUL/oV8u8BUe
RedY8Ds8NaFhRYoeZyX6wpKn7knbaEhvyC/V0GJgIOy5y8h2Gu79D17boN32
j7JuW9Dwamc/7yH0GyFvw2OWNIhNCLuUoaNPSK/gtqbhyqqjS5W1GeC0Gw8a
s6Gh1k1UZzva59rzuXRbGt6U3HLzQ+c/0Jg1sqOBMRqsLkBXbqacL+6kITPI
zOcvHQbedhjVCuyiob52ONUIHSDye+Eq+h3f8fvu6EcO5XdUHGmQzLyzMhct
/vnTSSMnGq49ZpolNjKgMq502XQ3DYN9MwN6aOVH1/LvoSU/ds45ojPNnmbI
7aHhKvdJhVT0Abnzm2bRb0ScDMrRD2rbxhxdcH6SGs6d6LuneSKr0el6I/H8
ugyEj/fsPbSXhl6z+nw59PpE8Vtt6BWOafUG6JPuLe/WuNKQErJtMhw9fKxo
oRbddVpa4DLa61TOCN8+GpYn/5KqRKeYBNy1QieWFNtOoff6LBfoQXfURh8Q
3sSAmE1RPLWfhqVP9p5RRA+L3Jy1Qpu90sk0RSd1TBjHoM99FKn0QKty74uo
Q7fO/Pf0FFom9nPGVzQvT9NYFlopJfwfcTcaoiRDxfrR7cU7bA+jH6pYacyh
rd8f4stAc+mv3U7pMTDasz2nBg3mnB5qaMFTzyRfo4879kdYoqcUJ8/Moeu9
7lzyQ586mvVsuTsNCyHxpTFoP49uDnn0piiP1ny0gtmpFbrov5M3Dz5A8/fl
ipihq7JX/nyHVhFT+2aPni+ZFF1EZ4fI3nNFa9W1KYrpYx4WhLl5oUOeXDPU
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
33fyf8VqARg=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{6.792, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{6.8, 7.2}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.648879157317513*^9, {3.648879448436569*^9, 3.648879472672914*^9}, {
   3.648879542803541*^9, 3.648879677175912*^9}, {3.648879737637491*^9, 
   3.648879801392828*^9}, 3.648879853818137*^9, {3.648879905316907*^9, 
   3.6488799456121597`*^9}, {3.648880559723393*^9, 3.648880568513427*^9}, 
   3.6488806205264177`*^9, 3.6488809872348347`*^9, 3.6488810547513323`*^9, 
   3.655203064635908*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete sum related to Gaussian", "Section",
 CellChangeTimes->{{3.648904610624669*^9, 3.648904618395722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"L_", ",", "n_", ",", "mean_", ",", " ", "var_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"Ni", " ", "mean"}], ",", " ", 
           SqrtBox[
            RowBox[{"Ni", " ", "var"}]]}], "]"}], ",", "L"}], "]"}], " ", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", 
           SqrtBox[
            RowBox[{
             RowBox[{"2", " ", "n"}], "+", "1"}]]}], "]"}], ",", "Ni"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Ni", ",", "1", ",", "150"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.648904622519704*^9, 3.648904780999566*^9}, {
   3.648904821866136*^9, 3.6489048662265453`*^9}, {3.648904901172058*^9, 
   3.6489049118344307`*^9}, {3.648964837980908*^9, 3.648965020388522*^9}, {
   3.648965055614585*^9, 3.648965084064497*^9}, {3.6489651230680113`*^9, 
   3.648965123745386*^9}, {3.6489651616382027`*^9, 3.6489651618404417`*^9}, {
   3.648965211097406*^9, 3.648965215971787*^9}, {3.6489652778825817`*^9, 
   3.648965277986446*^9}, {3.6489653648806543`*^9, 3.648965371435919*^9}, 
   3.6489654180580606`*^9, {3.648965573360731*^9, 3.648965586684016*^9}, 
   3.648965698619914*^9}],

Cell["\<\
Result is a mixture distribution with weight given by Poisson posterior \
predictive. As many components/modes as there are summands. That\
\[CloseCurlyQuote]s a nasty function.\
\>", "Text",
 CellChangeTimes->{{3.6489654240082684`*^9, 3.648965457855509*^9}, {
  3.648970120255995*^9, 3.648970171055758*^9}, {3.648970226168249*^9, 
  3.648970254095804*^9}, {3.648972428068222*^9, 3.648972438292481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PL", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", ",", 
       RowBox[{"P", "[", 
        RowBox[{"L", ",", "50", ",", "5", ",", "0.1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "200", ",", "300", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "PL", "]"}]}], "Input",
 CellChangeTimes->{{3.648904622519704*^9, 3.648904780999566*^9}, {
  3.648904821866136*^9, 3.6489048662265453`*^9}, {3.648904901172058*^9, 
  3.6489049118344307`*^9}, {3.648964837980908*^9, 3.648965020388522*^9}, {
  3.648965055614585*^9, 3.648965084064497*^9}, {3.6489651230680113`*^9, 
  3.648965123745386*^9}, {3.6489651616382027`*^9, 3.6489651618404417`*^9}, {
  3.648965211097406*^9, 3.648965215971787*^9}, {3.6489652778825817`*^9, 
  3.648965277986446*^9}, {3.6489653648806543`*^9, 3.648965371435919*^9}, {
  3.6489654180580606`*^9, 3.6489654664347277`*^9}, {3.648965761377721*^9, 
  3.648965761485484*^9}, {3.64896990720304*^9, 3.648969909472905*^9}, {
  3.648969991137916*^9, 3.648970035846408*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
xAFVw9TwTEv0xLjwgrvJacwk9CS4YBVeHm3egeMnyQVxrxbX6Zdw/KS5kL8o
2uBQDM5fWS4oLR/uSVyJ8ZDjgsKouo+dKhiPiVz4+nnF5UOfMb6KXDgQ90PT
/xbGV4n5PLFfxrqZGF8VLmibTT52LgznryoXTK+86o7xxnxR58I09dx2y+Xo
zebCvygTU9oAvblcuDpxVhpPi61/XKh9a60cNoetf1x4l3zSrnoeevpcCHmd
TjkboWfIhTvk5+ApduiZcKHjpPzcbl/0zJjxygj8F7QNPeCCPWSs9M5Hz5IL
LX802pWb0bPmgq/bKPnpMjh+tlyQGlMrXwps/ePCvJlKVzUj2PrHhZOy5bty
y3D8XLlQf0f42PU3xsOdC/JSWmbOJhhfTy74O5q5lIRjfL25kNURona0EuPr
w4XniRveTxrE+Ppy4SKUFa0wjsL6xwV95Zdda+korH9cWDx//5m4vCisf1zQ
/F0/JP4iCusfF0zWldboS0bj+o8LT/PrXLZpR2P940KMrlJ5qEM01j8uOAum
FF3YEo31jwulC8NU2kOisf5xYV2VypSeePQSuNB9/nlmcSJ6iVzoepuRvzoB
vV1c6DkVMHIgFL29XEg1OkK890fvABeqVPKpbU7oJXPhR5LhZwd99FKY8d2R
2/tUDr10LkyhHdfe7sH+ZnLBzuKPW8s17G8WF4pNv+u9PIDzN4fJ7+lljtk+
OH6nuSB2yTpHZgGO31kuLPn4znpwCONRwIWfSyOeeNzHeFzkgtcauxrJDIzH
ZS5sSLLufceLFHklXEi+d7ev2iIS139ciNvCGeBORa+KCyv3h+5L/8XWPy5k
/9p2qa+FrX9cuPD1kPuIm/i8rOXC7vlacisu4vO3jplPcSZLZuZi/j1g8r1E
b2dTFnoNXLgkq9WSlINeIxdyD40v9ShEr4kLC3PdlGddQ6+FC8p7E8ruPkOv
lcm/+3GXhvrRa+PCZn3B7Q1TsL/tXDg+y7kpZBn2t4sLa2/rvL9MYX97mHqh
H+0nyGXrHxPvN5kNX1rZ+sfM17KkNGoyxqOfCxl94KDmhvH4ybTHMP29+iGM
xwAXbHe+W5HegPEd4oLB5NNlJ8ZhvojxQOzh5eA19pgvEjx4ni67tGs75osk
DwwP7ywKv4r5Is0D7b6AnFVfMf9kedBt+lPrgmoM1j8eBL7oCP9hF4P1jwdT
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
7l8u8ugF0+DR4rNm9yj0QpnflwzMcP4VgPt/NKTfyLpV8T4A1380bLyiJdXW
FID7fzS4nOcdfV0TgPt/TL4ZUknNRQG4/qOhIbP3Uf8x9OKY+qPiGu25C70E
GtQrNR0WBaK3jfm8TSuri9ejl0jDpJrZiZK26O2k4Y30sVxPffR20XD2eFd9
6zT09jD5kDs166oUentpSJ5OvZ/zncb9Pxr2Hh0UW95G4/qPhumzwnVNH9K4
/8fEo/DauPmVNK7/aEjSbhplco7G/T9mfAI/vg49il4KM3+K9vqK70UvjQbH
rvyJ76LRS2fm91PvrxoB6GUw/sWBTY+2opdJQ23T0LxXG9A7TkOFZHyknQd6
WTQEXJWcLOOCXjbT37a8PTIr0cth6m3/wx2LbNE7xfiGD41Ja/RO0yDh8+l6
hhV6eTTcN6y5csQSvbM0+Og/qDC2RC+fhj9Eo/w6S/QKmHx7eH1FiyV655l6
rSnVHM96F2nQN1zQorMcvSIa7LV3nL+0HL3LNFxV33m+Yzl6xTQI4uXrMpej
V0JD/ND4WVdYr4yGUC3pYhm2feXM5x+ky6MAvUoa2mPPWn4zQ6+Khn2hTYed
jNG7RkPaTZ3w7Xro3WDq4ymPA/HzaPP/A8Cyryg=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{198.43750000000003`, 0.004244564954337256},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{200., 300.}, {0.004436025633858699, 0.008265239224287556}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.648965220914652*^9, 3.648965286013483*^9, 3.6489653769883327`*^9, {
   3.648965444921651*^9, 3.64896547002529*^9}, {3.648965579758823*^9, 
   3.648965590240685*^9}, 3.648965701524312*^9, 3.648965763765128*^9, 
   3.6489699108554*^9, {3.648969993675144*^9, 3.648970007150832*^9}, 
   3.6489700445202837`*^9}]
}, Open  ]],

Cell["\<\
Product of two Gaussians is Gaussian times a normalization that is also a \
Gaussian, see for example \
http://www.johndcook.com/blog/2012/10/29/product-of-normal-pdfs/
But for us it\[CloseCurlyQuote]s slightly more complicated: the two Gaussians \
are not for the same variable. I give up after staring at these equations for \
an hour.\
\>", "Text",
 CellChangeTimes->{{3.64896641448167*^9, 3.6489664394507008`*^9}, {
  3.6489674662919207`*^9, 3.648967507491961*^9}, {3.6489724620608*^9, 
  3.648972473235958*^9}, {3.649070358486066*^9, 3.649070369718237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "n", "+", "Ni"}], ")"}], "2"], 
      RowBox[{"2", "+", 
       RowBox[{"4", " ", "n"}]}]]}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"L", "-", 
        RowBox[{"mean", " ", "Ni"}]}], ")"}], "2"], 
     RowBox[{"2", " ", "Ni", " ", "var"}]]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"2", " ", "Ni", " ", "var", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "n", "+", "Ni"}], ")"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "n"}]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"L", "-", 
          RowBox[{"mean", " ", "Ni"}]}], ")"}], "2"]}]}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"4", " ", "n"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"2", " ", "Ni", " ", "var"}], ")"}]}], ")"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.648966465859818*^9, 3.648966473989644*^9}, {
  3.6489675108703423`*^9, 3.648967548408657*^9}, {3.6489690021345463`*^9, 
  3.648969073095941*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"4", " ", "n"}]}], ")"}], " ", "Ni", " ", "var"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["L", "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["L", "2"], " ", "n"}], "-", 
     RowBox[{"4", " ", "L", " ", "mean", " ", "Ni"}], "-", 
     RowBox[{"8", " ", "L", " ", "mean", " ", "n", " ", "Ni"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["mean", "2"], " ", 
      SuperscriptBox["Ni", "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["mean", "2"], " ", "n", " ", 
      SuperscriptBox["Ni", "2"]}], "+", 
     RowBox[{"2", " ", "Ni", " ", "var"}], "-", 
     RowBox[{"4", " ", "n", " ", "Ni", " ", "var"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["n", "2"], " ", "Ni", " ", "var"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["Ni", "2"], " ", "var"}], "-", 
     RowBox[{"4", " ", "n", " ", 
      SuperscriptBox["Ni", "2"], " ", "var"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["Ni", "3"], " ", "var"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.648967549191279*^9, 3.648969074570125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "2"], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "1"], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["\[Mu]", "2"]}], ")"}], "2"]}]}], "]"}], 
   RowBox[{"2", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "1"], "2"], 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "2"], "2"]}]]}]], "Input",
 CellChangeTimes->{{3.648967674541459*^9, 3.648967729974799*^9}, {
  3.648967935365376*^9, 3.648967970817257*^9}, {3.648968096481512*^9, 
  3.648968143434875*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     SubsuperscriptBox["\[Sigma]", "1", "2"]}], "-", 
    RowBox[{"2", " ", "x", " ", 
     SubscriptBox["\[Mu]", "2"], " ", 
     SubsuperscriptBox["\[Sigma]", "1", "2"]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Mu]", "2", "2"], " ", 
     SubsuperscriptBox["\[Sigma]", "1", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     SubsuperscriptBox["\[Sigma]", "2", "2"]}], "-", 
    RowBox[{"2", " ", "x", " ", 
     SubscriptBox["\[Mu]", "1"], " ", 
     SubsuperscriptBox["\[Sigma]", "2", "2"]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Mu]", "1", "2"], " ", 
     SubsuperscriptBox["\[Sigma]", "2", "2"]}]}], 
   RowBox[{"2", " ", 
    SubsuperscriptBox["\[Sigma]", "1", "2"], " ", 
    SubsuperscriptBox["\[Sigma]", "2", "2"]}]]}]], "Output",
 CellChangeTimes->{3.648967730959424*^9, 3.648967974108446*^9, 
  3.648968145066786*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[Sigma]", "1", "2"]}], "-", 
  RowBox[{"2", " ", "x", " ", 
   SubscriptBox["\[Mu]", "2"], " ", 
   SubsuperscriptBox["\[Sigma]", "1", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[Sigma]", "2", "2"]}], "-", 
  RowBox[{"2", " ", "x", " ", 
   SubscriptBox["\[Mu]", "1"], " ", 
   SubsuperscriptBox["\[Sigma]", "2", "2"]}]}]], "Input",
 CellChangeTimes->{3.648968304304873*^9}],

Cell["\<\
Exchange sum and integral and first integrate over triple product of Gaussians\
\>", "Text",
 CellChangeTimes->{{3.648970764072895*^9, 3.648970782025655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "L"}], "]"}], 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"Ni", " ", "mean"}], ",", " ", 
        SqrtBox[
         RowBox[{"Ni", " ", "var"}]]}], "]"}], ",", "L"}], "]"}], " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "n"}], "+", "1"}]]}], "]"}], ",", "Ni"}], "]"}]}],
    ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ni", ">", "0"}], "&&", " ", 
      RowBox[{"var", ">", "0"}], " ", "&&", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6489707858066587`*^9, 3.648970890388166*^9}, {
   3.648970958515956*^9, 3.6489710348272142`*^9}, {3.6489713127741957`*^9, 
   3.648971438144911*^9}, 3.6489714699508038`*^9, {3.648971504391778*^9, 
   3.6489715109248877`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["mean", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", 
         SuperscriptBox["Ni", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["Ni", "3"], " ", "var"}], "-", 
        RowBox[{"2", " ", "mean", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", "Ni", " ", "\[Mu]"}], "+", 
        SuperscriptBox["\[Mu]", "2"], "+", 
        RowBox[{"2", " ", "n", " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"], "-", 
        RowBox[{"2", " ", "n", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Ni", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["Ni", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "n"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ni", " ", "var"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"var", " ", "\[Mu]"}], "+", 
          RowBox[{"mean", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"var", " ", "\[Mu]"}], "+", 
         RowBox[{"mean", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
       RowBox[{"Erf", "[", 
        FractionBox[
         SqrtBox[
          FractionBox[
           RowBox[{"Ni", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"var", " ", "\[Mu]"}], "+", 
               RowBox[{"mean", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]}], 
           RowBox[{"var", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Ni", " ", "var"}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ni", " ", "var"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"var", " ", "\[Mu]"}], "+", 
        RowBox[{"mean", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.6489714811542673`*^9, 3.6489715236675243`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tripleProd", "[", 
   RowBox[{
   "\[Mu]_", ",", "\[Sigma]_", ",", "Ni_", ",", "n_", ",", "mean_", ",", 
    "var_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["mean", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "n"}]}], ")"}], " ", 
          SuperscriptBox["Ni", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["Ni", "3"], " ", "var"}], "-", 
         RowBox[{"2", " ", "mean", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "n"}]}], ")"}], " ", "Ni", " ", "\[Mu]"}], "+", 
         
         SuperscriptBox["\[Mu]", "2"], "+", 
         RowBox[{"2", " ", "n", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"], "-", 
         RowBox[{"2", " ", "n", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Ni", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["Ni", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Ni", " ", "var"}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"var", " ", "\[Mu]"}], "+", 
           RowBox[{"mean", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"var", " ", "\[Mu]"}], "+", 
          RowBox[{"mean", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
        RowBox[{"Erf", "[", 
         FractionBox[
          SqrtBox[
           FractionBox[
            RowBox[{"Ni", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"var", " ", "\[Mu]"}], "+", 
                RowBox[{"mean", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]}], 
            RowBox[{"var", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Ni", " ", "var"}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"4", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ni", " ", "var"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " ", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"var", " ", "\[Mu]"}], "+", 
         RowBox[{"mean", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"]]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6489715768206863`*^9, 3.648971593870615*^9}}],

Cell[TextData[{
 "Approximate sum by integral. No analytic result but numerical integration \
gives same number. Safe to cut off some region away from the mode. Very nice! \
If integration over [0,\[Infinity]] is too slow, should be enough to sum over \
+- 3 ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"2", "n"}], "+", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (rounded to integers) as an estimate. For large n, the function is \
symmetric, so the lower tail is sufficient assuming there enough zero values \
at the density doesn\[CloseCurlyQuote]t reach near the origin."
}], "Text",
 CellChangeTimes->{{3.648972166651372*^9, 3.648972170387437*^9}, {
  3.648972394140855*^9, 3.648972416836071*^9}, {3.6489726038923063`*^9, 
  3.648972626980836*^9}, {3.648992986833768*^9, 3.6489930438180304`*^9}, {
  3.648993082545874*^9, 3.648993120912869*^9}, {3.6489932092089643`*^9, 
  3.6489932566972103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "=", "22"}], ",", 
     RowBox[{"\[Sigma]", "=", "1.5"}], ",", 
     RowBox[{"n", "=", "15"}], ",", 
     RowBox[{"mean", "=", 
      RowBox[{"Mean", "[", "samples", "]"}]}], ",", 
     RowBox[{"var", "=", 
      RowBox[{"Variance", "[", "samples", "]"}]}], ",", "width"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"width", "=", 
     SqrtBox[
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PDgivenN", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ni", ",", 
         RowBox[{"tripleProd", "[", 
          RowBox[{
          "\[Mu]", ",", "\[Sigma]", ",", "Ni", ",", "n", ",", "mean", ",", 
           "var"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Ni", ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{"Max", "[", 
           RowBox[{"0", ",", 
            RowBox[{"n", "-", 
             RowBox[{"3.", "width"}]}]}], "]"}], "\[RightFloor]"}], ",", 
         RowBox[{"\[LeftFloor]", 
          RowBox[{"n", "+", 
           RowBox[{"3", "width"}]}], "\[RightFloor]"}]}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"tripleProd", "[", 
       RowBox[{
       "\[Mu]", ",", "\[Sigma]", ",", "Ni", ",", "n", ",", "mean", ",", 
        "var"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ni", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Total", "[", "PDgivenN", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"PDgivenN", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["N", "i"], ",", "\"\<\>\""}], "}"}]}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PDgivenN", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzVsogwEABeDt9+BBWVZKkUvIXma8yIOm/bmX5TphL5brNllMiBDKJddF
LdMWJaaM0NKwxpK5bPGgZjZSmmlrD1qktPznfzh9L6dzUiRdVS0Eg8FIpAJf
EoxSN88vUJnvJmH6z/Y8JI26RTjMcmmgjzzWQ/dSvhde3whpVz97IzyUjvB5
FHy5HWHDjDMuB05wK3OhwlJDGxDqimChSFsMt3zqNQ/9E9qELW9GPeR0DRmg
73vDAtN2TRcwnGMmvZS/SkMBNLGuSmDRa10jTF5gt0L+wWUHnJ0f64Esjb0X
lomXB+CJhBiBccEpFQw9HNIqpkfV8F06rIV/3eQuvRfr3IMN/OYjWDH4aKP/
as/tcIdcuYfWbqYTCkqYT3Cm/vSL7ke7QtBjkck/KJ28fdq8gFUBU58JJXQE
3/ugKyemH9rCOgmR5RdUcdfboCA+IIPN2eUKKOSImiIpndXidrgxlymHSeOl
nfAfQlP9vg==
  "]],

Cell[BoxData["0.04793779700495086`"], "Output",
 CellChangeTimes->{
  3.64897171179056*^9, 3.648971746224588*^9, 3.6489718004965897`*^9, {
   3.648971831359429*^9, 3.648971838951836*^9}, {3.6489718950898733`*^9, 
   3.64897191006221*^9}, {3.6489720494719067`*^9, 3.648972113241884*^9}, 
   3.648972595042774*^9, {3.648972831086734*^9, 3.648972899079406*^9}, 
   3.6489729494998407`*^9, {3.648972992727179*^9, 3.648973072148044*^9}, {
   3.6489731118223753`*^9, 3.648973121987412*^9}, 3.648973255135418*^9, {
   3.648973366836898*^9, 3.648973380692758*^9}, {3.648974122297683*^9, 
   3.6489741282658587`*^9}, {3.648974160902212*^9, 3.648974196635853*^9}, {
   3.6489743426490107`*^9, 3.6489743584168863`*^9}, {3.648991776206574*^9, 
   3.648991782645235*^9}, {3.6489918189746943`*^9, 3.648991909602292*^9}, 
   3.64899195539412*^9, 3.6489919889634247`*^9, {3.6489920693183603`*^9, 
   3.648992079747438*^9}, {3.648992167568796*^9, 3.648992177096446*^9}, {
   3.6489922088070583`*^9, 3.64899224936959*^9}, 3.648992408260004*^9, 
   3.6489924556206512`*^9, {3.648992488807745*^9, 3.648992500627296*^9}, {
   3.648992622760203*^9, 3.6489926410617323`*^9}, {3.6489926781021147`*^9, 
   3.648992716092936*^9}, {3.648992798072846*^9, 3.648992838841153*^9}, {
   3.648992880949995*^9, 3.648992903309572*^9}, {3.648992961771618*^9, 
   3.6489929690571213`*^9}, 3.648993192876401*^9, 3.6489941520781717`*^9, {
   3.648994191494379*^9, 3.6489942084953003`*^9}, 3.64899424928153*^9, {
   3.64904938988456*^9, 3.6490494058319902`*^9}, {3.649049446553425*^9, 
   3.6490494754080687`*^9}, {3.6490596624182863`*^9, 3.6490596910049543`*^9}}],

Cell[BoxData["0.04793779696723621`"], "Output",
 CellChangeTimes->{
  3.64897171179056*^9, 3.648971746224588*^9, 3.6489718004965897`*^9, {
   3.648971831359429*^9, 3.648971838951836*^9}, {3.6489718950898733`*^9, 
   3.64897191006221*^9}, {3.6489720494719067`*^9, 3.648972113241884*^9}, 
   3.648972595042774*^9, {3.648972831086734*^9, 3.648972899079406*^9}, 
   3.6489729494998407`*^9, {3.648972992727179*^9, 3.648973072148044*^9}, {
   3.6489731118223753`*^9, 3.648973121987412*^9}, 3.648973255135418*^9, {
   3.648973366836898*^9, 3.648973380692758*^9}, {3.648974122297683*^9, 
   3.6489741282658587`*^9}, {3.648974160902212*^9, 3.648974196635853*^9}, {
   3.6489743426490107`*^9, 3.6489743584168863`*^9}, {3.648991776206574*^9, 
   3.648991782645235*^9}, {3.6489918189746943`*^9, 3.648991909602292*^9}, 
   3.64899195539412*^9, 3.6489919889634247`*^9, {3.6489920693183603`*^9, 
   3.648992079747438*^9}, {3.648992167568796*^9, 3.648992177096446*^9}, {
   3.6489922088070583`*^9, 3.64899224936959*^9}, 3.648992408260004*^9, 
   3.6489924556206512`*^9, {3.648992488807745*^9, 3.648992500627296*^9}, {
   3.648992622760203*^9, 3.6489926410617323`*^9}, {3.6489926781021147`*^9, 
   3.648992716092936*^9}, {3.648992798072846*^9, 3.648992838841153*^9}, {
   3.648992880949995*^9, 3.648992903309572*^9}, {3.648992961771618*^9, 
   3.6489929690571213`*^9}, 3.648993192876401*^9, 3.6489941520781717`*^9, {
   3.648994191494379*^9, 3.6489942084953003`*^9}, 3.64899424928153*^9, {
   3.64904938988456*^9, 3.6490494058319902`*^9}, {3.649049446553425*^9, 
   3.6490494754080687`*^9}, {3.6490596624182863`*^9, 3.6490596910084352`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQO339ZL8LS2m0J4H+x1xDj6zCSum0GlHSrfinCf
f8hoAeFyODx4wfByzl1RSwhfwGF+Vp/ABmVRKwhfxOFshskBeT0GawhfwmHh
grjGZYsuQ/kyDi+b9hiYvJpkA+ErOGh0M3IofrexhfCVHN4tSIrcs+wilK/i
UNrTocamGmgH4as5yFY/ubdw8i4oX8NBUc0vqrFUwB7C13IQF0z1KvIPgPJ1
HH62PfTpf1oJ5es5XKiKzz1UOwHKN3D4YDV7waZ7ML6hw3Ornvz/B6uhfCOH
NWwTP+xKDoLyjR2cTx0+N22pMJRv4uAgOUPb7dMBqHtMHW6cnDnn+8JwKN/M
YffsuPeaa29B/WPu0DKPTWppugeUb+HwUvWdlIPcImh4WDrEhgdZX739FBpe
Vg7d0w7MbSwRhfKtHZ5da505S90QGt42DsXb1535H28GjQ9bh2bhyDmpV9Wh
8WXn0HA6pSjqEIs5hG/v8D4ku6d39llTAIZIhow=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox[
      SubscriptBox["N", "i"], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 31.}, {0, 0.016474524548182268`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.64897171179056*^9, 3.648971746224588*^9, 3.6489718004965897`*^9, {
   3.648971831359429*^9, 3.648971838951836*^9}, {3.6489718950898733`*^9, 
   3.64897191006221*^9}, {3.6489720494719067`*^9, 3.648972113241884*^9}, 
   3.648972595042774*^9, {3.648972831086734*^9, 3.648972899079406*^9}, 
   3.6489729494998407`*^9, {3.648972992727179*^9, 3.648973072148044*^9}, {
   3.6489731118223753`*^9, 3.648973121987412*^9}, 3.648973255135418*^9, {
   3.648973366836898*^9, 3.648973380692758*^9}, {3.648974122297683*^9, 
   3.6489741282658587`*^9}, {3.648974160902212*^9, 3.648974196635853*^9}, {
   3.6489743426490107`*^9, 3.6489743584168863`*^9}, {3.648991776206574*^9, 
   3.648991782645235*^9}, {3.6489918189746943`*^9, 3.648991909602292*^9}, 
   3.64899195539412*^9, 3.6489919889634247`*^9, {3.6489920693183603`*^9, 
   3.648992079747438*^9}, {3.648992167568796*^9, 3.648992177096446*^9}, {
   3.6489922088070583`*^9, 3.64899224936959*^9}, 3.648992408260004*^9, 
   3.6489924556206512`*^9, {3.648992488807745*^9, 3.648992500627296*^9}, {
   3.648992622760203*^9, 3.6489926410617323`*^9}, {3.6489926781021147`*^9, 
   3.648992716092936*^9}, {3.648992798072846*^9, 3.648992838841153*^9}, {
   3.648992880949995*^9, 3.648992903309572*^9}, {3.648992961771618*^9, 
   3.6489929690571213`*^9}, 3.648993192876401*^9, 3.6489941520781717`*^9, {
   3.648994191494379*^9, 3.6489942084953003`*^9}, 3.64899424928153*^9, {
   3.64904938988456*^9, 3.6490494058319902`*^9}, {3.649049446553425*^9, 
   3.6490494754080687`*^9}, {3.6490596624182863`*^9, 3.64905969112703*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "7.857833302972095`*^-51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.6181201453943892`*^-44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6.568833422690383`*^-39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1.0527939804349842`*^-33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6.670420155175969`*^-29"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.64897171179056*^9, 3.648971746224588*^9, 3.6489718004965897`*^9, {
   3.648971831359429*^9, 3.648971838951836*^9}, {3.6489718950898733`*^9, 
   3.64897191006221*^9}, {3.6489720494719067`*^9, 3.648972113241884*^9}, 
   3.648972595042774*^9, {3.648972831086734*^9, 3.648972899079406*^9}, 
   3.6489729494998407`*^9, {3.648972992727179*^9, 3.648973072148044*^9}, {
   3.6489731118223753`*^9, 3.648973121987412*^9}, 3.648973255135418*^9, {
   3.648973366836898*^9, 3.648973380692758*^9}, {3.648974122297683*^9, 
   3.6489741282658587`*^9}, {3.648974160902212*^9, 3.648974196635853*^9}, {
   3.6489743426490107`*^9, 3.6489743584168863`*^9}, {3.648991776206574*^9, 
   3.648991782645235*^9}, {3.6489918189746943`*^9, 3.648991909602292*^9}, 
   3.64899195539412*^9, 3.6489919889634247`*^9, {3.6489920693183603`*^9, 
   3.648992079747438*^9}, {3.648992167568796*^9, 3.648992177096446*^9}, {
   3.6489922088070583`*^9, 3.64899224936959*^9}, 3.648992408260004*^9, 
   3.6489924556206512`*^9, {3.648992488807745*^9, 3.648992500627296*^9}, {
   3.648992622760203*^9, 3.6489926410617323`*^9}, {3.6489926781021147`*^9, 
   3.648992716092936*^9}, {3.648992798072846*^9, 3.648992838841153*^9}, {
   3.648992880949995*^9, 3.648992903309572*^9}, {3.648992961771618*^9, 
   3.6489929690571213`*^9}, 3.648993192876401*^9, 3.6489941520781717`*^9, {
   3.648994191494379*^9, 3.6489942084953003`*^9}, 3.64899424928153*^9, {
   3.64904938988456*^9, 3.6490494058319902`*^9}, {3.649049446553425*^9, 
   3.6490494754080687`*^9}, {3.6490596624182863`*^9, 3.649059691130906*^9}}]
}, Open  ]],

Cell[TextData[{
 "How does the width of PDgivenN depend on the parameters? It would help us \
find a suitable cut off. \nThe mode is still near n so we could grow outward \
from there until remaining terms are too small.\nIncreasing var, n, or \
\[Sigma] increases the width. Looking at the denominator of the exponent of \
tripleProd, it is a Gaussian with variance ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["N", "i"], " ", "var"}], " ", "+", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Of course the numerator is not that of a Gaussian but it makes sense that \
the variance is proportional to n and depends on the relative size of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "i"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "var and \[Sigma]. As usual, relative uncertainty goes down like ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SqrtBox["n"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.64897266738982*^9, 3.6489727674199657`*^9}, {
  3.648972910444106*^9, 3.648972913108439*^9}, {3.6489729536618567`*^9, 
  3.648972954852542*^9}, {3.648973036909258*^9, 3.6489730404537563`*^9}, {
  3.6489733219258547`*^9, 3.6489733457665052`*^9}, {3.6489742812235317`*^9, 
  3.648974319520422*^9}, {3.6489743721754827`*^9, 3.648974489984828*^9}, {
  3.6489745431044683`*^9, 3.648974635056809*^9}, {3.648984377583706*^9, 
  3.648984382727647*^9}, {3.6489844349594097`*^9, 3.648984453881653*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.648974194029402*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw103ks13Ecx/FfScNSxDr4sUK5c4f4+b3cfn6u+CMJ5ZqNJKIU8nPkt9yM
WlKz+uU3TJKUIkdRjtocaxJb/JI5ytg6HKNj37fP9tlnjz33+eOzfd4HQ2N9
I7ayWCz82//PzbWiFCUddE9Gk9Eit96JnzFROWVJGQHsBFmhY6ANQxkM3W3Z
OSLXZ8tYAaKPbNEecQmHsTI+FLRIlC8q2jHeh7SseI3mzkgyG2lhaqHz7mLy
AZSXddZZ5Y2QNdDUoT8XfWiDrAWpsJu6C89VuYwPo9tzIkRNYkbWQfnUZHeO
wJWsBwWheKnj3QmyAXp8gvPlbSPIR1Bh2zNdJhdHNkbw7FqSYD2JbILCjZSh
7CUB2RTsuBZtpfhrZDNEmbM1xdnXyebYXfw4w6Qtj2yBzLZqXkpXAfkoVFj8
VJnYQrIlVqZimtI7NrsVVKo45sFfNu9bY853sYyjnkM+hjWFudsZ3dlkG+zo
bzVKM8wk2yLGSeOTMzeNzMEVVsr0a/Hme+zQPji80D4eT+bClR+k6bf1LBlw
L21IHjQNZywArJUrrEZ9Aqnbw2vY27nP04+6PcoSVBsV7/CoOyBKO7wiORfU
HRDjuOohGTSn7oiVaNGuXqEudUc8OTmwLs5Sp+6E0kcPi/17Fak7oUpfkilt
vY26M+ZO+Wd/PfeL+Q8CZ7Q1XOjey5uh/+GChJAIi5rqUeoukJc1MWy53Efd
FdpGz1q/176g7oq341cNhjk11N3wIPHpmLLVLepuWKz/yQ2sE1LnQa82YFmn
OZE6D0El2we+XQqj7g7xm/6FMfnj1N2xJWIm+ZUZhzofi4VnYvTP61DnwydP
mPpjXYm6B4q8OY3Wq3+Y+RF4oPS9x/551izNkyduvFz7fV9tmLoncmdlpSpL
W6l7IatZpCWeElH3gmTeyDjxcz51b9gtn57skiRQ90ZzOjfSoiiQ8xfXaRxn

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 63.}, {0, 0.015348497699392328`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.648974182976926*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " not clever enough to simplify."
}], "Text",
 CellChangeTimes->{{3.649050325722932*^9, 3.6490503404356003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"tripleProd", "[", 
     RowBox[{
     "\[Mu]", ",", "\[Sigma]", ",", "Ni", ",", "n", ",", "mean", ",", "var"}],
      "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]", ">", "0"}], ",", 
       RowBox[{"\[Mu]", "\[Element]", "Reals"}], ",", 
       RowBox[{"Ni", ">", "0"}], ",", 
       RowBox[{"n", ">", "0"}], ",", 
       RowBox[{"mean", ">", "0"}], ",", 
       RowBox[{"var", ">", "0"}]}], "}"}]}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"mean", "\[Rule]", "\"\<E\>\""}], ",", 
    RowBox[{"var", "\[Rule]", "\"\<V\>\""}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.64898546396528*^9, 3.648985710784075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["\<\"E\"\>", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", 
         SuperscriptBox["Ni", "2"]}], "+", 
        RowBox[{"\<\"V\"\>", " ", 
         SuperscriptBox["Ni", "3"]}], "-", 
        RowBox[{"2", " ", "\<\"E\"\>", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", "Ni", " ", "\[Mu]"}], "+", 
        SuperscriptBox["\[Mu]", "2"], "+", 
        RowBox[{"2", " ", "n", " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"], "-", 
        RowBox[{"2", " ", "n", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Ni", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\<\"V\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["Ni", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\<\"V\"\>", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "n"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\<\"V\"\>", " ", "Ni"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"\<\"V\"\>", " ", "\[Mu]"}], "+", 
        RowBox[{"\<\"E\"\>", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\<\"V\"\>", " ", "\[Mu]"}], "+", 
         RowBox[{"\<\"E\"\>", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"\<\"V\"\>", " ", "\[Mu]"}], "+", 
           RowBox[{"\<\"E\"\>", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}], "]"}], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]", " ", 
          SqrtBox[
           FractionBox[
            RowBox[{"\<\"V\"\>", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\<\"V\"\>", " ", "Ni"}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "Ni"]]}]], 
        "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\<\"V\"\>", " ", "Ni"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"\<\"V\"\>", " ", "\[Mu]"}], "+", 
      RowBox[{"\<\"E\"\>", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.648985473289454*^9, 3.6489855024770813`*^9}, 
   3.6489855443144293`*^9, 3.6489855912984047`*^9, {3.648985640769051*^9, 
   3.648985673824007*^9}, 3.6489857133139133`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"tripleProd", "[", 
    RowBox[{
    "\[Mu]", ",", "\[Sigma]", ",", "Ni", ",", "n", ",", "mean", ",", "var"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Ni", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649050354098063*^9, 3.64905037262013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "=", "5"}], ",", 
      RowBox[{"\[Sigma]", "=", "0.5"}], ",", 
      RowBox[{"n", "=", "15"}]}], "}"}], ",", 
    RowBox[{"{", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], "2"], 
          RowBox[{"2", "+", 
           RowBox[{"4", " ", "n"}]}]]}], "-", 
        FractionBox[
         SuperscriptBox["\[Mu]", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}], " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.649050504227339*^9, 3.649050534594316*^9}, 
   3.6490506555788393`*^9, {3.649051181528171*^9, 3.649051182865117*^9}}],

Cell[BoxData[
 RowBox[{"{", "2.3360613643784392`*^-25", "}"}]], "Output",
 CellChangeTimes->{
  3.649050656599843*^9, {3.649051167008091*^9, 3.649051183536372*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "=", "5"}], "}"}], ",", " ", "\[Mu]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6490511415185537`*^9, 3.649051151092944*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6490511516834793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["\"\<E\>\"", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", 
       SuperscriptBox["Ni", "2"]}], "+", 
      RowBox[{"\"\<V\>\"", " ", 
       SuperscriptBox["Ni", "3"]}], "-", 
      RowBox[{"2", " ", "\"\<E\>\"", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", "Ni", " ", "\[Mu]"}], "+", 
      SuperscriptBox["\[Mu]", "2"], "+", 
      RowBox[{"2", " ", "n", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"], "-", 
      RowBox[{"2", " ", "n", " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "Ni", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\"\<V\>\"", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["Ni", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\"\<V\>\"", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\"\<V\>\"", " ", "Ni"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], "]"}]], "Input",
 CellChangeTimes->{{3.649008036144784*^9, 3.649008071128463*^9}, {
  3.649008111375432*^9, 3.649008111929904*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["\<\"E\"\>", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", 
      SuperscriptBox["Ni", "2"]}], "+", 
     RowBox[{"\<\"V\"\>", " ", "Ni", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "n", "+", "Ni"}], ")"}], "2"]}], "-", 
     RowBox[{"2", " ", "\<\"E\"\>", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}], " ", "Ni", " ", "\[Mu]"}], "+", 
     SuperscriptBox["\[Mu]", "2"], "+", 
     RowBox[{"2", " ", "n", " ", 
      SuperscriptBox["\[Mu]", "2"]}], "+", 
     SuperscriptBox["\[Sigma]", "2"], "-", 
     RowBox[{"2", " ", "n", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox["\[Sigma]", "2"]}], "+", 
     RowBox[{"2", " ", "Ni", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], "-", 
     RowBox[{"2", " ", "n", " ", "Ni", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["Ni", "2"], " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\<\"V\"\>", " ", "Ni"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{{3.649008050234009*^9, 3.649008066789626*^9}, {
  3.6490081104069023`*^9, 3.6490081126856318`*^9}}]
}, Open  ]],

Cell["\<\
We don\[CloseCurlyQuote]t need the triple product: just a product of two \
Gaussians, because the integral is the well known convolution of two \
Gaussians for the same variable.\
\>", "Text",
 CellChangeTimes->{{3.6490104177306213`*^9, 3.6490104232432404`*^9}, {
  3.649070423542062*^9, 3.649070460280929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         RowBox[{"Ni", " ", "mean"}], ",", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"Ni", " ", "var"}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], "]"}], ",", "\[Mu]"}], "]"}],
      " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         RowBox[{"n", "-", "1"}], ",", 
         SqrtBox[
          RowBox[{
           RowBox[{"2", " ", "n"}], "+", "1"}]]}], "]"}], ",", "Ni"}], 
      "]"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", ">", "0"}], "&&", 
      RowBox[{"\[Mu]", ">", "0"}], "&&", 
      RowBox[{"Ni", ">", "0"}], "&&", 
      RowBox[{"n", ">", "0"}], "&&", 
      RowBox[{"mean", ">", "0"}], "&&", 
      RowBox[{"var", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649010440557178*^9, 3.649010477708708*^9}, {
  3.649010542483786*^9, 3.6490105575415277`*^9}, {3.649011270757709*^9, 
  3.649011290681102*^9}, {3.649011324456079*^9, 3.6490113246149473`*^9}, {
  3.649011357856283*^9, 3.649011382759396*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "n", "+", "Ni"}], ")"}], "2"], 
    RowBox[{"2", "+", 
     RowBox[{"4", " ", "n"}]}]]}], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "mean"}], " ", "Ni"}], "+", "\[Mu]"}], ")"}], "2"], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ni", " ", "var"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"2", " ", "\[Pi]"}], "]"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "n"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ni", " ", "var"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6490104796446323`*^9, 3.649010590028496*^9, 3.649011292238353*^9, 
   3.649011326667344*^9, {3.64901136196812*^9, 3.6490113899301863`*^9}}]
}, Open  ]],

Cell["There are 4 solutions, pick out the only real solution", "Text",
 CellChangeTimes->{{3.6490520295720367`*^9, 3.649052040517447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"logProd", "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "n", "+", "Ni"}], ")"}], "2"], 
      RowBox[{"2", "+", 
       RowBox[{"4", " ", "n"}]}]]}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "mean"}], " ", "Ni"}], "+", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ni", " ", "var"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"2", " ", "\[Pi]"}], "]"}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "n"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ni", " ", "var"}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"logProd", ",", "Ni"}], "]"}], "\[Equal]", "0"}], ",", "Ni"}], 
    "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6490114188733377`*^9, 3.64901145398731*^9}, {
  3.649011526657741*^9, 3.6490115434520082`*^9}, {3.649052469833934*^9, 
  3.649052497634671*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Ni", "\[Rule]", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"6", " ", 
       SuperscriptBox["var", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["mean", "2"], " ", "var"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["mean", "2"], " ", "n", " ", "var"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["var", "2"]}], "-", 
       RowBox[{"2", " ", "n", " ", 
        SuperscriptBox["var", "2"]}], "+", 
       RowBox[{"4", " ", "var", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["var", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["mean", "4"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "n"}]}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "-", 
               RowBox[{"20", " ", "n"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["n", "2"]}]}], ")"}], " ", 
             SuperscriptBox["var", "2"]}], "+", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "4"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["mean", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "n"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}], ")"}], 
        "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["mean", "6"], " ", 
            SuperscriptBox["var", "3"]}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["mean", "6"], " ", "n", " ", 
            SuperscriptBox["var", "3"]}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["mean", "6"], " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "3"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["mean", "6"], " ", 
            SuperscriptBox["n", "3"], " ", 
            SuperscriptBox["var", "3"]}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["mean", "4"], " ", 
            SuperscriptBox["var", "4"]}], "+", 
           RowBox[{"18", " ", 
            SuperscriptBox["mean", "4"], " ", "n", " ", 
            SuperscriptBox["var", "4"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "4"], " ", 
            SuperscriptBox["n", "3"], " ", 
            SuperscriptBox["var", "4"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["var", "5"]}], "-", 
           RowBox[{"36", " ", 
            SuperscriptBox["mean", "2"], " ", "n", " ", 
            SuperscriptBox["var", "5"]}], "-", 
           RowBox[{"72", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "5"]}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["n", "3"], " ", 
            SuperscriptBox["var", "5"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["var", "6"]}], "-", 
           RowBox[{"42", " ", "n", " ", 
            SuperscriptBox["var", "6"]}], "+", 
           RowBox[{"60", " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "6"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["n", "3"], " ", 
            SuperscriptBox["var", "6"]}], "-", 
           RowBox[{"54", " ", 
            SuperscriptBox["var", "5"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"108", " ", "n", " ", 
            SuperscriptBox["var", "5"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["mean", "4"], " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "4"], " ", "n", " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "4"], " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["var", "4"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["mean", "2"], " ", "n", " ", 
            SuperscriptBox["var", "4"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{"48", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "4"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["var", "5"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{"84", " ", "n", " ", 
            SuperscriptBox["var", "5"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"24", " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["var", "5"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"108", " ", "mean", " ", 
            SuperscriptBox["var", "4"], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"216", " ", "mean", " ", "n", " ", 
            SuperscriptBox["var", "4"], " ", "\[Mu]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"42", " ", 
            SuperscriptBox["mean", "2"], " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "4"]}], "-", 
           RowBox[{"84", " ", 
            SuperscriptBox["mean", "2"], " ", "n", " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "4"]}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["var", "4"], " ", 
            SuperscriptBox["\[Sigma]", "4"]}], "-", 
           RowBox[{"24", " ", "n", " ", 
            SuperscriptBox["var", "4"], " ", 
            SuperscriptBox["\[Sigma]", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["var", "3"], " ", 
            SuperscriptBox["\[Sigma]", "6"]}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["var", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["mean", "4"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"20", " ", "n"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["var", "2"]}], "-", 
                   RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[Sigma]", "4"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["mean", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
                    
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}], "3"],
                 "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["mean", "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "3"]}], "-", 
                   RowBox[{"108", " ", "mean", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", "var", " ", 
                    "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                   RowBox[{"6", " ", 
                    SuperscriptBox["mean", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
                    
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
                   RowBox[{"3", " ", 
                    SuperscriptBox["mean", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"14", " ", "n"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["var", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"14", " ", 
                    SuperscriptBox["\[Sigma]", "4"]}]}], ")"}]}], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"21", " ", "n"}], "-", 
                    RowBox[{"30", " ", 
                    SuperscriptBox["n", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "3"]}]}], ")"}], " ", 
                    SuperscriptBox["var", "3"]}], "+", 
                    RowBox[{"12", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                    SuperscriptBox["\[Sigma]", "4"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Sigma]", "6"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["var", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"14", " ", "n"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], ")"}]}]}],
                   ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["mean", "6"], " ", 
           SuperscriptBox["var", "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["mean", "6"], " ", "n", " ", 
           SuperscriptBox["var", "3"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["mean", "6"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "3"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["mean", "6"], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox["var", "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["mean", "4"], " ", 
           SuperscriptBox["var", "4"]}], "+", 
          RowBox[{"18", " ", 
           SuperscriptBox["mean", "4"], " ", "n", " ", 
           SuperscriptBox["var", "4"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "4"], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox["var", "4"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["var", "5"]}], "-", 
          RowBox[{"36", " ", 
           SuperscriptBox["mean", "2"], " ", "n", " ", 
           SuperscriptBox["var", "5"]}], "-", 
          RowBox[{"72", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "5"]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox["var", "5"]}], "-", 
          RowBox[{"10", " ", 
           SuperscriptBox["var", "6"]}], "-", 
          RowBox[{"42", " ", "n", " ", 
           SuperscriptBox["var", "6"]}], "+", 
          RowBox[{"60", " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "6"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["n", "3"], " ", 
           SuperscriptBox["var", "6"]}], "-", 
          RowBox[{"54", " ", 
           SuperscriptBox["var", "5"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"108", " ", "n", " ", 
           SuperscriptBox["var", "5"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["mean", "4"], " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "4"], " ", "n", " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "4"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["var", "4"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["mean", "2"], " ", "n", " ", 
           SuperscriptBox["var", "4"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"48", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "4"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["var", "5"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"84", " ", "n", " ", 
           SuperscriptBox["var", "5"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["var", "5"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"108", " ", "mean", " ", 
           SuperscriptBox["var", "4"], " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"216", " ", "mean", " ", "n", " ", 
           SuperscriptBox["var", "4"], " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"42", " ", 
           SuperscriptBox["mean", "2"], " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "4"]}], "-", 
          RowBox[{"84", " ", 
           SuperscriptBox["mean", "2"], " ", "n", " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "4"]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["var", "4"], " ", 
           SuperscriptBox["\[Sigma]", "4"]}], "-", 
          RowBox[{"24", " ", "n", " ", 
           SuperscriptBox["var", "4"], " ", 
           SuperscriptBox["\[Sigma]", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["var", "3"], " ", 
           SuperscriptBox["\[Sigma]", "6"]}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["var", "6"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["mean", "4"]}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"20", " ", "n"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                   SuperscriptBox["var", "2"]}], "-", 
                  RowBox[{"8", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Sigma]", "4"]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["mean", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
                    
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}], "3"],
                "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["mean", "6"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "3"]}], "-", 
                  RowBox[{"108", " ", "mean", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", "var", " ", 
                   "\[Mu]", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}], "-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["mean", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var"}], "+", 
                    
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "+", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["mean", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"14", " ", "n"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["var", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"14", " ", 
                    SuperscriptBox["\[Sigma]", "4"]}]}], ")"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"21", " ", "n"}], "-", 
                    RowBox[{"30", " ", 
                    SuperscriptBox["n", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "3"]}]}], ")"}], " ", 
                    SuperscriptBox["var", "3"]}], "+", 
                    RowBox[{"12", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "var", " ", 
                    SuperscriptBox["\[Sigma]", "4"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Sigma]", "6"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["var", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"14", " ", "n"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], ")"}]}]}],
                  ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6490114357489347`*^9, 3.649011454901442*^9}, {
  3.649011533889453*^9, 3.6490115523825502`*^9}, {3.6490524801906757`*^9, 
  3.6490525099947243`*^9}}]
}, Open  ]],

Cell["\<\
For Laplace approximation, need Hessian. Differs in the third digit only!\
\>", "Text",
 CellChangeTimes->{{3.6490525050958853`*^9, 3.649052513479987*^9}, {
  3.64905418383851*^9, 3.649054200794076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parValues", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", " ", 
       RowBox[{"5", " ", "1.41"}]}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "3"}], ",", 
      RowBox[{"n", "\[Rule]", "5"}], ",", 
      RowBox[{"var", "\[Rule]", " ", 
       RowBox[{"Variance", "[", "samples", "]"}]}], ",", 
      RowBox[{"mean", "\[Rule]", 
       RowBox[{"Mean", "[", "samples", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"Ni", " ", "mean"}], ",", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"Ni", " ", "var"}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], "]"}], ",", "\[Mu]"}], "]"}], 
    " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "n"}], "+", "1"}]]}], "]"}], ",", "Ni"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "Ni"}], "]"}], "\[Equal]", "0"}], ",", "Ni"}], "]"}],
    "[", 
   RowBox[{"[", "1", "]"}], "]"}], "/.", "parValues"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"2", " ", "Pi"}], 
          RowBox[{"-", 
           RowBox[{"D", "[", 
            RowBox[{"logProd", ",", 
             RowBox[{"{", 
              RowBox[{"Ni", ",", "2"}], "}"}]}], "]"}]}]]]}], "/.", 
       "parValues"}], "/.", "%"}], "//", "Re"}], ",", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "/.", "parValues"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ni", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.649051845176408*^9, 3.649051896237167*^9}, {
   3.649052169030024*^9, 3.649052247398747*^9}, {3.649052441856207*^9, 
   3.64905245212037*^9}, {3.6490525493532476`*^9, 3.649052572898411*^9}, 
   3.6490535690821037`*^9, {3.649053713270883*^9, 3.649054024801977*^9}, {
   3.649054082622426*^9, 3.64905408511721*^9}, 3.649054135487076*^9, {
   3.6490571460660467`*^9, 3.649057160586564*^9}, {3.6490597967700863`*^9, 
   3.649059825896452*^9}, {3.649059961731429*^9, 3.649060031115735*^9}, {
   3.64906006331282*^9, 3.649060071862577*^9}, {3.649061123714899*^9, 
   3.649061123848104*^9}, {3.649061243225649*^9, 3.649061251321713*^9}, {
   3.6490613110722647`*^9, 3.649061321147894*^9}, {3.649061366003406*^9, 
   3.649061383551798*^9}, {3.649061667558895*^9, 3.649061673912526*^9}, {
   3.6490617983146973`*^9, 3.649061801997356*^9}, {3.6490619794364443`*^9, 
   3.649062014598871*^9}, {3.64906248607053*^9, 3.64906248898426*^9}, {
   3.649062597849969*^9, 3.649062600725479*^9}, {3.649062768424533*^9, 
   3.649062775017262*^9}, {3.649063417309984*^9, 3.649063442173521*^9}, {
   3.6490647698215647`*^9, 3.649064781430558*^9}, {3.649065117695404*^9, 
   3.649065125640191*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Ni", "\[Rule]", "4.703761820772343`"}], "}"}]], "Output",
 CellChangeTimes->{{3.649052221901702*^9, 3.649052248547763*^9}, {
   3.649052445036042*^9, 3.649052452857983*^9}, 3.649052575369378*^9, 
   3.649053571898847*^9, {3.649053714618855*^9, 3.649053739328907*^9}, {
   3.6490538084760303`*^9, 3.6490538713746767`*^9}, 3.6490539557409897`*^9, 
   3.649054030000321*^9, 3.6490540862719297`*^9, 3.649054138443283*^9, 
   3.649057161556944*^9, 3.64905982706768*^9, 3.6490599736434717`*^9, 
   3.649060032623597*^9, {3.649060064598208*^9, 3.649060072557973*^9}, 
   3.649061133698947*^9, 3.649061260340962*^9, 3.649061322422072*^9, 
   3.649061385182428*^9, 3.6490616753419123`*^9, 3.649061803053886*^9, 
   3.649061982906789*^9, 3.649062015357479*^9, 3.6490624899115887`*^9, 
   3.649062601364451*^9, {3.649062770308614*^9, 3.6490627755261993`*^9}, {
   3.649063427509104*^9, 3.6490634432655077`*^9}, 3.649064782595772*^9, 
   3.64906512704333*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06948176902256328`", ",", "0.06918460922059907`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.649052221901702*^9, 3.649052248547763*^9}, {
   3.649052445036042*^9, 3.649052452857983*^9}, 3.649052575369378*^9, 
   3.649053571898847*^9, {3.649053714618855*^9, 3.649053739328907*^9}, {
   3.6490538084760303`*^9, 3.6490538713746767`*^9}, 3.6490539557409897`*^9, 
   3.649054030000321*^9, 3.6490540862719297`*^9, 3.649054138443283*^9, 
   3.649057161556944*^9, 3.64905982706768*^9, 3.6490599736434717`*^9, 
   3.649060032623597*^9, {3.649060064598208*^9, 3.649060072557973*^9}, 
   3.649061133698947*^9, 3.649061260340962*^9, 3.649061322422072*^9, 
   3.649061385182428*^9, 3.6490616753419123`*^9, 3.649061803053886*^9, 
   3.649061982906789*^9, 3.649062015357479*^9, 3.6490624899115887`*^9, 
   3.649062601364451*^9, {3.649062770308614*^9, 3.6490627755261993`*^9}, {
   3.649063427509104*^9, 3.6490634432655077`*^9}, 3.649064782595772*^9, 
   3.64906512713597*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compute the luminosity integral for general case including small n\
\>", "Section",
 CellChangeTimes->{{3.6490582026419353`*^9, 3.649058223911419*^9}, {
  3.649061548361497*^9, 3.64906155110108*^9}}],

Cell["\<\
Agreement with Gaussian approx. 
n=1: 0.103 (general) vs. 0.097(Gaussian) (Laplace not usable anymore)
n=3: 0.106 (general) vs. 0.0930(Gaussian) (Laplace differs in 3rd digit)
n=5: 0.0846 (general) vs. 0.0779(Gaussian)
n=10: 0.0613 (general) vs. 0.0587(Gaussian)
n=15: 0.0505 (general) vs. 0.0491 (Gaussian)
n=35: 0.03237 (general) vs. 0.03197 (Gaussian)
n=100: 0.019839 (general) vs. 0.019842 (Gaussian)\
\>", "Text",
 CellChangeTimes->{{3.6490588249851847`*^9, 3.649058829658606*^9}, {
  3.6490615390365*^9, 3.649061602612183*^9}, {3.649061752144038*^9, 
  3.649061779219339*^9}, {3.649061848153286*^9, 3.649061871056053*^9}, {
  3.6490619718789577`*^9, 3.649061974718144*^9}, {3.649062040690483*^9, 
  3.649062051829458*^9}, {3.649062538650634*^9, 3.649062587384225*^9}, {
  3.649062632684682*^9, 3.6490626675976467`*^9}, {3.649062796497497*^9, 
  3.649062852676243*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ni", ",", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"empiricalDist", "[", "Ni", "]"}], ",", "L"}], "]"}], 
           RowBox[{"PNgivenn", "[", 
            RowBox[{"Ni", ",", "n"}], "]"}], " ", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "L"}], "]"}]}], 
          "/.", "parValues"}], ",", 
         RowBox[{"{", 
          RowBox[{"L", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Ni", ",", "1", ",", "15"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Total", "[", "data", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6490607825950003`*^9, 3.649060782724044*^9}, {
   3.649061028092828*^9, 3.649061030925643*^9}, {3.649061298044877*^9, 
   3.649061298976725*^9}, {3.649061425305401*^9, 3.649061426918137*^9}, {
   3.64906146285918*^9, 3.6490614634694366`*^9}, {3.649061693809286*^9, 
   3.649061719169932*^9}, {3.6490618218962584`*^9, 3.6490618220203257`*^9}, 
   3.6490620244269047`*^9, {3.64906251324094*^9, 3.649062514044715*^9}, {
   3.649062615002993*^9, 3.6490626159104033`*^9}, {3.649062782160255*^9, 
   3.649062785956986*^9}, {3.649065131987639*^9, 3.649065141689824*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.0013822158041334423`}, {2., 0.004869232016064124}, {3., 
      0.010571390709901715`}, {4., 0.01563212565729841}, {5., 
      0.016562881472456006`}, {6., 0.012953050867486998`}, {7., 
      0.007621933884555621}, {8., 0.0034192208504028915`}, {9., 
      0.001180725570090792}, {10., 0.00031583619908750777`}, {11., 
      0.00006579198311797344}, {12., 0.000010751740910292878`}, {13., 
      1.3735640693796612`*^-6}, {14., 1.390685594276192*^-7}, {15., 
      1.1009022636688109`*^-8}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.78125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{1., 15.}, {0, 0.016562881472456006`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.649060778250401*^9, 3.649060790787693*^9}, 
   3.6490610488827667`*^9, 3.649061157235573*^9, 3.649061273278759*^9, 
   3.649061341942485*^9, 3.64906140841614*^9, 3.649061439841419*^9, 
   3.649061489696287*^9, {3.649061710434917*^9, 3.6490617327506027`*^9}, {
   3.649061819731431*^9, 3.6490618304465857`*^9}, 3.649061996843574*^9, 
   3.649062040040758*^9, 3.6490625186341057`*^9, {3.649062611790502*^9, 
   3.649062621454073*^9}, 3.6490628209853373`*^9, 3.6490648327180367`*^9, {
   3.649065139654714*^9, 3.649065151396037*^9}}],

Cell[BoxData["0.07458668039715723`"], "Output",
 CellChangeTimes->{{3.649060778250401*^9, 3.649060790787693*^9}, 
   3.6490610488827667`*^9, 3.649061157235573*^9, 3.649061273278759*^9, 
   3.649061341942485*^9, 3.64906140841614*^9, 3.649061439841419*^9, 
   3.649061489696287*^9, {3.649061710434917*^9, 3.6490617327506027`*^9}, {
   3.649061819731431*^9, 3.6490618304465857`*^9}, 3.649061996843574*^9, 
   3.649062040040758*^9, 3.6490625186341057`*^9, {3.649062611790502*^9, 
   3.649062621454073*^9}, 3.6490628209853373`*^9, 3.6490648327180367`*^9, {
   3.649065139654714*^9, 3.649065151401587*^9}}]
}, Open  ]],

Cell["\<\
NIntegrate is slow, replace with Laplace. Not useful because derivative of \
KDE not well known\
\>", "Text",
 CellChangeTimes->{{3.649062065285284*^9, 3.649062075490346*^9}, {
  3.649062713811627*^9, 3.6490627265523167`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{926, 1053},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[787, 28, 186, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[998, 34, 2895, 86, 244, "Input"],
Cell[3896, 122, 290, 8, 43, "Output"],
Cell[4189, 132, 284, 9, 45, "Output"],
Cell[4476, 143, 213, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4726, 155, 2321, 50, 152, "Input"],
Cell[7050, 207, 43458, 726, 231, 29202, 492, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50545, 938, 1021, 28, 55, "Input"],
Cell[51569, 968, 728, 21, 67, "Output"],
Cell[52300, 991, 404, 10, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52741, 1006, 306, 7, 32, "Input"],
Cell[53050, 1015, 72, 1, 32, "Output"]
}, Open  ]],
Cell[53137, 1019, 162, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[53324, 1026, 795, 21, 55, "Input"],
Cell[54122, 1049, 835, 27, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54994, 1081, 1407, 44, 89, "Input"],
Cell[56404, 1127, 661, 23, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57102, 1155, 497, 14, 40, "Input"],
Cell[57602, 1171, 332, 10, 45, "Output"]
}, Open  ]],
Cell[57949, 1184, 116, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[58090, 1189, 587, 15, 55, "Input"],
Cell[58680, 1206, 6054, 110, 235, "Output"],
Cell[64737, 1318, 170, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64956, 1326, 178, 2, 65, "Section"],
Cell[65137, 1330, 516, 12, 32, "Input"],
Cell[65656, 1344, 340, 9, 32, "Input"],
Cell[65999, 1355, 175, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[66199, 1363, 1180, 23, 99, "Input"],
Cell[67382, 1388, 14006, 404, 233, "Output"]
}, Open  ]],
Cell[81403, 1795, 112, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[81540, 1800, 2399, 59, 165, "Input"],
Cell[83942, 1861, 622, 12, 23, "Message"],
Cell[84567, 1875, 798, 11, 32, "Output"],
Cell[85368, 1888, 796, 11, 32, "Output"],
Cell[86167, 1901, 796, 11, 32, "Output"],
Cell[86966, 1914, 94866, 1578, 439, "Output"]
}, Open  ]],
Cell[181847, 3495, 176, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[182048, 3503, 917, 24, 77, "Input"],
Cell[182968, 3529, 977, 24, 77, "Output"],
Cell[183948, 3555, 78259, 1490, 271, "Output"]
}, Open  ]],
Cell[262222, 5048, 135, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[262382, 5053, 1642, 41, 77, "Input"],
Cell[264027, 5096, 506, 11, 59, "Message"],
Cell[264536, 5109, 2736, 60, 143, "Output"]
}, Open  ]],
Cell[267287, 5172, 217, 3, 32, "Input"],
Cell[267507, 5177, 466, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[267998, 5188, 1697, 40, 99, "Input"],
Cell[269698, 5230, 22185, 495, 242, "Output"]
}, Open  ]],
Cell[291898, 5728, 118, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[292041, 5733, 1460, 41, 121, "Input"],
Cell[293504, 5776, 3473, 83, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297014, 5864, 965, 25, 77, "Input"],
Cell[297982, 5891, 629, 13, 41, "Message"],
Cell[298614, 5906, 23813, 401, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322464, 6312, 2005, 49, 187, "Input"],
Cell[324472, 6363, 4307, 103, 231, "Output"]
}, Open  ]],
Cell[328794, 6469, 414, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[329233, 6480, 2558, 64, 143, "Input"],
Cell[331794, 6546, 829, 16, 41, "Message"],
Cell[332626, 6564, 40479, 762, 226, "Output"]
}, Open  ]],
Cell[373120, 7329, 474, 11, 52, "Text"],
Cell[373597, 7342, 1111, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[374733, 7374, 3310, 75, 231, "Input"],
Cell[378046, 7451, 29173, 565, 242, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[407268, 8022, 117, 1, 65, "Section"],
Cell[407388, 8025, 1510, 37, 140, "Input"],
Cell[408901, 8064, 413, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[409339, 8075, 1127, 22, 55, "Input"],
Cell[410469, 8099, 15298, 261, 232, "Output"]
}, Open  ]],
Cell[425782, 8363, 572, 10, 91, "Text"],
Cell[CellGroupData[{
Cell[426379, 8377, 1377, 45, 96, "Input"],
Cell[427759, 8424, 1233, 32, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429029, 8461, 830, 26, 70, "Input"],
Cell[429862, 8489, 967, 26, 54, "Output"]
}, Open  ]],
Cell[430844, 8518, 507, 14, 32, "Input"],
Cell[431354, 8534, 168, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[431547, 8541, 1263, 35, 118, "Input"],
Cell[432813, 8578, 3677, 111, 283, "Output"]
}, Open  ]],
Cell[436505, 8692, 3952, 117, 460, "Input"],
Cell[440460, 8811, 946, 19, 96, "Text"],
Cell[CellGroupData[{
Cell[441431, 8834, 2721, 71, 262, "Input"],
Cell[444155, 8907, 1624, 22, 32, "Output"],
Cell[445782, 8931, 1624, 22, 32, "Output"],
Cell[447409, 8955, 3025, 58, 243, "Output"],
Cell[450437, 9015, 2035, 34, 55, "Output"]
}, Open  ]],
Cell[452487, 9052, 1691, 38, 130, "Text"],
Cell[CellGroupData[{
Cell[454203, 9094, 68, 1, 32, "Input"],
Cell[454274, 9097, 1854, 42, 234, "Output"]
}, Open  ]],
Cell[456143, 9142, 179, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[456347, 9151, 770, 21, 55, "Input"],
Cell[457120, 9174, 3750, 107, 283, "Output"]
}, Open  ]],
Cell[460885, 9284, 332, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[461242, 9297, 1125, 34, 134, "Input"],
Cell[462370, 9333, 164, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462571, 9341, 210, 5, 32, "Input"],
Cell[462784, 9348, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462893, 9354, 2019, 58, 65, "Input"],
Cell[464915, 9414, 1597, 44, 53, "Output"]
}, Open  ]],
Cell[466527, 9461, 321, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[466873, 9471, 1294, 36, 160, "Input"],
Cell[468170, 9509, 1070, 35, 52, "Output"]
}, Open  ]],
Cell[469255, 9547, 138, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[469418, 9552, 1461, 47, 96, "Input"],
Cell[470882, 9601, 23552, 556, 625, "Output"]
}, Open  ]],
Cell[494449, 10160, 213, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[494687, 10168, 3307, 84, 284, "Input"],
Cell[497997, 10254, 987, 15, 32, "Output"],
Cell[498987, 10271, 1004, 16, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500040, 10293, 209, 4, 65, "Section"],
Cell[500252, 10299, 884, 16, 171, "Text"],
Cell[CellGroupData[{
Cell[501161, 10319, 1726, 40, 187, "Input"],
Cell[502890, 10361, 1871, 39, 230, "Output"],
Cell[504764, 10402, 600, 8, 32, "Output"]
}, Open  ]],
Cell[505379, 10413, 236, 5, 31, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
